ca65 V2.13.2 - (C) Copyright 1998-2005 Ullrich von Bassewitz
Main file   : basic-16k.s
Current file: basic-16k.s

000000r 1               ;*********************************************************************
000000r 1               ; COMMODORE VIC 20 BOOT USING BASIC 2.0
000000r 1               ; written by Robert Hurst <robert@hurst-ri.us>
000000r 1               ; updated version: 30-Oct-2011
000000r 1               ;
000000r 1               		.fileopt author,	"Robert Hurst"
000000r 1                       .fileopt comment,	"Omega Fury"
000000r 1                       .fileopt compiler,	"VIC 20 ASSEMBLER"
000000r 1               
000000r 1               		.include "VIC-SSS-MMX.h"
000000r 2               ;*********************************************************************
000000r 2               ; Commodore VIC 20 Software Sprite Stack - MMX Edition
000000r 2               ; written by Robert Hurst <robert@hurst-ri.us>
000000r 2               ; last updated: 30-Oct-2011
000000r 2               ;
000000r 2               ; === IMPORTANT ===
000000r 2               ; required symbols you need to define for your game:
000000r 2               ;
000000r 2               ;SPRITEDEF4	= $10		; un-comment this for "repeating" flag usage
000000r 2               ;SPRITEDEF5	= $20		; un-comment this for "ghost" flag usage
000000r 2               ;SPRITEDEF6	= $40		; un-comment this for "collision" flag usage
000000r 2               SPRITEWIDE	= 1			; comment this out to skip 16-bit wide sprites
000000r 2               SPRITEMAX	= 15		; reserves this many SPRITE registers (1-?)
000000r 2               SSSNULL		= $A0		; your character used for a blank background
000000r 2               
000000r 2               ;*********************************************************************
000000r 2               ; some pertinent VIC 20 symbols
000000r 2               ;
000000r 2               RNDSEED		= $8B		; -$8F: BASIC RND seed value
000000r 2               JIFFYH		= $A0		; jiffy clock high
000000r 2               JIFFYM		= $A1		; jiffy clock med
000000r 2               JIFFYL		= $A2		; jiffy clock low
000000r 2               DATANEXT	= $A6		; DATASETTE pointer (0-191)
000000r 2               KEYCHARS	= $C6		; number of characters in KEYBUF (0-10)
000000r 2               RVSFLAG		= $C7		; character reverse flag
000000r 2               PLAYROWS	= $C8		; current screen row length (16-24)
000000r 2               CURSOR		= $CC		; cursor enable (0=flash)
000000r 2               CRSRCHAR	= $CE		; character under cursor
000000r 2               SCRNLINE	= $D1		; pointer to cursor's screen line
000000r 2               CRSRCOL		= $D3		; position of cursor on screen line
000000r 2               PLAYCOLS	= $D5		; current screen line length (16-24)
000000r 2               CRSRROW		= $D6		; screen row where cursor is
000000r 2               COLORLINE	= $F3		; pointer to cursor's color line
000000r 2               INPUT		= $0200		; -$0258: 89-character BASIC INPUT buffer
000000r 2               KEYBUF		= $0277		; -$0280: 10-character keyboard buffer
000000r 2               COLORCODE	= $0286		; current cursor color
000000r 2               CRSRCOLOR	= $0287		; color under cursor
000000r 2               SCRNPAGE	= $0288		; active screen memory page (unexpanded = $1E)
000000r 2               SHIFTMODE	= $0291		; 0=allow, 128=locked
000000r 2               SCROLLFLAG	= $0292		; auto scrolldown flag
000000r 2               ACOPY		= $030C		; temp storage for A register
000000r 2               XCOPY		= $030D		; temp storage for X register
000000r 2               YCOPY		= $030E		; temp storage for Y register
000000r 2               DATASETTE	= $033C		; -$03FB: 192-byte tape input buffer
000000r 2               MASK		= $8270		; ROM character $40 - Shift-M (\)
000000r 2               VIC			= $9000		; start of Video Interface Chip registers
000000r 2               MACHINE		= $EDE4		; NTSC=$05, PAL=$0C
000000r 2               STOPKEY		= $F770		; check for STOP key pressed
000000r 2               RESET		= $FD22		; warm startup
000000r 2               CHROUT		= $FFD2		; print character with cursor translation
000000r 2               GETIN		= $FFE4		; get a character from keyboard queue
000000r 2               
000000r 2               ;*********************************************************************
000000r 2               ; volatile VIC-SSS symbols
000000r 2               ;
000000r 2               VECTORBG	= $01		; sprite temp pointer to an image source
000000r 2               DIRTYLINE2	= $59		; -$70: 24 screen rows for last dirty column +1
000000r 2               NEWDIRT		= $BF		; bit 7=VIDEO1, 6=VIDEO2, 5=PLAYFIELD, 4=STATIC
000000r 2               DIRTYLINE	= $D9		; -$F0: 24 screen rows for starting dirty column
000000r 2               DIRTMAP		= $F1		; pointer to PLAYCOLOR for dirty-bit updates
000000r 2               VECTORFG	= $F7		; sprite temp pointer to an image target
000000r 2               VECTOR1		= $F9		; sprite temp pointer
000000r 2               VECTOR2		= $FB		; sprite temp pointer
000000r 2               VECTOR3		= $FD		; sprite temp pointer
000000r 2               FPS			= $0285		; number of VIC re-directions every 64-jiffies
000000r 2               PENDING		= $0293		; next video page: $10 or $12
000000r 2               ACTUAL		= $0294		; save VIC startup video page
000000r 2               VSYNC		= $0295		; set when waiting for vertical sync(s)
000000r 2               VSYNC2		= $0296		; frames skipped
000000r 2               VCOUNT		= $0297		; current SSSFLIP count
000000r 2               SSSCLIPX	= $0298		; pixels to right border: 8 * (PLAYCOLS + 2)
000000r 2               SSSCLIPY	= $0299		; pixels to bottom border: 8 * (PLAYROWS + 2)
000000r 2               R0			= $029A		; unused temporary register
000000r 2               R1			= $029B		; unused temporary register
000000r 2               R2			= $029C		; unused temporary register
000000r 2               R3			= $029D		; unused temporary register
000000r 2               R4			= $029E		; unused temporary register
000000r 2               
000000r 2               ;*********************************************************************
000000r 2               ; FRAME REGISTERS
000000r 2               ;
000000r 2               VICFRAME1	= $1000		; first video buffer
000000r 2               VICCOLOR1	= $9400		; first color buffer
000000r 2               VICFRAME2	= $1200		; second video buffer
000000r 2               VICCOLOR2	= $9600		; second color buffer
000000r 2               PLAYFIELD	= $1400		; write-pending screen buffer
000000r 2               PLAYCOLOR	= $1600		; write-pending color buffer (bits 0-3)
000000r 2               						; bit 4 = static cell bit, sprites go behind
000000r 2               						; bit 5 = dirty bit for pending page
000000r 2               						; bit 6 = dirty bit for video page 2 only
000000r 2               						; bit 7 = dirty bit for video page 1 only
000000r 2               
000000r 2               ;*********************************************************************
000000r 2               ; SPRITE REGISTERS
000000r 2               ;
000000r 2               .global SSSBUF			; defaults to $1800, but can be relocated by linker
000000r 2               .global SPRITEBACK		; character code this sprite is in collision with
000000r 2               .global	SPRITEBUFH		; pointer within sprite image buffer @ $1800 - $19FF
000000r 2               .global	SPRITEBUFL
000000r 2               .global	SPRITEC1H		; pointer within sprite display character pool
000000r 2               .global	SPRITEC1L
000000r 2               .global SPRITEC2H		; pointer within sprite display character pool
000000r 2               .global SPRITEC2L
000000r 2               .global	SPRITECOL		; 4-bit VIC color code
000000r 2               .global SPRITECX		; sprite collision X-coord
000000r 2               .global SPRITECY		; sprite collision Y-coord
000000r 2               .global	SPRITEDEF		; matrix definition:
000000r 2               						; bit 0: height		0 = 8px; 1 = 16px
000000r 2               						; bit 1: width		0 = 8px; 1 = 16px
000000r 2               						; bit 2: float Y	0=fixed cell; 1=vertical float
000000r 2               						; bit 3: float X	0=fixed cell; 1=horizontal float
000000r 2               						; bit 4: repeat		0=independent; 1=re-use previous
000000r 2               						; bit 5: ghost		0=merge image; 1=invert image
000000r 2               						; bit 6: collision	0=ignore; 1=detect
000000r 2               						; bit 7: enabled	0=invisible; 1=visible
000000r 2               .global	SPRITEH			; number of raster lines (1-16)
000000r 2               .global	SPRITEIMGH		; pointer to source graphic for rendering at 0,0
000000r 2               .global	SPRITEIMGL
000000r 2               .global	SPRITEX			; horizontal pixel coordinate, visible >0 - <SSSCLIPX
000000r 2               .global	SPRITEY			; vertical pixel coordinate, visible >0 - <SSSCLIPY
000000r 2               .global	SPRITEZ			; bit 0: last rendered (0 = SPRITEC1; 1 = SPRITEC2)
000000r 2               						; bit 1: fast copy (0 = merge; 1 = copy)
000000r 2               						; bit 3: sprite-pixel collision with a non-static cell
000000r 2                                       ; bit 4: foreground clipped flag
000000r 2                                       ; bit 5: background is all SSSNULLs
000000r 2               						; bit 6: copy/merge into alternate sprite char pool
000000r 2               						; bit 7: copy/shift sprite image into its buffer
000000r 2               ;--- above registers repeat for each sprite allocated ---
000000r 2               .global sss				; screen row index -- computed by PLAYCOLS
000000r 2               .global	sssALLOC		; table of sprite sizes (in custom characters)
000000r 2               .global	sssCOLS			; sprite size in columns: 1, 2, 3
000000r 2               .global	sssROWS			; sprite size in rows: 1, 2, 3
000000r 2               ;--- above registers need storage assigned
000000r 2               sssNUM		= $90		; current sprite # (0-1)
000000r 2               sssX		= $92		; current sprite width: 0=8w, 1=16w, 2=24w
000000r 2               sssY		= $93		; current sprite height: 0=8h, 1=16h, 2=24h
000000r 2               sssBYTES	= $94		; number of bytes this sprite occupies
000000r 2               sssNEXT		= $95		; offset to adjacent character
000000r 2               sssCHAR		= $96		; next custom character to use on PENDING frame
000000r 2               sssDX		= $97		; delta X counter
000000r 2               sssDY		= $98		; delta Y counter
000000r 2               sssLINE		= $9A		; current sprite make line: 0, 8, 16
000000r 2               sssLINENUM	= $9B		; current sprite line countdown
000000r 2               sssROR1		= $9C		; bit shift register column #1
000000r 2               sssROR2		= $9D		; bit shift register column #2
000000r 2               .ifdef SPRITEWIDE
000000r 2               sssROR3		= $9E		; bit shift register column #3
000000r 2               .endif
000000r 2               sssXFER		= $9F		; transfer to custom character counter
000000r 2               SPRITES		= $B7		; number of active sprite registers (0 - SPRITEMAX)
000000r 2               
000000r 2               ;*********************************************************************
000000r 2               ; Common API entry points
000000r 2               ;
000000r 2               .global	SSSINIT			; must be called first
000000r 2               .global	SSSIRQ			; necessary only if video flip timing is required
000000r 2               .global	SSSCELL
000000r 2               .global	SSSCLEAR
000000r 2               .global	SSSPLOT
000000r 2               .global	SSSPRINT
000000r 2               .global	SSSPRINTS
000000r 2               .global	SSSPEEK			; can be called to read a char from the PLAYFIELD
000000r 2               .global	SSSPEEKXY
000000r 2               .global	SSSPOKE			; can be called to put a char on the PLAYFIELD
000000r 2               .global	SSSCREATE		; must be called to allocate a sprite buffer
000000r 2               .global SSSUSE			; must be called prior to manipulating a sprite
000000r 2               .global	SSSANIM			; must be called to load a sprite image
000000r 2               .global	SSSMOVEXY		; must be called to put a sprite in the visible area
000000r 2               .global SSSTOUCH		; can be called to force a sprite to re-render
000000r 2               .global	SSSREFRESH		; can be called to force all sprites to re-render
000000r 2               .global	SSSFFLIP		; same as FLIP, but may drop a frame refresh for speed
000000r 2               .global	SSSFLIP			; must be called to see updates on the VIC display
000000r 2               ;
000000r 2               ; used internally by SSS, but may have use by program:
000000r 2               ;
000000r 2               .global	SSSCOMMIT
000000r 2               .global	SSSIMAGE
000000r 2               .global SSSMASK
000000r 2               .global	SSSPLOTS
000000r 2               .global	SSSPEEKS
000000r 2               .global	SSSREAD
000000r 2               .global SSSUPDATE
000000r 2               .global	SSSWRITE
000000r 2               ;
000000r 2               ; useful .asciiz translations for SSSPRINTS
000000r 2               ;
000000r 2               .charmap '@', $80
000000r 2               .charmap 'A', $81
000000r 2               .charmap 'B', $82
000000r 2               .charmap 'C', $83
000000r 2               .charmap 'D', $84
000000r 2               .charmap 'E', $85
000000r 2               .charmap 'F', $86
000000r 2               .charmap 'G', $87
000000r 2               .charmap 'H', $88
000000r 2               .charmap 'I', $89
000000r 2               .charmap 'J', $8A
000000r 2               .charmap 'K', $8B
000000r 2               .charmap 'L', $8C
000000r 2               .charmap 'M', $8D
000000r 2               .charmap 'N', $8E
000000r 2               .charmap 'O', $8F
000000r 2               .charmap 'P', $90
000000r 2               .charmap 'Q', $91
000000r 2               .charmap 'R', $92
000000r 2               .charmap 'S', $93
000000r 2               .charmap 'T', $94
000000r 2               .charmap 'U', $95
000000r 2               .charmap 'V', $96
000000r 2               .charmap 'W', $97
000000r 2               .charmap 'X', $98
000000r 2               .charmap 'Y', $99
000000r 2               .charmap 'Z', $9A
000000r 2               .charmap '{', $9B
000000r 2               .charmap '|', $9C	; British pound symbol
000000r 2               .charmap '}', $9D
000000r 2               .charmap '^', $9E	; uparrow symbol
000000r 2               .charmap '`', $9F	; left arrow symbol
000000r 2               .charmap ' ', SSSNULL
000000r 2               .charmap '!', $A1
000000r 2               .charmap '"', $A2
000000r 2               .charmap '#', $A3
000000r 2               .charmap '$', $A4
000000r 2               .charmap '%', $A5
000000r 2               .charmap '&', $A6
000000r 2               .charmap ''', $A7
000000r 2               .charmap '(', $A8
000000r 2               .charmap ')', $A9
000000r 2               .charmap '*', $AA
000000r 2               .charmap '+', $AB
000000r 2               .charmap ',', $AC
000000r 2               .charmap '-', $AD
000000r 2               .charmap '.', $AE
000000r 2               .charmap '/', $AF
000000r 2               .charmap '0', $B0
000000r 2               .charmap '1', $B1
000000r 2               .charmap '2', $B2
000000r 2               .charmap '3', $B3
000000r 2               .charmap '4', $B4
000000r 2               .charmap '5', $B5
000000r 2               .charmap '6', $B6
000000r 2               .charmap '7', $B7
000000r 2               .charmap '8', $B8
000000r 2               .charmap '9', $B9
000000r 2               .charmap ':', $BA
000000r 2               .charmap ';', $BB
000000r 2               .charmap '<', $BC
000000r 2               .charmap '=', $BD
000000r 2               .charmap '>', $BE
000000r 2               .charmap '?', $BF
000000r 2               .charmap '~', $DE	; PI symbol
000000r 2               
000000r 2               
000000r 1               
000000r 1               ;*********************************************************************
000000r 1               ; Commodore BASIC 2.0 program
000000r 1               ;
000000r 1               ; LOAD "omega-fury.prg",8
000000r 1               ; RUN
000000r 1               ;
000000r 1               		.segment "BASIC"
000000r 1               
000000r 1  rr rr        		.word	RUN		; load address
000002r 1  rr rr        RUN:	.word	@end	; next line link
000004r 1  DB 07        		.word	2011	; line number
000006r 1  9E           		.byte	$9E		; BASIC token: SYS
000007r 1  rr           		.byte	<(MAIN / 1000 .mod 10) + $30
000008r 1  rr           		.byte	<(MAIN / 100 .mod 10) + $30
000009r 1  rr           		.byte	<(MAIN / 10 .mod 10) + $30
00000Ar 1  rr           		.byte	<(MAIN / 1 .mod 10) + $30
00000Br 1  00           		.byte	0		; end of line
00000Cr 1  00 00        @end:	.word	0		; end of program
00000Er 1               
00000Er 1               ;*********************************************************************
00000Er 1               ; Starting entry point for this program
00000Er 1               ;
00000Er 1               		.segment "STARTUP"
000000r 1               
000000r 1               MAIN:
000000r 1  AE FC FF     		LDX $FFFC
000003r 1  AC FD FF     		LDY $FFFD
000006r 1  8E 18 03     		STX $0318
000009r 1  8C 19 03     		STY $0319		; enable RESTORE key as RESET
00000Cr 1  AD E4 ED     		LDA MACHINE
00000Fr 1  C9 05        		CMP #$05
000011r 1  D0 08        		BNE PAL
000013r 1               		;
000013r 1               		; NTSC setup
000013r 1  A2 43        NTSC:	LDX #<@NTSC		; load the timer low-byte latches
000015r 1  A0 42        		LDY #>@NTSC
000017r 1  A9 75        		LDA #$75		; raster line 234/235
000019r 1  D0 06        		BNE IRQSYNC
00001Br 1               @NTSC = $4243			; (261 * 65 - 2)
00001Br 1               		;
00001Br 1               		; PAL setup
00001Br 1  A2 86        PAL:	LDX #<@PAL		; load the timer low-byte latches
00001Dr 1  A0 56        		LDY #>@PAL
00001Fr 1  A9 82        		LDA #$82		; raster line 260/261
000021r 1               @PAL = $5686			; (312 * 71 - 2)
000021r 1               		;
000021r 1               IRQSYNC:
000021r 1  CD 04 90     		CMP VIC+$04
000024r 1  D0 FB        		BNE IRQSYNC
000026r 1  8E 26 91     		STX $9126		; load T1 latch low
000029r 1  8C 25 91     		STY $9125		; load T1 latch high, and transfer both to T1 counter
00002Cr 1               
00002Cr 1               
00002Cr 1               ;*********************************************************************
00002Cr 1               ; Now that all the VIC startup initialization stuff is completed,
00002Cr 1               ; you can append one-time startup code/data here, i.e., like a splash
00002Cr 1               ; title screen.  Then, you must jump to your CODE segment, linked
00002Cr 1               ; outside of VIC's internal RAM address space ...
00002Cr 1               ;
00002Cr 1               RUNONCE:
00002Cr 1               		; init VIC
00002Cr 1  EE 00 90     		INC VIC			; adjust left border to accommodate one less column
00002Fr 1  AD 01 90     		LDA VIC+$01
000032r 1  38           		SEC
000033r 1  E9 04        		SBC #$04		; adjust top scan line to accomodate extra row
000035r 1  8D 01 90     		STA VIC+$01
000038r 1  A9 15        		LDA #$00+$15	; set for videoram @ $1400 with 21-columns
00003Ar 1  8D 02 90     		STA VIC+$02		; video matrix address + columns
00003Dr 1  A9 B0        		LDA #$B0		; $B0 = 10110000 = 24-rows + 8x8 height
00003Fr 1  8D 03 90     		STA VIC+$03		; rows / character height
000042r 1  A9 DF        		LDA #$DF		; set video @ $1400 and char table @ $1C00
000044r 1  8D 05 90     		STA VIC+$05
000047r 1  A9 EC        		LDA #%11101100
000049r 1  8D 0F 90     		STA VIC+$0F		; lt blue screen / magenta border
00004Cr 1               		; reset sound channels
00004Cr 1  A9 00        @cont:	LDA #$00
00004Er 1  A8           		TAY
00004Fr 1  99 0A 90     @snd:	STA VIC+$0A,Y
000052r 1  C8           		INY
000053r 1  C0 04        		CPY #$04
000055r 1  D0 F8        		BNE @snd
000057r 1  A9 1F        		LDA #$1F		; white & highest
000059r 1  8D 0E 90     		STA VIC+$0E		; auxiliary color & volume
00005Cr 1  A9 80        		LDA #$80
00005Er 1  8D 91 02     		STA SHIFTMODE	; locked
000061r 1               		;
000061r 1  A2 rr        		LDX #<SPLASHCOLOR
000063r 1  A0 rr        		LDY #>SPLASHCOLOR
000065r 1  86 F7        		STX VECTORFG
000067r 1  84 F8        		STY VECTORFG+1
000069r 1  A2 00        		LDX #$00
00006Br 1  A0 94        		LDY #$94
00006Dr 1  86 01        		STX VECTORBG
00006Fr 1  84 02        		STY VECTORBG+1
000071r 1  A2 02        		LDX #$02
000073r 1  A0 00        		LDY #$00
000075r 1  B1 F7        @fill:	LDA (VECTORFG),Y
000077r 1  91 01        		STA (VECTORBG),Y
000079r 1  C8           		INY
00007Ar 1  D0 F9        		BNE @fill
00007Cr 1  E6 F8        		INC VECTORFG+1
00007Er 1  E6 02        		INC VECTORBG+1
000080r 1  CA           		DEX
000081r 1  D0 F2        		BNE @fill
000083r 1               		;
000083r 1               @loop:	;
000083r 1  AD 8D 02     @key:	LDA $028D
000086r 1  29 02        		AND #$02		; got C= key?
000088r 1  D0 19        		BNE @go
00008Ar 1  20 E4 FF     		JSR GETIN
00008Dr 1  C9 03        		CMP #$03		; got STOP ?
00008Fr 1  D0 03        		BNE @no
000091r 1  4C 22 FD     		JMP RESET
000094r 1  A9 FF        @no:	LDA #$FF
000096r 1  8D 22 91     		STA $9122
000099r 1  AD 11 91     		LDA $9111
00009Cr 1  29 20        		AND #$20		; got FIRE ?
00009Er 1  F0 03        		BEQ @go
0000A0r 1  4C rr rr     		JMP @loop
0000A3r 1  4C rr rr     @go:	JMP RESTART
0000A6r 1               
0000A6r 1               		.segment "SPLASH"
000000r 1               SPLASHDATA:
000000r 1  A0 A0 A0 DA  		.byte	$A0,$A0,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$A0,$A0
000004r 1  A0 DA A0 DA  
000008r 1  A0 DA A0 DA  
000015r 1  A0 97 85 8C  		.byte	$A0,$97,$85,$8C,$83,$8F,$8D,$85,$A0,$96,$89,$83,$A0,$B2,$B0,$A0,$95,$93,$85,$92,$A0
000019r 1  83 8F 8D 85  
00001Dr 1  A0 96 89 83  
00002Ar 1  A0 A0 A0 DA  		.byte	$A0,$A0,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$DA,$A0,$A0,$A0
00002Er 1  A0 DA A0 DA  
000032r 1  A0 DA A0 DA  
00003Fr 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0
000043r 1  A0 A0 A0 A0  
000047r 1  A0 A0 A0 A0  
000054r 1  A0 94 88 89  		.byte	$A0,$94,$88,$89,$93,$A0,$87,$81,$8D,$85,$A0,$92,$85,$91,$95,$89,$92,$85,$93,$A0,$A0
000058r 1  93 A0 87 81  
00005Cr 1  8D 85 A0 92  
000069r 1  A0 81 A0 8A  		.byte	$A0,$81,$A0,$8A,$8F,$99,$93,$94,$89,$83,$8B,$A0,$94,$8F,$A0,$90,$8C,$81,$99,$A0,$A0
00006Dr 1  8F 99 93 94  
000071r 1  89 83 8B A0  
00007Er 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0
000082r 1  A0 A0 A0 A0  
000086r 1  A0 A0 A0 A0  
000093r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0
000097r 1  A0 A0 A0 A0  
00009Br 1  A0 A0 A0 A0  
0000A8r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$00,$08,$10,$18,$20,$28,$30,$38,$40,$48,$50,$A0,$A0,$A0,$A0,$A0
0000ACr 1  A0 00 08 10  
0000B0r 1  18 20 28 30  
0000BDr 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$01,$09,$11,$19,$21,$29,$31,$39,$41,$49,$51,$A0,$A0,$A0,$A0,$A0
0000C1r 1  A0 01 09 11  
0000C5r 1  19 21 29 31  
0000D2r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$02,$0A,$12,$1A,$22,$2A,$32,$3A,$42,$4A,$52,$A0,$A0,$A0,$A0,$A0
0000D6r 1  A0 02 0A 12  
0000DAr 1  1A 22 2A 32  
0000E7r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$03,$0B,$13,$1B,$23,$2B,$33,$3B,$43,$4B,$53,$A0,$A0,$A0,$A0,$A0
0000EBr 1  A0 03 0B 13  
0000EFr 1  1B 23 2B 33  
0000FCr 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$04,$0C,$14,$1C,$24,$2C,$34,$3C,$44,$4C,$54,$A0,$A0,$A0,$A0,$A0
000100r 1  A0 04 0C 14  
000104r 1  1C 24 2C 34  
000111r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$05,$0D,$15,$1D,$25,$2D,$35,$3D,$45,$4D,$55,$A0,$A0,$A0,$A0,$A0
000115r 1  A0 05 0D 15  
000119r 1  1D 25 2D 35  
000126r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$06,$0E,$16,$1E,$26,$2E,$36,$3E,$46,$4E,$56,$A0,$A0,$A0,$A0,$A0
00012Ar 1  A0 06 0E 16  
00012Er 1  1E 26 2E 36  
00013Br 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$07,$0F,$17,$1F,$27,$2F,$37,$3F,$47,$4F,$57,$A0,$A0,$A0,$A0,$A0
00013Fr 1  A0 07 0F 17  
000143r 1  1F 27 2F 37  
000150r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0
000154r 1  A0 A0 A0 A0  
000158r 1  A0 A0 A0 A0  
000165r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0
000169r 1  A0 A0 A0 A0  
00016Dr 1  A0 A0 A0 A0  
00017Ar 1  BD 8F 8D 85  		.byte	$BD,$8F,$8D,$85,$87,$81,$A0,$86,$95,$92,$99,$BD,$A0,$A0,$92,$B1,$B0,$AE,$B3,$B0,$A0
00017Er 1  87 81 A0 86  
000182r 1  95 92 99 BD  
00018Fr 1  A0 64 B2 B0  		.byte	$A0,$64,$B2,$B0,$B1,$B1,$A0,$92,$8F,$82,$85,$92,$94,$A0,$88,$95,$92,$93,$94,$A0,$A0
000193r 1  B1 B1 A0 92  
000197r 1  8F 82 85 92  
0001A4r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$8D,$81,$84,$85,$A0,$89,$8E,$A0,$95,$93,$81,$A0,$A0,$A0,$A0,$A0
0001A8r 1  A0 8D 81 84  
0001ACr 1  85 A0 89 8E  
0001B9r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$A0,$58,$5B,$5E,$61,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0
0001BDr 1  A0 A0 58 5B  
0001C1r 1  5E 61 A0 A0  
0001CEr 1  A0 90 92 85  		.byte	$A0,$90,$92,$85,$93,$93,$59,$5C,$5F,$62,$86,$8F,$92,$A0,$94,$89,$94,$8C,$85,$A0,$A0
0001D2r 1  93 93 59 5C  
0001D6r 1  5F 62 86 8F  
0001E3r 1  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$A0,$5A,$5D,$60,$63,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0,$A0
0001E7r 1  A0 A0 5A 5D  
0001EBr 1  60 63 A0 A0  
0001F8r 1  xx xx xx xx  		.res	8
0001FCr 1  xx xx xx xx  
000200r 1               SPLASHCOLOR:
000200r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$01,$00,$02,$00,$03,$00,$04,$00,$05,$00,$06,$00,$07,$00,$00,$00
000204r 1  00 01 00 02  
000208r 1  00 03 00 04  
000215r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
000219r 1  00 00 00 00  
00021Dr 1  00 00 00 00  
00022Ar 1  00 00 00 07  		.byte	$00,$00,$00,$07,$00,$06,$00,$05,$00,$04,$00,$03,$00,$02,$00,$01,$00,$00,$00,$00,$00
00022Er 1  00 06 00 05  
000232r 1  00 04 00 03  
00023Fr 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
000243r 1  00 00 00 00  
000247r 1  00 00 00 00  
000254r 1  00 03 03 03  		.byte	$00,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$00,$00
000258r 1  03 03 03 03  
00025Cr 1  03 03 03 03  
000269r 1  00 03 03 03  		.byte	$00,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$03,$00,$00
00026Dr 1  03 03 03 03  
000271r 1  03 03 03 03  
00027Er 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
000282r 1  00 00 00 00  
000286r 1  00 00 00 00  
000293r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
000297r 1  00 00 00 00  
00029Br 1  00 00 00 00  
0002A8r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$0F,$0F,$0F,$08,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00
0002ACr 1  00 0F 0F 0F  
0002B0r 1  08 08 08 08  
0002BDr 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$0F,$0F,$0F,$08,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00
0002C1r 1  00 0F 0F 0F  
0002C5r 1  08 08 08 08  
0002D2r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$08,$08,$0A,$0A,$0E,$0E,$0E,$0E,$08,$08,$08,$00,$00,$00,$00,$00
0002D6r 1  00 08 08 0A  
0002DAr 1  0A 0E 0E 0E  
0002E7r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$08,$08,$0A,$0A,$0E,$0E,$0E,$0E,$0A,$0A,$0A,$00,$00,$00,$00,$00
0002EBr 1  00 08 08 0A  
0002EFr 1  0A 0E 0E 0E  
0002FCr 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$0A,$00,$00,$00,$00,$00
000300r 1  00 08 08 08  
000304r 1  08 08 08 08  
000311r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$0A,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00
000315r 1  00 08 08 08  
000319r 1  08 08 0A 08  
000326r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$08,$08,$08,$08,$0A,$0A,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00
00032Ar 1  00 08 08 08  
00032Er 1  08 0A 0A 08  
00033Br 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$0A,$0A,$0A,$0A,$0A,$08,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00
00033Fr 1  00 0A 0A 0A  
000343r 1  0A 0A 08 08  
000350r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
000354r 1  00 00 00 00  
000358r 1  00 00 00 00  
000365r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
000369r 1  00 00 00 00  
00036Dr 1  00 00 00 00  
00037Ar 1  02 07 07 07  		.byte	$02,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$02,$00,$03,$03,$03,$03,$03,$03,$03,$00
00037Er 1  07 07 07 07  
000382r 1  07 07 07 02  
00038Fr 1  00 06 06 06  		.byte	$00,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$06,$00,$00
000393r 1  06 06 06 06  
000397r 1  06 06 06 06  
0003A4r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$03,$03,$03,$03,$03,$03,$03,$00,$02,$01,$06,$00,$00,$00,$00,$00
0003A8r 1  00 03 03 03  
0003ACr 1  03 03 03 03  
0003B9r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$00,$0E,$0E,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0003BDr 1  00 00 0E 0E  
0003C1r 1  0E 0E 00 00  
0003CEr 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$00,$0E,$0E,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0003D2r 1  00 00 0E 0E  
0003D6r 1  0E 0E 00 00  
0003E3r 1  00 00 00 00  		.byte	$00,$00,$00,$00,$00,$00,$0E,$0E,$0E,$0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
0003E7r 1  00 00 0E 0E  
0003EBr 1  0E 0E 00 00  
0003F8r 1  xx xx xx xx  		.res	8
0003FCr 1  xx xx xx xx  
000400r 1               
000400r 1               ;*********************************************************************
000400r 1               ; VIC Software Sprite Stack 2010 (VIC-SSS-MMX)
000400r 1               ;
000400r 1               ; The above BASIC loader will be overwritten by SSS upon its
000400r 1               ; initialization (SSSINIT).  The linker will fill this reserved space
000400r 1               ; with values used for the dual video frame buffers, play field, and
000400r 1               ; the sprite image buffers: 4096 - 6207 ($1000 - $1BFF)
000400r 1               ;
000400r 1               ; $1000 - $11FF		VICFRAME1 - first video buffer
000400r 1               ; $1200 - $13FF		VICFRAME2 - second video buffer
000400r 1               ; $1400 - $15FF		PLAYFIELD - write-pending screen buffer
000400r 1               ; $1600 - $17FF		PLAYCOLOR - write-pending color / dirty buffer
000400r 1               ; these address spaces are sized upon value of SPRITEMAX (16)
000400r 1               ; $1800 - $19FF		Sprite image buffer
000400r 1               ; $1A00 - $1AFF		Sprite registers
000400r 1               ;
000400r 1               		.segment "SSSBUF"
000000r 1               SSSBUF:					; this can be resized smaller as required --
000000r 1  xx xx xx xx  		.res 49 * 8		; if all 64-chars are used by sprites, that
000004r 1  xx xx xx xx  
000008r 1  xx xx xx xx  
000188r 1               						; exhausts all 128 custom characters for
000188r 1               						; double-buffering (x2)
000188r 1               ;
000188r 1               ; SPRITE REGISTERS
000188r 1               ;
000188r 1  xx xx xx xx  SPRITEBUFH:	.res SPRITEMAX	; pointer within sprite image buffer
00018Cr 1  xx xx xx xx  
000190r 1  xx xx xx xx  
000197r 1  xx xx xx xx  SPRITEBUFL:	.res SPRITEMAX	; pointer within sprite image buffer
00019Br 1  xx xx xx xx  
00019Fr 1  xx xx xx xx  
0001A6r 1  xx xx xx xx  SPRITEC1H:	.res SPRITEMAX	; pointer within sprite display character pool
0001AAr 1  xx xx xx xx  
0001AEr 1  xx xx xx xx  
0001B5r 1  xx xx xx xx  SPRITEC1L:	.res SPRITEMAX	; pointer within sprite display character pool
0001B9r 1  xx xx xx xx  
0001BDr 1  xx xx xx xx  
0001C4r 1  xx xx xx xx  SPRITEC2H:	.res SPRITEMAX	; pointer within sprite display character pool
0001C8r 1  xx xx xx xx  
0001CCr 1  xx xx xx xx  
0001D3r 1  xx xx xx xx  SPRITEC2L:	.res SPRITEMAX	; pointer within sprite display character pool
0001D7r 1  xx xx xx xx  
0001DBr 1  xx xx xx xx  
0001E2r 1  xx xx xx xx  SPRITECOL:	.res SPRITEMAX	; 4-bit VIC color code
0001E6r 1  xx xx xx xx  
0001EAr 1  xx xx xx xx  
0001F1r 1  xx xx xx xx  SPRITEDEF:	.res SPRITEMAX	; function/matrix definition (see explanation below)
0001F5r 1  xx xx xx xx  
0001F9r 1  xx xx xx xx  
000200r 1  xx xx xx xx  SPRITEH:	.res SPRITEMAX	; number of raster lines (1-16)
000204r 1  xx xx xx xx  
000208r 1  xx xx xx xx  
00020Fr 1  xx xx xx xx  SPRITEIMGH:	.res SPRITEMAX	; pointer to source graphic for rendering at 0,0
000213r 1  xx xx xx xx  
000217r 1  xx xx xx xx  
00021Er 1  xx xx xx xx  SPRITEIMGL:	.res SPRITEMAX	; pointer to source graphic for rendering at 0,0
000222r 1  xx xx xx xx  
000226r 1  xx xx xx xx  
00022Dr 1  xx xx xx xx  SPRITEX:	.res SPRITEMAX	; horizontal pixel coordinate, visible >0 - <SSSCLIPX
000231r 1  xx xx xx xx  
000235r 1  xx xx xx xx  
00023Cr 1  xx xx xx xx  SPRITEY:	.res SPRITEMAX	; vertical pixel coordinate, visible >0 - <SSSCLIPY
000240r 1  xx xx xx xx  
000244r 1  xx xx xx xx  
00024Br 1  xx xx xx xx  SPRITEZ:	.res SPRITEMAX	; bit 0: last rendered (0 = SPRITEC1; 1 = SPRITEC2)
00024Fr 1  xx xx xx xx  
000253r 1  xx xx xx xx  
00025Ar 1               							; bit 3: sprite collision
00025Ar 1               							; bit 4: sprite image is clipped by a static cell
00025Ar 1               							; bit 5: background is all SSSNULLs
00025Ar 1               							; bit 6: copy/merge into alternate sprite character pool
00025Ar 1               							; bit 7: copy/shift sprite image into its buffer
00025Ar 1               ;
00025Ar 1               ; SPRITEDEF is a bit-structure of these characteristics:
00025Ar 1               ; - height		bit 0: 0 = 8px; 1 = 16px
00025Ar 1               ; - width		bit 1: 0 = 8px; 1 = 16px
00025Ar 1               ; - float Y		bit 2: flag: 0=fixed cell, 1=vertical float
00025Ar 1               ; - float X		bit 3: flag: 0=fixed cell, 1=horizontal float
00025Ar 1               ; - ghost		bit 5: flag: 0=merge image; 1=invert image
00025Ar 1               ; - collision	bit 6: flag: 0=fast copy; 1=detect
00025Ar 1               ; - enabled		bit 7: flag: 0=invisible; 1=visible
00025Ar 1               ;
00025Ar 1               						; SSS runtime variables:
00025Ar 1  xx xx xx xx  sss:		.res 24*2	; screen row index, computed from PLAYCOLS in SSSINIT
00025Er 1  xx xx xx xx  
000262r 1  xx xx xx xx  
00028Ar 1               ;
00028Ar 1               ; other initialized data can be appended here:
00028Ar 1               ;
00028Ar 1               			.segment "RODATA"
000000r 1               sssALLOC:	; 8x8, 16x8, 8x16, 16x16
000000r 1  08 10 10 20  			.byte	8,16,16,32	; fixed:	1,2,2,4
000004r 1  10 18 20 30  			.byte	16,24,32,48	; float Y:	2,3,4,6
000008r 1  10 20 18 30  			.byte	16,32,24,48	; float X:	2,4,3,6
00000Cr 1  20 30 30 48  			.byte	32,48,48,72	; both:		4,6,6,9
000010r 1  01 02 01 02  sssROWS:	.byte	1,2,1,2	; fixed
000014r 1  02 03 02 03  			.byte	2,3,2,3	; float Y
000018r 1  01 02 01 02  			.byte	1,2,1,2	; float X
00001Cr 1  02 03 02 03  			.byte	2,3,2,3	; both
000020r 1  01 01 02 02  sssCOLS:	.byte	1,1,2,2	; fixed
000024r 1  01 01 02 02  			.byte	1,1,2,2	; float Y
000028r 1  02 02 03 03  			.byte	2,2,3,3	; float X
00002Cr 1  02 02 03 03  			.byte	2,2,3,3	; both
000030r 1               ;
000030r 1               ; other initialized data can be appended here:
000030r 1  00           FRAME:		.byte $00	; must be first variable -- for zeroing
000031r 1  00           JUMPMARK:	.byte $00
000032r 1  00           ALERTS:		.byte $00
000033r 1  00           BOOMED:		.byte $00
000034r 1  00           KLAXON:		.byte $00
000035r 1  00           DROPPED:	.byte $00
000036r 1  00           EMPTY:		.byte $00
000037r 1  00           FLASHING:	.byte $00
000038r 1  00           HEARTBEATS:	.byte $00
000039r 1  00           HIT:		.byte $00
00003Ar 1  00           PHASER:		.byte $00
00003Br 1  00           PULSE:		.byte $00
00003Cr 1  00           SHOOTING:	.byte $00
00003Dr 1  00           WARPED:		.byte $00
00003Er 1  00           ACTION:		.byte $00
00003Fr 1  00           ACTION2:	.byte $00
000040r 1  00           ACTIONS:	.byte $00
000041r 1  00           COLLISION:	.byte $00
000042r 1  00           DIRECTION:	.byte $00
000043r 1  00           FIRE:		.byte $00
000044r 1  00           TITLE:		.byte $00
000045r 1  xx xx xx     BOLT:		.res 3
000048r 1  xx xx xx     BOLTDIR:	.res 3
00004Br 1  00           ENERGIZER:	.byte $00
00004Cr 1  00           HITMARK:	.byte $00
00004Dr 1  00           BIGHITMARK:	.byte $00
00004Er 1  00           NAVI:		.byte $00
00004Fr 1  00           SF2010:		.byte $00
000050r 1  00           SPIN:		.byte $00
000051r 1  00           THRUST:		.byte $00
000052r 1  xx xx xx xx  NMETHRUST:	.res 4
000056r 1  00           INERTIA:	.byte $00
000057r 1  xx xx xx xx  NMEDIR:		.res 4
00005Br 1  00           SPEED:		.byte $00
00005Cr 1  xx xx xx xx  NMESPEED:	.res 4
000060r 1  00           OMEGAHP:	.byte $00	; center Omegan objective
000061r 1  00           FURYHP:		.byte $00
000062r 1  xx xx xx xx  NMEHP:		.res 4
000066r 1  00           MINE:		.byte $00
000067r 1  xx xx xx xx  MINES:		.res 16
00006Br 1  xx xx xx xx  
00006Fr 1  xx xx xx xx  
000077r 1  xx xx xx xx  MINEX:		.res 16
00007Br 1  xx xx xx xx  
00007Fr 1  xx xx xx xx  
000087r 1  xx xx xx xx  MINEY:		.res 16
00008Br 1  xx xx xx xx  
00008Fr 1  xx xx xx xx  
000097r 1  00           BOOMB4:		.byte $00
000098r 1  00           BOOMER:		.byte $00
000099r 1  00           BOOMC:		.byte $00
00009Ar 1  00           BOOMX:		.byte $00
00009Br 1  00           BOOMY:		.byte $00
00009Cr 1  00           BOOMDX:		.byte $00
00009Dr 1  00           BOOMDY:		.byte $00
00009Er 1  00           NEUTRON:	.byte $00
00009Fr 1  00           NEUTRONDIR:	.byte $00
0000A0r 1  xx xx xx xx  NME:		.res 4
0000A4r 1  xx xx xx xx  NMEPLAN:	.res 4		; 0=travel, 1=pursue, 2=evade, 3=objective
0000A8r 1  xx xx xx xx  NMELEN:		.res 4		; repeat PLAN for LEN turns
0000ACr 1  xx xx xx xx  NMESHOT:	.res 4
0000B0r 1  xx xx xx xx  NMESHOTDIR:	.res 4
0000B4r 1  xx xx xx xx  NMETURN:	.res 4
0000B8r 1  00           LOOPX:		.byte $00
0000B9r 1  00           MISSION:	.byte $00
0000BAr 1  00           MISSIONX:	.byte $00
0000BBr 1  00           OBJECTIVE:	.byte $00	; number of active objectives to destroy
0000BCr 1  00           SHIPS:		.byte $00
0000BDr 1  xx xx xx     SCORE:		.res 3
0000C0r 1               
0000C0r 1               ;*********************************************************************
0000C0r 1               ; VIC Custom Graphic Characters
0000C0r 1               ;
0000C0r 1               ; If < 64 will be used for the software sprite stack, the remaining
0000C0r 1               ; unused characters can be used for other custom graphics, beginning
0000C0r 1               ; at $1C00 where "@", "A", "B", ... characters can be redefined.
0000C0r 1               ;
0000C0r 1               ; Do not use this as an initialized segment if you plan on linking
0000C0r 1               ; this source as a future game cartridge later.  You must COPY any
0000C0r 1               ; read-only data into this address space.
0000C0r 1               ;
0000C0r 1               ; If your data was saved from some tool in binary format, you can
0000C0r 1               ; include that binary file here as:
0000C0r 1               ;		.incbin "graphics.dat"
0000C0r 1               ;
0000C0r 1               ; else, just enter each 8x8 values here, such as:
0000C0r 1               ;		.byte	$FF,$81,$81,$81,$81,$81,$81,$FF
0000C0r 1               ; or:
0000C0r 1               ;		.byte	%11111111	; square
0000C0r 1               ;		.byte	%10000001
0000C0r 1               ;		.byte	%10000001
0000C0r 1               ;		.byte	%10000001
0000C0r 1               ;		.byte	%10000001
0000C0r 1               ;		.byte	%10000001
0000C0r 1               ;		.byte	%10000001
0000C0r 1               ;		.byte	%11111111
0000C0r 1               ;
0000C0r 1               		.segment "MYCHAR"
000000r 1               CUSTOM:	;.res $0400
000000r 1               @FURY:
000000r 1               	; 0,0
000000r 1  0F           		.byte	%00001111
000001r 1  0F           		.byte	%00001111
000002r 1  0F           		.byte	%00001111
000003r 1  0F           		.byte	%00001111
000004r 1  0E           		.byte	%00001110
000005r 1  0E           		.byte	%00001110
000006r 1  39           		.byte	%00111001
000007r 1  39           		.byte	%00111001
000008r 1               	; 1,0
000008r 1  29           		.byte	%00101001
000009r 1  39           		.byte	%00111001
00000Ar 1  39           		.byte	%00111001
00000Br 1  3E           		.byte	%00111110
00000Cr 1  3E           		.byte	%00111110
00000Dr 1  3F           		.byte	%00111111
00000Er 1  FF           		.byte	%11111111
00000Fr 1  FF           		.byte	%11111111
000010r 1               	; 2,0
000010r 1  FF           		.byte	%11111111
000011r 1  FF           		.byte	%11111111
000012r 1  FF           		.byte	%11111111
000013r 1  FF           		.byte	%11111111
000014r 1  FF           		.byte	%11111111
000015r 1  FF           		.byte	%11111111
000016r 1  FF           		.byte	%11111111
000017r 1  FF           		.byte	%11111111
000018r 1               	; 3,0
000018r 1  0F           		.byte	%00001111
000019r 1  00           		.byte	%00000000
00001Ar 1  02           		.byte	%00000010
00001Br 1  0A           		.byte	%00001010
00001Cr 1  06           		.byte	%00000110
00001Dr 1  0A           		.byte	%00001010
00001Er 1  06           		.byte	%00000110
00001Fr 1  06           		.byte	%00000110
000020r 1               	; 4,0
000020r 1  0A           		.byte	%00001010
000021r 1  06           		.byte	%00000110
000022r 1  0A           		.byte	%00001010
000023r 1  02           		.byte	%00000010
000024r 1  00           		.byte	%00000000
000025r 1  02           		.byte	%00000010
000026r 1  0A           		.byte	%00001010
000027r 1  2A           		.byte	%00101010
000028r 1               	; 5,0
000028r 1  1A           		.byte	%00011010
000029r 1  2A           		.byte	%00101010
00002Ar 1  1A           		.byte	%00011010
00002Br 1  2A           		.byte	%00101010
00002Cr 1  1A           		.byte	%00011010
00002Dr 1  1A           		.byte	%00011010
00002Er 1  2A           		.byte	%00101010
00002Fr 1  1A           		.byte	%00011010
000030r 1               	; 6,0
000030r 1  2A           		.byte	%00101010
000031r 1  1A           		.byte	%00011010
000032r 1  2A           		.byte	%00101010
000033r 1  0A           		.byte	%00001010
000034r 1  02           		.byte	%00000010
000035r 1  00           		.byte	%00000000
000036r 1  03           		.byte	%00000011
000037r 1  0F           		.byte	%00001111
000038r 1               	; 7,0
000038r 1  0B           		.byte	%00001011
000039r 1  02           		.byte	%00000010
00003Ar 1  00           		.byte	%00000000
00003Br 1  00           		.byte	%00000000
00003Cr 1  00           		.byte	%00000000
00003Dr 1  00           		.byte	%00000000
00003Er 1  00           		.byte	%00000000
00003Fr 1  00           		.byte	%00000000
000040r 1               	;
000040r 1               	; 0,1
000040r 1  FF           		.byte	%11111111
000041r 1  FF           		.byte	%11111111
000042r 1  D5           		.byte	%11010101
000043r 1  D5           		.byte	%11010101
000044r 1  6A           		.byte	%01101010
000045r 1  6A           		.byte	%01101010
000046r 1  AA           		.byte	%10101010
000047r 1  AA           		.byte	%10101010
000048r 1               	; 1,1
000048r 1  AA           		.byte	%10101010
000049r 1  AA           		.byte	%10101010
00004Ar 1  AA           		.byte	%10101010
00004Br 1  6A           		.byte	%01101010
00004Cr 1  6A           		.byte	%01101010
00004Dr 1  99           		.byte	%10011001
00004Er 1  D9           		.byte	%11011001
00004Fr 1  5D           		.byte	%01011101
000050r 1               	; 2,1
000050r 1  FF           		.byte	%11111111
000051r 1  FF           		.byte	%11111111
000052r 1  FF           		.byte	%11111111
000053r 1  FF           		.byte	%11111111
000054r 1  FF           		.byte	%11111111
000055r 1  FF           		.byte	%11111111
000056r 1  FF           		.byte	%11111111
000057r 1  FF           		.byte	%11111111
000058r 1               	; 3,1
000058r 1  FF           		.byte	%11111111
000059r 1  AA           		.byte	%10101010
00005Ar 1  AF           		.byte	%10101111
00005Br 1  BF           		.byte	%10111111
00005Cr 1  BF           		.byte	%10111111
00005Dr 1  FF           		.byte	%11111111
00005Er 1  FF           		.byte	%11111111
00005Fr 1  FF           		.byte	%11111111
000060r 1               	; 4,1
000060r 1  FF           		.byte	%11111111
000061r 1  BF           		.byte	%10111111
000062r 1  BF           		.byte	%10111111
000063r 1  AF           		.byte	%10101111
000064r 1  AA           		.byte	%10101010
000065r 1  AA           		.byte	%10101010
000066r 1  AB           		.byte	%10101011
000067r 1  AF           		.byte	%10101111
000068r 1               	; 5,1
000068r 1  BF           		.byte	%10111111
000069r 1  FF           		.byte	%11111111
00006Ar 1  FF           		.byte	%11111111
00006Br 1  FF           		.byte	%11111111
00006Cr 1  FF           		.byte	%11111111
00006Dr 1  FF           		.byte	%11111111
00006Er 1  FF           		.byte	%11111111
00006Fr 1  FF           		.byte	%11111111
000070r 1               	; 6,1
000070r 1  FF           		.byte	%11111111
000071r 1  BF           		.byte	%10111111
000072r 1  AF           		.byte	%10101111
000073r 1  BF           		.byte	%10111111
000074r 1  FF           		.byte	%11111111
000075r 1  FF           		.byte	%11111111
000076r 1  FF           		.byte	%11111111
000077r 1  FF           		.byte	%11111111
000078r 1               	; 7,1
000078r 1  FF           		.byte	%11111111
000079r 1  FF           		.byte	%11111111
00007Ar 1  BF           		.byte	%10111111
00007Br 1  2F           		.byte	%00101111
00007Cr 1  0B           		.byte	%00001011
00007Dr 1  02           		.byte	%00000010
00007Er 1  00           		.byte	%00000000
00007Fr 1  00           		.byte	%00000000
000080r 1               	;
000080r 1               	; 0,2
000080r 1  C0           		.byte	%11000000
000081r 1  C0           		.byte	%11000000
000082r 1  F0           		.byte	%11110000
000083r 1  F0           		.byte	%11110000
000084r 1  6C           		.byte	%01101100
000085r 1  6C           		.byte	%01101100
000086r 1  9B           		.byte	%10011011
000087r 1  9B           		.byte	%10011011
000088r 1               	; 1,2
000088r 1  9A           		.byte	%10011010
000089r 1  9B           		.byte	%10011011
00008Ar 1  9B           		.byte	%10011011
00008Br 1  6F           		.byte	%01101111
00008Cr 1  6F           		.byte	%01101111
00008Dr 1  BF           		.byte	%10111111
00008Er 1  FF           		.byte	%11111111
00008Fr 1  7F           		.byte	%01111111
000090r 1               	; 2,2
000090r 1  FF           		.byte	%11111111
000091r 1  FF           		.byte	%11111111
000092r 1  FF           		.byte	%11111111
000093r 1  FF           		.byte	%11111111
000094r 1  FF           		.byte	%11111111
000095r 1  FF           		.byte	%11111111
000096r 1  EE           		.byte	%11101110
000097r 1  BE           		.byte	%10111110
000098r 1               	; 3,2
000098r 1  BE           		.byte	%10111110
000099r 1  BE           		.byte	%10111110
00009Ar 1  BE           		.byte	%10111110
00009Br 1  BE           		.byte	%10111110
00009Cr 1  BE           		.byte	%10111110
00009Dr 1  EE           		.byte	%11101110
00009Er 1  FF           		.byte	%11111111
00009Fr 1  FF           		.byte	%11111111
0000A0r 1               	; 4,2
0000A0r 1  FF           		.byte	%11111111
0000A1r 1  FF           		.byte	%11111111
0000A2r 1  FF           		.byte	%11111111
0000A3r 1  FF           		.byte	%11111111
0000A4r 1  AF           		.byte	%10101111
0000A5r 1  FF           		.byte	%11111111
0000A6r 1  FF           		.byte	%11111111
0000A7r 1  FF           		.byte	%11111111
0000A8r 1               	; 5,2
0000A8r 1  FF           		.byte	%11111111
0000A9r 1  FF           		.byte	%11111111
0000AAr 1  FF           		.byte	%11111111
0000ABr 1  FF           		.byte	%11111111
0000ACr 1  FF           		.byte	%11111111
0000ADr 1  FF           		.byte	%11111111
0000AEr 1  FF           		.byte	%11111111
0000AFr 1  FF           		.byte	%11111111
0000B0r 1               	; 6,2
0000B0r 1  FF           		.byte	%11111111
0000B1r 1  FF           		.byte	%11111111
0000B2r 1  FF           		.byte	%11111111
0000B3r 1  FF           		.byte	%11111111
0000B4r 1  FF           		.byte	%11111111
0000B5r 1  FF           		.byte	%11111111
0000B6r 1  FF           		.byte	%11111111
0000B7r 1  FF           		.byte	%11111111
0000B8r 1               	; 7,2
0000B8r 1  FF           		.byte	%11111111
0000B9r 1  FF           		.byte	%11111111
0000BAr 1  FF           		.byte	%11111111
0000BBr 1  FF           		.byte	%11111111
0000BCr 1  FF           		.byte	%11111111
0000BDr 1  FF           		.byte	%11111111
0000BEr 1  BF           		.byte	%10111111
0000BFr 1  2A           		.byte	%00101010
0000C0r 1               	;
0000C0r 1               	; 0,3
0000C0r 1  00           		.byte	%00000000
0000C1r 1  00           		.byte	%00000000
0000C2r 1  00           		.byte	%00000000
0000C3r 1  00           		.byte	%00000000
0000C4r 1  00           		.byte	%00000000
0000C5r 1  00           		.byte	%00000000
0000C6r 1  00           		.byte	%00000000
0000C7r 1  00           		.byte	%00000000
0000C8r 1               	; 1,3
0000C8r 1  C0           		.byte	%11000000
0000C9r 1  C0           		.byte	%11000000
0000CAr 1  F0           		.byte	%11110000
0000CBr 1  F0           		.byte	%11110000
0000CCr 1  FC           		.byte	%11111100
0000CDr 1  FC           		.byte	%11111100
0000CEr 1  FF           		.byte	%11111111
0000CFr 1  FF           		.byte	%11111111
0000D0r 1               	; 2,3
0000D0r 1  FF           		.byte	%11111111
0000D1r 1  FF           		.byte	%11111111
0000D2r 1  FF           		.byte	%11111111
0000D3r 1  FF           		.byte	%11111111
0000D4r 1  FE           		.byte	%11111110
0000D5r 1  BB           		.byte	%10111011
0000D6r 1  FB           		.byte	%11111011
0000D7r 1  FB           		.byte	%11111011
0000D8r 1               	; 3,3
0000D8r 1  FB           		.byte	%11111011
0000D9r 1  FB           		.byte	%11111011
0000DAr 1  FB           		.byte	%11111011
0000DBr 1  FB           		.byte	%11111011
0000DCr 1  FB           		.byte	%11111011
0000DDr 1  FB           		.byte	%11111011
0000DEr 1  BB           		.byte	%10111011
0000DFr 1  FE           		.byte	%11111110
0000E0r 1               	; 4,3
0000E0r 1  FF           		.byte	%11111111
0000E1r 1  FF           		.byte	%11111111
0000E2r 1  FF           		.byte	%11111111
0000E3r 1  FF           		.byte	%11111111
0000E4r 1  FF           		.byte	%11111111
0000E5r 1  FF           		.byte	%11111111
0000E6r 1  FF           		.byte	%11111111
0000E7r 1  FF           		.byte	%11111111
0000E8r 1               	; 5,3
0000E8r 1  FF           		.byte	%11111111
0000E9r 1  FF           		.byte	%11111111
0000EAr 1  FF           		.byte	%11111111
0000EBr 1  FF           		.byte	%11111111
0000ECr 1  FF           		.byte	%11111111
0000EDr 1  FF           		.byte	%11111111
0000EEr 1  FF           		.byte	%11111111
0000EFr 1  FF           		.byte	%11111111
0000F0r 1               	; 6,3
0000F0r 1  FF           		.byte	%11111111
0000F1r 1  FF           		.byte	%11111111
0000F2r 1  FF           		.byte	%11111111
0000F3r 1  FF           		.byte	%11111111
0000F4r 1  FF           		.byte	%11111111
0000F5r 1  FF           		.byte	%11111111
0000F6r 1  FF           		.byte	%11111111
0000F7r 1  FF           		.byte	%11111111
0000F8r 1               	; 7,3
0000F8r 1  FF           		.byte	%11111111
0000F9r 1  FF           		.byte	%11111111
0000FAr 1  FF           		.byte	%11111111
0000FBr 1  FF           		.byte	%11111111
0000FCr 1  FF           		.byte	%11111111
0000FDr 1  FF           		.byte	%11111111
0000FEr 1  FF           		.byte	%11111111
0000FFr 1  AA           		.byte	%10101010
000100r 1               	;
000100r 1               	; 0,4
000100r 1  00           		.byte	%00000000
000101r 1  00           		.byte	%00000000
000102r 1  00           		.byte	%00000000
000103r 1  00           		.byte	%00000000
000104r 1  00           		.byte	%00000000
000105r 1  00           		.byte	%00000000
000106r 1  00           		.byte	%00000000
000107r 1  00           		.byte	%00000000
000108r 1               	; 1,4
000108r 1  00           		.byte	%00000000
000109r 1  00           		.byte	%00000000
00010Ar 1  00           		.byte	%00000000
00010Br 1  00           		.byte	%00000000
00010Cr 1  00           		.byte	%00000000
00010Dr 1  00           		.byte	%00000000
00010Er 1  00           		.byte	%00000000
00010Fr 1  00           		.byte	%00000000
000110r 1               	; 2,4
000110r 1  C0           		.byte	%11000000
000111r 1  C0           		.byte	%11000000
000112r 1  F0           		.byte	%11110000
000113r 1  FF           		.byte	%11111111
000114r 1  FE           		.byte	%11111110
000115r 1  FA           		.byte	%11111010
000116r 1  FA           		.byte	%11111010
000117r 1  FA           		.byte	%11111010
000118r 1               	; 3,4
000118r 1  FA           		.byte	%11111010
000119r 1  FA           		.byte	%11111010
00011Ar 1  FA           		.byte	%11111010
00011Br 1  FA           		.byte	%11111010
00011Cr 1  FA           		.byte	%11111010
00011Dr 1  FA           		.byte	%11111010
00011Er 1  FE           		.byte	%11111110
00011Fr 1  FF           		.byte	%11111111
000120r 1               	; 4,4
000120r 1  FF           		.byte	%11111111
000121r 1  FF           		.byte	%11111111
000122r 1  FF           		.byte	%11111111
000123r 1  FF           		.byte	%11111111
000124r 1  FF           		.byte	%11111111
000125r 1  FF           		.byte	%11111111
000126r 1  FF           		.byte	%11111111
000127r 1  FF           		.byte	%11111111
000128r 1               	; 5,4
000128r 1  FF           		.byte	%11111111
000129r 1  FF           		.byte	%11111111
00012Ar 1  FF           		.byte	%11111111
00012Br 1  FF           		.byte	%11111111
00012Cr 1  FF           		.byte	%11111111
00012Dr 1  FF           		.byte	%11111111
00012Er 1  FF           		.byte	%11111111
00012Fr 1  FF           		.byte	%11111111
000130r 1               	; 6,4
000130r 1  FF           		.byte	%11111111
000131r 1  FF           		.byte	%11111111
000132r 1  FF           		.byte	%11111111
000133r 1  FF           		.byte	%11111111
000134r 1  FF           		.byte	%11111111
000135r 1  FF           		.byte	%11111111
000136r 1  FF           		.byte	%11111111
000137r 1  FE           		.byte	%11111110
000138r 1               	; 7,4
000138r 1  FE           		.byte	%11111110
000139r 1  FE           		.byte	%11111110
00013Ar 1  F8           		.byte	%11111000
00013Br 1  F8           		.byte	%11111000
00013Cr 1  F8           		.byte	%11111000
00013Dr 1  E0           		.byte	%11100000
00013Er 1  E0           		.byte	%11100000
00013Fr 1  A0           		.byte	%10100000
000140r 1               	;
000140r 1               	; 0,5
000140r 1  00           		.byte	%00000000
000141r 1  00           		.byte	%00000000
000142r 1  00           		.byte	%00000000
000143r 1  00           		.byte	%00000000
000144r 1  00           		.byte	%00000000
000145r 1  00           		.byte	%00000000
000146r 1  00           		.byte	%00000000
000147r 1  00           		.byte	%00000000
000148r 1               	; 1,5
000148r 1  00           		.byte	%00000000
000149r 1  00           		.byte	%00000000
00014Ar 1  00           		.byte	%00000000
00014Br 1  00           		.byte	%00000000
00014Cr 1  00           		.byte	%00000000
00014Dr 1  00           		.byte	%00000000
00014Er 1  00           		.byte	%00000000
00014Fr 1  00           		.byte	%00000000
000150r 1               	; 2,5
000150r 1  00           		.byte	%00000000
000151r 1  00           		.byte	%00000000
000152r 1  00           		.byte	%00000000
000153r 1  FA           		.byte	%11111010
000154r 1  BA           		.byte	%10111010
000155r 1  BA           		.byte	%10111010
000156r 1  BA           		.byte	%10111010
000157r 1  BA           		.byte	%10111010
000158r 1               	; 3,5
000158r 1  BA           		.byte	%10111010
000159r 1  BA           		.byte	%10111010
00015Ar 1  BA           		.byte	%10111010
00015Br 1  BA           		.byte	%10111010
00015Cr 1  BA           		.byte	%10111010
00015Dr 1  BA           		.byte	%10111010
00015Er 1  BA           		.byte	%10111010
00015Fr 1  BA           		.byte	%10111010
000160r 1               	; 4,5
000160r 1  FF           		.byte	%11111111
000161r 1  FF           		.byte	%11111111
000162r 1  FF           		.byte	%11111111
000163r 1  FF           		.byte	%11111111
000164r 1  FF           		.byte	%11111111
000165r 1  FF           		.byte	%11111111
000166r 1  FF           		.byte	%11111111
000167r 1  FF           		.byte	%11111111
000168r 1               	; 5,5
000168r 1  FF           		.byte	%11111111
000169r 1  FF           		.byte	%11111111
00016Ar 1  FF           		.byte	%11111111
00016Br 1  FE           		.byte	%11111110
00016Cr 1  FE           		.byte	%11111110
00016Dr 1  FE           		.byte	%11111110
00016Er 1  F8           		.byte	%11111000
00016Fr 1  F8           		.byte	%11111000
000170r 1               	; 6,5
000170r 1  F8           		.byte	%11111000
000171r 1  E0           		.byte	%11100000
000172r 1  E0           		.byte	%11100000
000173r 1  E0           		.byte	%11100000
000174r 1  80           		.byte	%10000000
000175r 1  80           		.byte	%10000000
000176r 1  80           		.byte	%10000000
000177r 1  00           		.byte	%00000000
000178r 1               	; 7,5
000178r 1  00           		.byte	%00000000
000179r 1  00           		.byte	%00000000
00017Ar 1  00           		.byte	%00000000
00017Br 1  00           		.byte	%00000000
00017Cr 1  00           		.byte	%00000000
00017Dr 1  00           		.byte	%00000000
00017Er 1  00           		.byte	%00000000
00017Fr 1  00           		.byte	%00000000
000180r 1               	;
000180r 1               	; 0,6
000180r 1  00           		.byte	%00000000
000181r 1  00           		.byte	%00000000
000182r 1  00           		.byte	%00000000
000183r 1  00           		.byte	%00000000
000184r 1  00           		.byte	%00000000
000185r 1  00           		.byte	%00000000
000186r 1  00           		.byte	%00000000
000187r 1  00           		.byte	%00000000
000188r 1               	; 1,6
000188r 1  00           		.byte	%00000000
000189r 1  00           		.byte	%00000000
00018Ar 1  00           		.byte	%00000000
00018Br 1  00           		.byte	%00000000
00018Cr 1  00           		.byte	%00000000
00018Dr 1  00           		.byte	%00000000
00018Er 1  00           		.byte	%00000000
00018Fr 1  00           		.byte	%00000000
000190r 1               	; 2,6
000190r 1  00           		.byte	%00000000
000191r 1  00           		.byte	%00000000
000192r 1  00           		.byte	%00000000
000193r 1  00           		.byte	%00000000
000194r 1  80           		.byte	%10000000
000195r 1  A0           		.byte	%10100000
000196r 1  A8           		.byte	%10101000
000197r 1  AA           		.byte	%10101010
000198r 1               	; 3,6
000198r 1  AA           		.byte	%10101010
000199r 1  AA           		.byte	%10101010
00019Ar 1  AA           		.byte	%10101010
00019Br 1  AA           		.byte	%10101010
00019Cr 1  AA           		.byte	%10101010
00019Dr 1  AB           		.byte	%10101011
00019Er 1  BF           		.byte	%10111111
00019Fr 1  FF           		.byte	%11111111
0001A0r 1               	; 4,6
0001A0r 1  FF           		.byte	%11111111
0001A1r 1  FF           		.byte	%11111111
0001A2r 1  FF           		.byte	%11111111
0001A3r 1  FF           		.byte	%11111111
0001A4r 1  FF           		.byte	%11111111
0001A5r 1  FF           		.byte	%11111111
0001A6r 1  FF           		.byte	%11111111
0001A7r 1  FF           		.byte	%11111111
0001A8r 1               	; 5,6
0001A8r 1  FF           		.byte	%11111111
0001A9r 1  FF           		.byte	%11111111
0001AAr 1  FF           		.byte	%11111111
0001ABr 1  FF           		.byte	%11111111
0001ACr 1  AA           		.byte	%10101010
0001ADr 1  AA           		.byte	%10101010
0001AEr 1  A8           		.byte	%10101000
0001AFr 1  00           		.byte	%00000000
0001B0r 1               	; 6,6
0001B0r 1  00           		.byte	%00000000
0001B1r 1  00           		.byte	%00000000
0001B2r 1  00           		.byte	%00000000
0001B3r 1  00           		.byte	%00000000
0001B4r 1  00           		.byte	%00000000
0001B5r 1  00           		.byte	%00000000
0001B6r 1  00           		.byte	%00000000
0001B7r 1  00           		.byte	%00000000
0001B8r 1               	; 7,6
0001B8r 1  00           		.byte	%00000000
0001B9r 1  00           		.byte	%00000000
0001BAr 1  00           		.byte	%00000000
0001BBr 1  00           		.byte	%00000000
0001BCr 1  00           		.byte	%00000000
0001BDr 1  00           		.byte	%00000000
0001BEr 1  00           		.byte	%00000000
0001BFr 1  00           		.byte	%00000000
0001C0r 1               	;
0001C0r 1               	; 0,7
0001C0r 1  00           		.byte	%00000000
0001C1r 1  00           		.byte	%00000000
0001C2r 1  00           		.byte	%00000000
0001C3r 1  00           		.byte	%00000000
0001C4r 1  00           		.byte	%00000000
0001C5r 1  00           		.byte	%00000000
0001C6r 1  00           		.byte	%00000000
0001C7r 1  00           		.byte	%00000000
0001C8r 1               	; 1,7
0001C8r 1  00           		.byte	%00000000
0001C9r 1  00           		.byte	%00000000
0001CAr 1  00           		.byte	%00000000
0001CBr 1  00           		.byte	%00000000
0001CCr 1  00           		.byte	%00000000
0001CDr 1  00           		.byte	%00000000
0001CEr 1  00           		.byte	%00000000
0001CFr 1  00           		.byte	%00000000
0001D0r 1               	; 2,7
0001D0r 1  00           		.byte	%00000000
0001D1r 1  00           		.byte	%00000000
0001D2r 1  00           		.byte	%00000000
0001D3r 1  00           		.byte	%00000000
0001D4r 1  00           		.byte	%00000000
0001D5r 1  00           		.byte	%00000000
0001D6r 1  00           		.byte	%00000000
0001D7r 1  00           		.byte	%00000000
0001D8r 1               	; 3,7
0001D8r 1  80           		.byte	%10000000
0001D9r 1  A0           		.byte	%10100000
0001DAr 1  A8           		.byte	%10101000
0001DBr 1  AA           		.byte	%10101010
0001DCr 1  BF           		.byte	%10111111
0001DDr 1  FF           		.byte	%11111111
0001DEr 1  FF           		.byte	%11111111
0001DFr 1  FF           		.byte	%11111111
0001E0r 1               	; 4,7
0001E0r 1  FF           		.byte	%11111111
0001E1r 1  FF           		.byte	%11111111
0001E2r 1  FF           		.byte	%11111111
0001E3r 1  FF           		.byte	%11111111
0001E4r 1  FF           		.byte	%11111111
0001E5r 1  FF           		.byte	%11111111
0001E6r 1  FF           		.byte	%11111111
0001E7r 1  FF           		.byte	%11111111
0001E8r 1               	; 5,7
0001E8r 1  FF           		.byte	%11111111
0001E9r 1  FF           		.byte	%11111111
0001EAr 1  F8           		.byte	%11111000
0001EBr 1  E0           		.byte	%11100000
0001ECr 1  A4           		.byte	%10100100
0001EDr 1  A4           		.byte	%10100100
0001EEr 1  20           		.byte	%00100000
0001EFr 1  08           		.byte	%00001000
0001F0r 1               	; 6,7
0001F0r 1  00           		.byte	%00000000
0001F1r 1  00           		.byte	%00000000
0001F2r 1  00           		.byte	%00000000
0001F3r 1  00           		.byte	%00000000
0001F4r 1  00           		.byte	%00000000
0001F5r 1  00           		.byte	%00000000
0001F6r 1  00           		.byte	%00000000
0001F7r 1  00           		.byte	%00000000
0001F8r 1               	; 7,7
0001F8r 1  00           		.byte	%00000000
0001F9r 1  00           		.byte	%00000000
0001FAr 1  00           		.byte	%00000000
0001FBr 1  00           		.byte	%00000000
0001FCr 1  00           		.byte	%00000000
0001FDr 1  00           		.byte	%00000000
0001FEr 1  00           		.byte	%00000000
0001FFr 1  00           		.byte	%00000000
000200r 1               	;
000200r 1               	; 0,8
000200r 1  00           		.byte	%00000000
000201r 1  00           		.byte	%00000000
000202r 1  00           		.byte	%00000000
000203r 1  00           		.byte	%00000000
000204r 1  00           		.byte	%00000000
000205r 1  00           		.byte	%00000000
000206r 1  00           		.byte	%00000000
000207r 1  00           		.byte	%00000000
000208r 1               	; 1,8
000208r 1  00           		.byte	%00000000
000209r 1  00           		.byte	%00000000
00020Ar 1  00           		.byte	%00000000
00020Br 1  00           		.byte	%00000000
00020Cr 1  00           		.byte	%00000000
00020Dr 1  00           		.byte	%00000000
00020Er 1  00           		.byte	%00000000
00020Fr 1  00           		.byte	%00000000
000210r 1               	; 2,8
000210r 1  00           		.byte	%00000000
000211r 1  00           		.byte	%00000000
000212r 1  00           		.byte	%00000000
000213r 1  00           		.byte	%00000000
000214r 1  00           		.byte	%00000000
000215r 1  00           		.byte	%00000000
000216r 1  00           		.byte	%00000000
000217r 1  00           		.byte	%00000000
000218r 1               	; 3,8
000218r 1  00           		.byte	%00000000
000219r 1  00           		.byte	%00000000
00021Ar 1  00           		.byte	%00000000
00021Br 1  A0           		.byte	%10100000
00021Cr 1  FA           		.byte	%11111010
00021Dr 1  FF           		.byte	%11111111
00021Er 1  FF           		.byte	%11111111
00021Fr 1  FF           		.byte	%11111111
000220r 1               	; 4,8
000220r 1  FF           		.byte	%11111111
000221r 1  FF           		.byte	%11111111
000222r 1  FF           		.byte	%11111111
000223r 1  FF           		.byte	%11111111
000224r 1  FF           		.byte	%11111111
000225r 1  FF           		.byte	%11111111
000226r 1  FF           		.byte	%11111111
000227r 1  FF           		.byte	%11111111
000228r 1               	; 5,8
000228r 1  F0           		.byte	%11110000
000229r 1  00           		.byte	%00000000
00022Ar 1  00           		.byte	%00000000
00022Br 1  00           		.byte	%00000000
00022Cr 1  00           		.byte	%00000000
00022Dr 1  00           		.byte	%00000000
00022Er 1  00           		.byte	%00000000
00022Fr 1  00           		.byte	%00000000
000230r 1               	; 6,8
000230r 1  00           		.byte	%00000000
000231r 1  00           		.byte	%00000000
000232r 1  00           		.byte	%00000000
000233r 1  00           		.byte	%00000000
000234r 1  00           		.byte	%00000000
000235r 1  00           		.byte	%00000000
000236r 1  00           		.byte	%00000000
000237r 1  00           		.byte	%00000000
000238r 1               	; 7,8
000238r 1  00           		.byte	%00000000
000239r 1  00           		.byte	%00000000
00023Ar 1  00           		.byte	%00000000
00023Br 1  00           		.byte	%00000000
00023Cr 1  00           		.byte	%00000000
00023Dr 1  00           		.byte	%00000000
00023Er 1  00           		.byte	%00000000
00023Fr 1  00           		.byte	%00000000
000240r 1               	;
000240r 1               	; 0,9
000240r 1  00           		.byte	%00000000
000241r 1  00           		.byte	%00000000
000242r 1  00           		.byte	%00000000
000243r 1  00           		.byte	%00000000
000244r 1  00           		.byte	%00000000
000245r 1  00           		.byte	%00000000
000246r 1  00           		.byte	%00000000
000247r 1  00           		.byte	%00000000
000248r 1               	; 1,9
000248r 1  00           		.byte	%00000000
000249r 1  00           		.byte	%00000000
00024Ar 1  00           		.byte	%00000000
00024Br 1  00           		.byte	%00000000
00024Cr 1  00           		.byte	%00000000
00024Dr 1  00           		.byte	%00000000
00024Er 1  00           		.byte	%00000000
00024Fr 1  00           		.byte	%00000000
000250r 1               	; 2,9
000250r 1  00           		.byte	%00000000
000251r 1  00           		.byte	%00000000
000252r 1  00           		.byte	%00000000
000253r 1  00           		.byte	%00000000
000254r 1  00           		.byte	%00000000
000255r 1  00           		.byte	%00000000
000256r 1  00           		.byte	%00000000
000257r 1  00           		.byte	%00000000
000258r 1               	; 3,9
000258r 1  00           		.byte	%00000000
000259r 1  00           		.byte	%00000000
00025Ar 1  00           		.byte	%00000000
00025Br 1  00           		.byte	%00000000
00025Cr 1  00           		.byte	%00000000
00025Dr 1  A0           		.byte	%10100000
00025Er 1  FA           		.byte	%11111010
00025Fr 1  FF           		.byte	%11111111
000260r 1               	; 4,9
000260r 1  FF           		.byte	%11111111
000261r 1  FF           		.byte	%11111111
000262r 1  FF           		.byte	%11111111
000263r 1  FF           		.byte	%11111111
000264r 1  FF           		.byte	%11111111
000265r 1  FF           		.byte	%11111111
000266r 1  F0           		.byte	%11110000
000267r 1  00           		.byte	%00000000
000268r 1               	; 5,9
000268r 1  00           		.byte	%00000000
000269r 1  00           		.byte	%00000000
00026Ar 1  00           		.byte	%00000000
00026Br 1  00           		.byte	%00000000
00026Cr 1  00           		.byte	%00000000
00026Dr 1  00           		.byte	%00000000
00026Er 1  00           		.byte	%00000000
00026Fr 1  00           		.byte	%00000000
000270r 1               	; 6,9
000270r 1  00           		.byte	%00000000
000271r 1  00           		.byte	%00000000
000272r 1  00           		.byte	%00000000
000273r 1  00           		.byte	%00000000
000274r 1  00           		.byte	%00000000
000275r 1  00           		.byte	%00000000
000276r 1  00           		.byte	%00000000
000277r 1  00           		.byte	%00000000
000278r 1               	; 7,9
000278r 1  00           		.byte	%00000000
000279r 1  00           		.byte	%00000000
00027Ar 1  00           		.byte	%00000000
00027Br 1  00           		.byte	%00000000
00027Cr 1  00           		.byte	%00000000
00027Dr 1  00           		.byte	%00000000
00027Er 1  00           		.byte	%00000000
00027Fr 1  00           		.byte	%00000000
000280r 1               	;
000280r 1               	; 0,10
000280r 1  00           		.byte	%00000000
000281r 1  00           		.byte	%00000000
000282r 1  00           		.byte	%00000000
000283r 1  00           		.byte	%00000000
000284r 1  00           		.byte	%00000000
000285r 1  00           		.byte	%00000000
000286r 1  00           		.byte	%00000000
000287r 1  00           		.byte	%00000000
000288r 1               	; 1,10
000288r 1  00           		.byte	%00000000
000289r 1  00           		.byte	%00000000
00028Ar 1  00           		.byte	%00000000
00028Br 1  00           		.byte	%00000000
00028Cr 1  00           		.byte	%00000000
00028Dr 1  00           		.byte	%00000000
00028Er 1  00           		.byte	%00000000
00028Fr 1  00           		.byte	%00000000
000290r 1               	; 2,10
000290r 1  00           		.byte	%00000000
000291r 1  00           		.byte	%00000000
000292r 1  00           		.byte	%00000000
000293r 1  00           		.byte	%00000000
000294r 1  00           		.byte	%00000000
000295r 1  00           		.byte	%00000000
000296r 1  00           		.byte	%00000000
000297r 1  00           		.byte	%00000000
000298r 1               	; 3,10
000298r 1  00           		.byte	%00000000
000299r 1  00           		.byte	%00000000
00029Ar 1  00           		.byte	%00000000
00029Br 1  00           		.byte	%00000000
00029Cr 1  00           		.byte	%00000000
00029Dr 1  00           		.byte	%00000000
00029Er 1  00           		.byte	%00000000
00029Fr 1  A0           		.byte	%10100000
0002A0r 1               	; 4,10
0002A0r 1  FA           		.byte	%11111010
0002A1r 1  FF           		.byte	%11111111
0002A2r 1  FF           		.byte	%11111111
0002A3r 1  FC           		.byte	%11111100
0002A4r 1  F0           		.byte	%11110000
0002A5r 1  00           		.byte	%00000000
0002A6r 1  00           		.byte	%00000000
0002A7r 1  00           		.byte	%00000000
0002A8r 1               	; 5,10
0002A8r 1  00           		.byte	%00000000
0002A9r 1  00           		.byte	%00000000
0002AAr 1  00           		.byte	%00000000
0002ABr 1  00           		.byte	%00000000
0002ACr 1  00           		.byte	%00000000
0002ADr 1  00           		.byte	%00000000
0002AEr 1  00           		.byte	%00000000
0002AFr 1  00           		.byte	%00000000
0002B0r 1               	; 6,10
0002B0r 1  00           		.byte	%00000000
0002B1r 1  00           		.byte	%00000000
0002B2r 1  00           		.byte	%00000000
0002B3r 1  00           		.byte	%00000000
0002B4r 1  00           		.byte	%00000000
0002B5r 1  00           		.byte	%00000000
0002B6r 1  00           		.byte	%00000000
0002B7r 1  00           		.byte	%00000000
0002B8r 1               	; 7,10
0002B8r 1  00           		.byte	%00000000
0002B9r 1  00           		.byte	%00000000
0002BAr 1  00           		.byte	%00000000
0002BBr 1  00           		.byte	%00000000
0002BCr 1  00           		.byte	%00000000
0002BDr 1  00           		.byte	%00000000
0002BEr 1  00           		.byte	%00000000
0002BFr 1  00           		.byte	%00000000
0002C0r 1               @Ckey:	;
0002C0r 1               	; 0,0
0002C0r 1  00           		.byte	%00000000
0002C1r 1  00           		.byte	%00000000
0002C2r 1  00           		.byte	%00000000
0002C3r 1  03           		.byte	%00000011
0002C4r 1  03           		.byte	%00000011
0002C5r 1  03           		.byte	%00000011
0002C6r 1  03           		.byte	%00000011
0002C7r 1  03           		.byte	%00000011
0002C8r 1               	; 1,0
0002C8r 1  03           		.byte	%00000011
0002C9r 1  03           		.byte	%00000011
0002CAr 1  03           		.byte	%00000011
0002CBr 1  03           		.byte	%00000011
0002CCr 1  03           		.byte	%00000011
0002CDr 1  03           		.byte	%00000011
0002CEr 1  03           		.byte	%00000011
0002CFr 1  03           		.byte	%00000011
0002D0r 1               	; 2,0
0002D0r 1  03           		.byte	%00000011
0002D1r 1  03           		.byte	%00000011
0002D2r 1  03           		.byte	%00000011
0002D3r 1  03           		.byte	%00000011
0002D4r 1  00           		.byte	%00000000
0002D5r 1  00           		.byte	%00000000
0002D6r 1  00           		.byte	%00000000
0002D7r 1  00           		.byte	%00000000
0002D8r 1               	; 0,1
0002D8r 1  00           		.byte	%00000000
0002D9r 1  00           		.byte	%00000000
0002DAr 1  FF           		.byte	%11111111
0002DBr 1  FF           		.byte	%11111111
0002DCr 1  FA           		.byte	%11111010
0002DDr 1  EA           		.byte	%11101010
0002DEr 1  EA           		.byte	%11101010
0002DFr 1  AB           		.byte	%10101011
0002E0r 1               	; 1,1
0002E0r 1  AF           		.byte	%10101111
0002E1r 1  AF           		.byte	%10101111
0002E2r 1  AF           		.byte	%10101111
0002E3r 1  AF           		.byte	%10101111
0002E4r 1  AF           		.byte	%10101111
0002E5r 1  AF           		.byte	%10101111
0002E6r 1  AF           		.byte	%10101111
0002E7r 1  AB           		.byte	%10101011
0002E8r 1               	; 2,1
0002E8r 1  EA           		.byte	%11101010
0002E9r 1  EA           		.byte	%11101010
0002EAr 1  FA           		.byte	%11111010
0002EBr 1  FF           		.byte	%11111111
0002ECr 1  FF           		.byte	%11111111
0002EDr 1  00           		.byte	%00000000
0002EEr 1  00           		.byte	%00000000
0002EFr 1  00           		.byte	%00000000
0002F0r 1               	; 0,2
0002F0r 1  00           		.byte	%00000000
0002F1r 1  00           		.byte	%00000000
0002F2r 1  FF           		.byte	%11111111
0002F3r 1  FF           		.byte	%11111111
0002F4r 1  BF           		.byte	%10111111
0002F5r 1  BF           		.byte	%10111111
0002F6r 1  BF           		.byte	%10111111
0002F7r 1  EA           		.byte	%11101010
0002F8r 1               	; 1,2
0002F8r 1  EA           		.byte	%11101010
0002F9r 1  EB           		.byte	%11101011
0002FAr 1  EB           		.byte	%11101011
0002FBr 1  FF           		.byte	%11111111
0002FCr 1  D7           		.byte	%11010111
0002FDr 1  D7           		.byte	%11010111
0002FEr 1  D5           		.byte	%11010101
0002FFr 1  D5           		.byte	%11010101
000300r 1               	; 2,2
000300r 1  BF           		.byte	%10111111
000301r 1  BF           		.byte	%10111111
000302r 1  BF           		.byte	%10111111
000303r 1  FF           		.byte	%11111111
000304r 1  FF           		.byte	%11111111
000305r 1  00           		.byte	%00000000
000306r 1  00           		.byte	%00000000
000307r 1  00           		.byte	%00000000
000308r 1               	; 0,3
000308r 1  00           		.byte	%00000000
000309r 1  00           		.byte	%00000000
00030Ar 1  00           		.byte	%00000000
00030Br 1  C0           		.byte	%11000000
00030Cr 1  C0           		.byte	%11000000
00030Dr 1  C0           		.byte	%11000000
00030Er 1  C0           		.byte	%11000000
00030Fr 1  C0           		.byte	%11000000
000310r 1               	; 1,3
000310r 1  C0           		.byte	%11000000
000311r 1  C0           		.byte	%11000000
000312r 1  C0           		.byte	%11000000
000313r 1  C0           		.byte	%11000000
000314r 1  C0           		.byte	%11000000
000315r 1  C0           		.byte	%11000000
000316r 1  C0           		.byte	%11000000
000317r 1  C0           		.byte	%11000000
000318r 1               	; 2,3
000318r 1  C0           		.byte	%11000000
000319r 1  C0           		.byte	%11000000
00031Ar 1  C0           		.byte	%11000000
00031Br 1  C0           		.byte	%11000000
00031Cr 1  00           		.byte	%00000000
00031Dr 1  00           		.byte	%00000000
00031Er 1  00           		.byte	%00000000
00031Fr 1  00           		.byte	%00000000
000320r 1               		;
000320r 1  3C           @C:		.byte	%00111100
000321r 1  42           		.byte	%01000010
000322r 1  9D           		.byte	%10011101
000323r 1  A1           		.byte	%10100001
000324r 1  A1           		.byte	%10100001
000325r 1  9D           		.byte	%10011101
000326r 1  42           		.byte	%01000010
000327r 1  3C           		.byte	%00111100
000328r 1               
000328r 1               ;*********************************************************************
000328r 1               ; Your main program code starts here
000328r 1               ;
000328r 1               		.segment "CODE"
000000r 1               
000000r 1               RESTART:
000000r 1               		.global RESTART
000000r 1               		.include "omega-fury.s"
000000r 2               ; Omega Fury for Commodore VIC 20
000000r 2               ; written by Robert Hurst <robert@hurst-ri.us>
000000r 2               ; updated version: 30-Oct-2011
000000r 2               ;
000000r 2               ; see compile.bat for compile, link, and go instructions
000000r 2               ;
000000r 2               ; to run the binary using viceteam.org project:
000000r 2               ;	xvic -memory 16k -autostart omega-fury.prg
000000r 2               ; to run the binary using mess.org project:
000000r 2               ;	mess vic20 -ramsize 24k -quik omega-fury.prg
000000r 2               ;
000000r 2               ; these globals are not required -- but it makes nice to the VICE monitor
000000r 2               ; for debugging ...
000000r 2               ;
000000r 2               .global	ACTION			; player's action this frame
000000r 2               .global	ACTION2			; player's action last frame
000000r 2               .global	ACTIONS			; frames this action was repeated
000000r 2               .global	ALERTS			; 0-3: sound KLAXON event sequence
000000r 2               .global	BIGHITMARK		; 0-3: animated large explosion sequence
000000r 2               .global	BOLT			; 0-3: Omega Fury light bolt type
000000r 2               .global	BOLTDIR			; 0-15: Omega Fury light bolt direction
000000r 2               .global BOOMB4
000000r 2               .global BOOMC			; graphic character code for sonic boomer pulse
000000r 2               .global BOOMDX			; direction of sonic boomer pulse
000000r 2               .global BOOMDY			; direction of sonic boomer pulse
000000r 2               .global BOOMED			; sound event when hit by a sonic boomer pulse
000000r 2               .global BOOMER			; flag for active sonic boomer pulse
000000r 2               .global	BOOMX			; current sonic boomer pulse col
000000r 2               .global BOOMY			; current sonic boomer pulse row
000000r 2               .global	COLLISION		; immunity countdown from an Omega Fury collision
000000r 2               .global	DIRECTION		; 0-15: Omega Fury directional pointer
000000r 2               .global	DROPPED			; 0-4: sound dropped a mine event sequence
000000r 2               .global	EMPTY			; 0-8: sound empty energizer event sequence
000000r 2               .global	ENERGIZER		; 0-255: Omega Fury fuel/energy status
000000r 2               .global	FIRE			; $80: firing
000000r 2               .global	FLASHING		; countdown to toggle alternate VIC color
000000r 2               .global	FRAME			; 0-255: current gameloop counter
000000r 2               .global	FURYHP			; 0-64: Omega Fury current hull plating status
000000r 2               .global	HEARTBEATS		; 0-?: number of active heart-stoppers (sound event)
000000r 2               .global	HIT
000000r 2               .global	HITMARK			; 0-3: animated explosion sequence
000000r 2               .global	INERTIA			; 0-15: current direction travelling
000000r 2               .global	JUMPMARK		; 0-5: animated warp sequence
000000r 2               .global	KLAXON			; sound value for voice #2
000000r 2               .global	LOOPX			; short loop counter used throughout game
000000r 2               .global	MINE			; 0-16: number of mines
000000r 2               .global	MINES			; 1-4: mine type
000000r 2               .global	MINEX			; 0-20: X coordinate
000000r 2               .global	MINEY			; 0-23: Y coordinate
000000r 2               .global	MISSION			; 0-??: current mission, 15 is repeated
000000r 2               .global	MISSIONX		; 0-??: current mission in decimal mode
000000r 2               .global	NAVI
000000r 2               .global	NEUTRON
000000r 2               .global NEUTRONDIR		; 0-15: direction
000000r 2               .global	NME				; 1-4: enemy ship type (0=empty)
000000r 2               .global	NMEDIR			; 0-15: enemy ship direction
000000r 2               .global	NMEHP			; 0-??: enemy ship hull points
000000r 2               .global	NMELEN			; 0-??: enemy ship duration of plan
000000r 2               .global	NMEPLAN			; 0-??: 8-bit flags for enemy ship plan of attack
000000r 2               .global	NMESHOT			; 1-4: enemy phaser type
000000r 2               .global	NMESHOTDIR		; 0-15: enemy phaser direction
000000r 2               .global	NMESPEED		; 0-10: enemy speed
000000r 2               .global	NMETHRUST		; enemy ship movement counter for timed events
000000r 2               .global	NMETURN			; enemy ship is making a U-turn
000000r 2               .global	OBJECTIVE		; mission objectives to destroy (0=completed)
000000r 2               .global	OMEGAHP			; center Omegan objective
000000r 2               .global	PULSE			; sound HEART-STOPPER event sequence
000000r 2               .global	SCORE
000000r 2               .global	SF2010
000000r 2               .global	SHIPS			; number of active Thargoid ships
000000r 2               .global	SHOOTING
000000r 2               .global	SPEED			; level [FAST] 16-2[SLOW], or 1/0=none
000000r 2               .global	SPIN
000000r 2               .global	THRUST			; 0-8: which frame to move
000000r 2               .global	TITLE			; 0-5: player's current title
000000r 2               .global	WARPED			; 0-3: Thargoid ship that just warped into battle
000000r 2               
000000r 2               ;*********************************************************************
000000r 2               ; Game restarts here ...
000000r 2               ;
000000r 2               		; my VIC chipset init
000000r 2  A9 96        		LDA #$80+$16	; set for videoram @ $1E00 with 22-columns
000002r 2  8D 02 90     		STA VIC+$02		; video matrix address + columns
000005r 2  A9 AE        		LDA #$AE		; $AE = 10101110 = 23-rows + 8x8 height
000007r 2  8D 03 90     		STA VIC+$03		; rows / character height
00000Ar 2  A9 0E        		LDA #$0E		; black / blue
00000Cr 2  8D 0F 90     		STA VIC+$0F		; background / border color
00000Fr 2               		; my Software Sprite Stack 4 init
00000Fr 2  20 rr rr     		JSR SSSINIT
000012r 2               		;
000012r 2               		; my interrupt vector init
000012r 2  78           		SEI
000013r 2  A2 rr        		LDX #<BACKGROUND
000015r 2  A0 rr        		LDY #>BACKGROUND
000017r 2  8E 14 03     		STX $0314
00001Ar 2  8C 15 03     		STY $0315
00001Dr 2  58           		CLI
00001Er 2  A9 E0        		LDA #$E0
000020r 2  8D rr rr     		STA HIT
000023r 2               		;
000023r 2  A2 11        		LDX #$11
000025r 2  A0 00        		LDY #$00
000027r 2  86 01        		STX $01
000029r 2  84 02        		STY $02
00002Br 2  A2 00        		LDX #$00
00002Dr 2  BD rr rr     @logo:	LDA LOGO+0*(8*17),X
000030r 2  99 00 1C     		STA $1C00+0*(8*17),Y
000033r 2  BD rr rr     		LDA LOGO+1*(8*17),X
000036r 2  99 88 1C     		STA $1C00+1*(8*17),Y
000039r 2  BD rr rr     		LDA LOGO+2*(8*17),X
00003Cr 2  99 10 1D     		STA $1C00+2*(8*17),Y
00003Fr 2  BD rr rr     		LDA LOGO+3*(8*17),X
000042r 2  99 98 1D     		STA $1C00+3*(8*17),Y
000045r 2  BD rr rr     		LDA LOGO+4*(8*17),X
000048r 2  99 20 1E     		STA $1C00+4*(8*17),Y
00004Br 2  BD rr rr     		LDA LOGO+5*(8*17),X
00004Er 2  99 A8 1E     		STA $1C00+5*(8*17),Y
000051r 2  C6 01        		DEC $01
000053r 2  D0 0A        		BNE @not17
000055r 2  A9 11        		LDA #$11
000057r 2  85 01        		STA $01
000059r 2  E6 02        		INC $02
00005Br 2  A4 02        		LDY $02
00005Dr 2  D0 05        		BNE @got17
00005Fr 2  98           @not17:	TYA
000060r 2  18           		CLC
000061r 2  69 08        		ADC #$08
000063r 2  A8           		TAY
000064r 2  E8           @got17:	INX
000065r 2  E0 88        		CPX #(8*17)
000067r 2  D0 C4        		BNE @logo
000069r 2  A0 00        		LDY #$00		; gratuitous
00006Br 2  20 rr rr     		JSR SSSFLIP
00006Er 2               		;
00006Er 2               		; title top half
00006Er 2  A2 02        		LDX #$02		; red
000070r 2  8E 86 02     		STX COLORCODE
000073r 2  A2 03        		LDX #$03
000075r 2  A0 08        		LDY #$08
000077r 2  20 rr rr     		JSR SSSPLOT
00007Ar 2  A2 11        		LDX #$11
00007Cr 2  A0 00        		LDY #0
00007Er 2  98           @row1:	TYA
00007Fr 2  20 rr rr     		JSR SSSPRINT
000082r 2  C8           		INY
000083r 2  CA           		DEX
000084r 2  D0 F8        		BNE @row1
000086r 2               		;
000086r 2  A2 03        		LDX #$03
000088r 2  A0 09        		LDY #$09
00008Ar 2  20 rr rr     		JSR SSSPLOT
00008Dr 2  A2 11        		LDX #$11
00008Fr 2  A0 11        		LDY #17
000091r 2  98           @row2:	TYA
000092r 2  20 rr rr     		JSR SSSPRINT
000095r 2  C8           		INY
000096r 2  CA           		DEX
000097r 2  D0 F8        		BNE @row2
000099r 2               		;
000099r 2  A2 03        		LDX #$03
00009Br 2  A0 0A        		LDY #$0A
00009Dr 2  20 rr rr     		JSR SSSPLOT
0000A0r 2  A2 11        		LDX #$11
0000A2r 2  A0 22        		LDY #34
0000A4r 2  98           @row3:	TYA
0000A5r 2  20 rr rr     		JSR SSSPRINT
0000A8r 2  C8           		INY
0000A9r 2  CA           		DEX
0000AAr 2  D0 F8        		BNE @row3
0000ACr 2               		; title bottom half
0000ACr 2  A2 07        		LDX #$07		; yellow
0000AEr 2  8E 86 02     		STX COLORCODE
0000B1r 2  A2 03        		LDX #$03
0000B3r 2  A0 0B        		LDY #$0B
0000B5r 2  20 rr rr     		JSR SSSPLOT
0000B8r 2  A2 11        		LDX #$11
0000BAr 2  A0 33        		LDY #51
0000BCr 2  98           @row4:	TYA
0000BDr 2  20 rr rr     		JSR SSSPRINT
0000C0r 2  C8           		INY
0000C1r 2  CA           		DEX
0000C2r 2  D0 F8        		BNE @row4
0000C4r 2               		;
0000C4r 2  A2 03        		LDX #$03
0000C6r 2  A0 0C        		LDY #$0C
0000C8r 2  20 rr rr     		JSR SSSPLOT
0000CBr 2  A2 11        		LDX #$11
0000CDr 2  A0 44        		LDY #68
0000CFr 2  98           @row5:	TYA
0000D0r 2  20 rr rr     		JSR SSSPRINT
0000D3r 2  C8           		INY
0000D4r 2  CA           		DEX
0000D5r 2  D0 F8        		BNE @row5
0000D7r 2               		;
0000D7r 2  A2 03        		LDX #$03
0000D9r 2  A0 0D        		LDY #$0D
0000DBr 2  20 rr rr     		JSR SSSPLOT
0000DEr 2  A2 04        		LDX #$04
0000E0r 2  A0 55        		LDY #85
0000E2r 2  98           @row6:	TYA
0000E3r 2  20 rr rr     		JSR SSSPRINT
0000E6r 2  C8           		INY
0000E7r 2  CA           		DEX
0000E8r 2  D0 F8        		BNE @row6
0000EAr 2  A0 00        		LDY #$00		; gratuitous
0000ECr 2  20 rr rr     		JSR SSSFLIP
0000EFr 2  A0 A0        		LDY #$A0
0000F1r 2  20 rr rr     		JSR SSSFLIP
0000F4r 2               		; me!
0000F4r 2  A2 01        		LDX #$01		; white
0000F6r 2  8E 86 02     		STX COLORCODE
0000F9r 2  A2 07        		LDX #$07
0000FBr 2  A0 0D        		LDY #$0D
0000FDr 2  20 rr rr     		JSR SSSPLOT
000100r 2  A2 0D        		LDX #$0D
000102r 2  A0 59        		LDY #89
000104r 2               @author:
000104r 2  98           		TYA
000105r 2  20 rr rr     		JSR SSSPRINT
000108r 2  C8           		INY
000109r 2  CA           		DEX
00010Ar 2  D0 F8        		BNE @author
00010Cr 2  A9 04        		LDA #$04
00010Er 2  8D rr rr     		STA DROPPED
000111r 2  A0 00        		LDY #$00		; gratuitous
000113r 2  20 rr rr     		JSR SSSFLIP
000116r 2  A0 50        		LDY #$50
000118r 2  20 rr rr     		JSR SSSFLIP
00011Br 2               		;
00011Br 2  A9 00        		LDA #$00
00011Dr 2  85 C6        		STA $C6			; empty keyboard buffer
00011Fr 2  A8           		TAY
000120r 2  99 rr rr     @zero:	STA FRAME,Y		; init my variable space
000123r 2  C8           		INY
000124r 2  C0 90        		CPY #$90		; thru SCORE
000126r 2  D0 F8        		BNE @zero
000128r 2               		;
000128r 2  A9 8B        		LDA #%10001011	; float horizontal, 16x16
00012Ar 2  A0 10        		LDY #$10
00012Cr 2  20 rr rr     		JSR SSSCREATE
00012Fr 2  A9 09        		LDA #%00001001	; multi-color with white
000131r 2  A2 rr        		LDX #<OMEGABIG
000133r 2  A0 rr        		LDY #>OMEGABIG
000135r 2  20 rr rr     		JSR SSSANIM
000138r 2  A2 FE        		LDX #$FE
00013Ar 2  8E 0D 90     		STX VIC+$0D
00013Dr 2  A0 80        		LDY #$80
00013Fr 2  20 rr rr     		JSR SSSMOVEXY
000142r 2               		;
000142r 2               @flyby:
000142r 2  A2 00        		LDX #$00
000144r 2  20 rr rr     		JSR SSSUSE
000147r 2  AE rr rr     		LDX SPRITEX
00014Ar 2  8A           		TXA
00014Br 2  4A           		LSR
00014Cr 2  4A           		LSR
00014Dr 2  4A           		LSR
00014Er 2  4A           		LSR
00014Fr 2  49 0F        		EOR #$0F
000151r 2  09 20        		ORA #$20
000153r 2  8D 0E 90     @vol:	STA VIC+$0E
000156r 2  CA           		DEX
000157r 2  CA           		DEX
000158r 2  AC rr rr     		LDY SPRITEY
00015Br 2  20 rr rr     		JSR SSSMOVEXY
00015Er 2  A0 01        		LDY #$01
000160r 2  20 rr rr     		JSR SSSFLIP
000163r 2  AD rr rr     		LDA SPRITEX
000166r 2  D0 DA        		BNE @flyby
000168r 2               		;
000168r 2  A9 00        @bye:	LDA #$00
00016Ar 2  8D 0D 90     		STA VIC+$0D
00016Dr 2  A9 8F        		LDA #$8F
00016Fr 2  8D 0E 90     		STA VIC+$0E
000172r 2  A9 A0        		LDA #SSSNULL
000174r 2  20 rr rr     		JSR SSSCLEAR
000177r 2  A0 00        		LDY #$00		; render immediate
000179r 2  20 rr rr     		JSR SSSFLIP
00017Cr 2               		;
00017Cr 2  A2 48        		LDX #$48
00017Er 2  A0 00        		LDY #$00
000180r 2  B9 rr rr     @copy:	LDA GRENADE1,Y
000183r 2  9D 00 1C     		STA $1C00,X
000186r 2  C8           		INY
000187r 2  E8           		INX
000188r 2  E0 A8        		CPX #$A8
00018Ar 2  D0 F4        		BNE @copy
00018Cr 2               		;
00018Cr 2  AD 8D 02     		LDA $028D		; look familiar?
00018Fr 2               		;CMP #$07		; :P -- emulators usually map CTRL as FIRE
00018Fr 2  D0 07        		BNE @egg		; any combo counts,
000191r 2  A5 C6        		LDA $C6			; or a premature keypress
000193r 2  D0 03        		BNE @egg
000195r 2  4C rr rr     		JMP @intros
000198r 2               		;
000198r 2  A2 00        @egg:	LDX #$00
00019Ar 2  86 C6        		STX $C6
00019Cr 2  8E rr rr     		STX FRAME
00019Fr 2  20 rr rr     		JSR SSSUSE
0001A2r 2  A9 01        		LDA #$01		; WHITE
0001A4r 2  A2 rr        		LDX #<FURYC
0001A6r 2  A0 rr        		LDY #>FURYC
0001A8r 2  20 rr rr     		JSR SSSANIM
0001ABr 2  AE 98 02     		LDX SSSCLIPX
0001AEr 2  A0 B8        		LDY #23*8
0001B0r 2  20 rr rr     		JSR SSSMOVEXY
0001B3r 2  A9 rr        		LDA #<CREDITS
0001B5r 2  85 8E        		STA $8E
0001B7r 2  A9 rr        		LDA #>CREDITS
0001B9r 2  85 8F        		STA $8F
0001BBr 2  A0 FF        		LDY #$FF
0001BDr 2  8C 9A 02     		STY R0
0001C0r 2  C8           		INY
0001C1r 2  8C 9B 02     		STY R1
0001C4r 2  8C 9C 02     		STY R2
0001C7r 2               @credits:
0001C7r 2  AC 9B 02     		LDY R1
0001CAr 2  B1 8E        		LDA ($8E),Y
0001CCr 2  F0 2C        		BEQ @xcredits
0001CEr 2  C9 10        		CMP #$10
0001D0r 2  B0 14        		BCS @crprint
0001D2r 2  C9 0D        		CMP #$0D
0001D4r 2  D0 0B        		BNE @crclr
0001D6r 2  A2 00        		LDX #$00
0001D8r 2  A4 D6        		LDY CRSRROW
0001DAr 2  C8           		INY
0001DBr 2  20 rr rr     		JSR SSSPLOT
0001DEr 2  4C rr rr     		JMP @crnext
0001E1r 2  8D 86 02     @crclr:	STA COLORCODE
0001E4r 2  D0 08        		BNE @crnext
0001E6r 2               @crprint:
0001E6r 2  20 rr rr     		JSR SSSPRINT
0001E9r 2  A0 08        		LDY #$08
0001EBr 2  20 rr rr     		JSR @wait
0001EEr 2               @crnext:
0001EEr 2  EE 9B 02     		INC R1
0001F1r 2  AC 9B 02     		LDY R1
0001F4r 2  D0 D1        		BNE @credits
0001F6r 2  E6 8F        		INC $8F
0001F8r 2  D0 CD        		BNE @credits
0001FAr 2               @xcredits:
0001FAr 2  A0 B0        		LDY #$B0
0001FCr 2  20 rr rr     		JSR @wait
0001FFr 2               		;
0001FFr 2               @intros:
0001FFr 2  A0 00        		LDY #$00
000201r 2  8C 9A 02     		STY R0
000204r 2               @loop:
000204r 2  A9 A0        		LDA #SSSNULL
000206r 2  20 rr rr     		JSR SSSCLEAR
000209r 2  A0 00        		LDY #$00		; render immediate
00020Br 2  20 rr rr     		JSR SSSFLIP
00020Er 2               		;
00020Er 2               		; PRESS F1 TO CONTINUE
00020Er 2  A0 00        		LDY #$00
000210r 2  8C rr rr     		STY HEARTBEATS
000213r 2  A2 00        		LDX #$00
000215r 2  B9 rr rr     @copy1:	LDA F1,Y		; make F1
000218r 2  9D 30 1F     		STA $1F30,X
00021Br 2  C8           		INY
00021Cr 2  E8           		INX
00021Dr 2  E0 10        		CPX #$10
00021Fr 2  D0 F4        		BNE @copy1
000221r 2  A2 03        		LDX #$03		; cyan
000223r 2  8E 86 02     		STX COLORCODE
000226r 2  A2 01        		LDX #$01
000228r 2  A4 C8        		LDY PLAYROWS
00022Ar 2  88           		DEY
00022Br 2  20 rr rr     		JSR SSSPLOT
00022Er 2  A2 00        		LDX #$00
000230r 2               @f1cont:
000230r 2  BD rr rr     		LDA CONT,X
000233r 2  20 rr rr     		JSR SSSPRINT
000236r 2  E8           		INX
000237r 2  E0 14        		CPX #$14
000239r 2  D0 F5        		BNE @f1cont
00023Br 2               		;
00023Br 2  A2 07        		LDX #$07
00023Dr 2  A4 C8        		LDY PLAYROWS
00023Fr 2  88           		DEY
000240r 2  20 rr rr     		JSR SSSPLOT
000243r 2  A4 D3        		LDY CRSRCOL
000245r 2  B1 F3        		LDA (COLORLINE),Y
000247r 2  29 E0        		AND #$E0
000249r 2  09 09        		ORA #$09
00024Br 2  91 F3        		STA (COLORLINE),Y
00024Dr 2  C8           		INY
00024Er 2  91 F3        		STA (COLORLINE),Y
000250r 2               		;
000250r 2  A2 00        		LDX #$00
000252r 2  20 rr rr     		JSR SSSUSE
000255r 2  A0 00        		LDY #$00
000257r 2  8C rr rr     		STY FRAME
00025Ar 2  8C 9B 02     		STY R1
00025Dr 2  8C 9C 02     		STY R2
000260r 2  20 rr rr     		JSR SSSPLOT
000263r 2  AE 9A 02     		LDX R0
000266r 2  BD rr rr     		LDA WALKERS+1,X
000269r 2  A8           		TAY
00026Ar 2  BD rr rr     		LDA WALKERS,X		; init vector to next walker
00026Dr 2  AA           		TAX
00026Er 2  A9 01        		LDA #$01			; WHITE
000270r 2  20 rr rr     		JSR SSSANIM
000273r 2  AE 98 02     		LDX SSSCLIPX
000276r 2  A0 A8        		LDY #21*8
000278r 2  20 rr rr     		JSR SSSMOVEXY
00027Br 2  AE 9A 02     		LDX R0
00027Er 2  BD rr rr     		LDA INTROS,X		; init vector to next passage
000281r 2  85 8E        		STA $8E
000283r 2  BD rr rr     		LDA INTROS+1,X
000286r 2  85 8F        		STA $8F
000288r 2  F0 44        		BEQ @whoami
00028Ar 2               @while:
00028Ar 2  AC 9B 02     		LDY R1
00028Dr 2  B1 8E        		LDA ($8E),Y
00028Fr 2  F0 2F        		BEQ @nomore
000291r 2  C9 80        		CMP #$80
000293r 2  B0 14        		BCS @print
000295r 2  C9 0D        		CMP #$0D
000297r 2  D0 0B        		BNE @color
000299r 2  A2 00        		LDX #$00
00029Br 2  A4 D6        		LDY CRSRROW
00029Dr 2  C8           		INY
00029Er 2  20 rr rr     		JSR SSSPLOT
0002A1r 2  4C rr rr     		JMP @next
0002A4r 2  8D 86 02     @color:	STA COLORCODE
0002A7r 2  D0 08        		BNE @next
0002A9r 2               @print:
0002A9r 2  20 rr rr     		JSR SSSPRINT
0002ACr 2  A0 05        		LDY #$05
0002AEr 2  20 rr rr     		JSR @wait
0002B1r 2               @next:
0002B1r 2  20 rr rr     		JSR @start
0002B4r 2  EE 9B 02     		INC R1
0002B7r 2  AC 9B 02     		LDY R1
0002BAr 2  D0 CE        		BNE @while
0002BCr 2  E6 8F        		INC $8F
0002BEr 2  D0 CA        		BNE @while
0002C0r 2               @nomore:
0002C0r 2  A0 A0        		LDY #$A0
0002C2r 2  20 rr rr     		JSR @wait
0002C5r 2  EE 9A 02     		INC R0
0002C8r 2  EE 9A 02     		INC R0			; next word
0002CBr 2  4C rr rr     		JMP @loop
0002CEr 2               @whoami:
0002CEr 2  4C rr rr     		JMP RESTART		; cycle intro again
0002D1r 2               
0002D1r 2  68           @fini:	PLA				;--
0002D2r 2  85 D6        		STA CRSRROW
0002D4r 2  A8           		TAY
0002D5r 2  68           		PLA				;--
0002D6r 2  85 D3        		STA CRSRCOL
0002D8r 2  AA           		TAX
0002D9r 2  20 rr rr     		JSR SSSPLOT
0002DCr 2  68           		PLA				;--
0002DDr 2  8D 86 02     		STA COLORCODE
0002E0r 2  60           		RTS
0002E1r 2               @wait:
0002E1r 2  8C 9C 02     		STY R2
0002E4r 2  AD 86 02     		LDA COLORCODE
0002E7r 2  48           		PHA				;++
0002E8r 2  A5 D3        		LDA CRSRCOL
0002EAr 2  48           		PHA				;++
0002EBr 2  A5 D6        		LDA CRSRROW
0002EDr 2  48           		PHA				;++
0002EEr 2  A0 00        		LDY #$00
0002F0r 2  8C rr rr     		STY MINE
0002F3r 2  8C rr rr     		STY MINES
0002F6r 2  A9 88        		LDA #%10001000	; float horizontal, 8x8
0002F8r 2  A0 08        		LDY #$08
0002FAr 2  8D rr rr     		STA SPRITEDEF
0002FDr 2  8C rr rr     		STY SPRITEH
000300r 2               @waitloop:
000300r 2  CE 9C 02     		DEC R2
000303r 2  F0 CC        		BEQ @fini
000305r 2  AD rr rr     		LDA FRAME
000308r 2  29 01        		AND #$01
00030Ar 2  D0 7D        		BNE @walk
00030Cr 2  A2 00        		LDX #$00
00030Er 2  20 rr rr     		JSR SSSUSE
000311r 2  CE rr rr     		DEC SPRITEX
000314r 2  AE rr rr     		LDX SPRITEX
000317r 2  AC rr rr     		LDY SPRITEY
00031Ar 2  20 rr rr     		JSR SSSMOVEXY
00031Dr 2  AD rr rr     		LDA SPRITEX
000320r 2  38           		SEC
000321r 2  E9 08        		SBC #$08
000323r 2  4A           		LSR
000324r 2  4A           		LSR
000325r 2  4A           		LSR
000326r 2  AA           		TAX
000327r 2  AD rr rr     		LDA SPRITEY
00032Ar 2  38           		SEC
00032Br 2  E9 10        		SBC #$10
00032Dr 2  4A           		LSR
00032Er 2  4A           		LSR
00032Fr 2  4A           		LSR
000330r 2  A8           		TAY
000331r 2  AD 9A 02     		LDA R0
000334r 2  D0 0D        @w0:	BNE @w2
000336r 2  E0 09        		CPX #9
000338r 2  D0 03        		BNE @s1
00033Ar 2  20 rr rr     		JSR DROPGRENADE
00033Dr 2  20 rr rr     @s1:	JSR SCOUT
000340r 2  4C rr rr     		JMP @walk
000343r 2  C9 02        @w2:	CMP #$02
000345r 2  D0 0F        		BNE @w4
000347r 2  E0 0A        		CPX #10
000349r 2  D0 03        		BNE @s2
00034Br 2  20 rr rr     		JSR DROPHULLBLASTER
00034Er 2  A0 0C        @s2:	LDY #$0C		; left
000350r 2  20 rr rr     		JSR CRUISER
000353r 2  4C rr rr     		JMP @walk
000356r 2  C9 04        @w4:	CMP #$04
000358r 2  D0 0F        		BNE @w6
00035Ar 2  E0 0B        		CPX #11
00035Cr 2  D0 03        		BNE @s3
00035Er 2  20 rr rr     		JSR DROPSONICBOOMER
000361r 2  A0 0C        @s3:	LDY #$0C		; left
000363r 2  20 rr rr     		JSR DESTROYER
000366r 2  4C rr rr     		JMP @walk
000369r 2  C9 06        @w6:	CMP #$06
00036Br 2  D0 1C        		BNE @walk
00036Dr 2  A9 8B        		LDA #%10001011	; float horizontal, 16x16
00036Fr 2  8D rr rr     		STA SPRITEDEF
000372r 2  A9 10        		LDA #$10
000374r 2  8D rr rr     		STA SPRITEH
000377r 2  AD rr rr     		LDA FRAME
00037Ar 2  48           		PHA
00037Br 2  E0 0C        		CPX #12
00037Dr 2  D0 03        		BNE @s4
00037Fr 2  20 rr rr     		JSR DROPHEARTSTOPPER
000382r 2  68           @s4:	PLA
000383r 2  8D rr rr     		STA FRAME
000386r 2  20 rr rr     		JSR CARRIER
000389r 2  A0 01        @walk:	LDY #$01
00038Br 2  20 rr rr     		JSR SSSFLIP
00038Er 2  EE rr rr     		INC FRAME
000391r 2  4C rr rr     		JMP @waitloop
000394r 2               @start:
000394r 2  A9 FF        		LDA #$FF
000396r 2  8D 22 91     		STA $9122
000399r 2  AD 11 91     		LDA $9111
00039Cr 2  29 20        		AND #$20		; FIRE
00039Er 2  F0 30        		BEQ INITNEW
0003A0r 2  20 E4 FF     		JSR GETIN		; get keyboard
0003A3r 2  C9 85        		CMP #$85		; got F1 ?
0003A5r 2  F0 29        		BEQ INITNEW		; go start a new game
0003A7r 2  C9 86        		CMP #$86		; got F3 ?
0003A9r 2  F0 09        		BEQ INITNEW3	; go start a new game
0003ABr 2  C9 87        		CMP #$87		; got F5 ?
0003ADr 2  F0 0F        		BEQ INITNEW5	; go start a new game
0003AFr 2  C9 88        		CMP #$88		; got F7 ?
0003B1r 2  F0 15        		BEQ INITNEW7	; go start a new game
0003B3r 2  60           		RTS
0003B4r 2               
0003B4r 2               INITNEW3:
0003B4r 2  A9 02        		LDA #$02		; start at last SCOUT mission
0003B6r 2  8D rr rr     		STA MISSION
0003B9r 2  8D rr rr     		STA MISSIONX
0003BCr 2  D0 12        		BNE INITNEW
0003BEr 2               
0003BEr 2               INITNEW5:
0003BEr 2  A9 05        		LDA #$05		; start at last DEFENDER mission
0003C0r 2  8D rr rr     		STA MISSION
0003C3r 2  8D rr rr     		STA MISSIONX
0003C6r 2  D0 08        		BNE INITNEW
0003C8r 2               
0003C8r 2               INITNEW7:
0003C8r 2  A9 09        		LDA #$09		; start at last WARRIOR mission
0003CAr 2  8D rr rr     		STA MISSION
0003CDr 2  8D rr rr     		STA MISSIONX
0003D0r 2               
0003D0r 2               ;*********************************************************************
0003D0r 2               ; INITIALIZE NEW GAME
0003D0r 2               ;
0003D0r 2               INITNEW:
0003D0r 2  68           		PLA				; dump JSR @start return PC
0003D1r 2  68           		PLA
0003D2r 2  20 rr rr     		JSR RANDOMIZE
0003D5r 2  A9 95        		LDA #$80+$15	; 21-columns
0003D7r 2  8D 02 90     		STA VIC+$02		; video matrix address + columns
0003DAr 2  A9 B0        		LDA #$B0		; $B0 = 10110000 = 24-rows + 8x8 height
0003DCr 2  8D 03 90     		STA VIC+$03		; rows / character height
0003DFr 2  A9 0A        		LDA #$0A		; black with red
0003E1r 2  8D 0F 90     		STA VIC+$0F		; screen and border
0003E4r 2               		; reset sound channels
0003E4r 2  A9 00        		LDA #$00
0003E6r 2  A8           		TAY
0003E7r 2  99 0A 90     @snd:	STA VIC+$0A,Y
0003EAr 2  C8           		INY
0003EBr 2  C0 04        		CPY #$04
0003EDr 2  D0 F8        		BNE @snd
0003EFr 2  A9 FF        		LDA #$FF		; light yellow & highest
0003F1r 2  8D 0E 90     		STA VIC+$0E		; auxiliary color & volume
0003F4r 2  20 rr rr     		JSR SSSINIT
0003F7r 2               @missiles:				; #0-6: 3 for player, 4 for enemies
0003F7r 2  A9 00        		LDA #%00000000	; 8x8 only
0003F9r 2  A0 03        		LDY #$03		; 3-pixels high
0003FBr 2  20 rr rr     		JSR SSSCREATE
0003FEr 2  E0 06        		CPX #$06
000400r 2  D0 F5        		BNE @missiles
000402r 2               @bombs:					; #7 is for the neutron bomb
000402r 2  A9 0C        		LDA #%00001100	; 8x8 float
000404r 2  A0 08        		LDY #$08
000406r 2  20 rr rr     		JSR SSSCREATE
000409r 2               @ships:					; #8-11: up to 4 enemies
000409r 2  A9 0C        		LDA #%00001100
00040Br 2  A0 08        		LDY #$08
00040Dr 2  20 rr rr     		JSR SSSCREATE
000410r 2  E0 0A        		CPX #$0A
000412r 2  D0 F5        		BNE @ships
000414r 2               @carrier:				; but for #11, reserve size for a space carrier
000414r 2  A9 0F        		LDA #%00001111
000416r 2  A0 10        		LDY #$10
000418r 2  20 rr rr     		JSR SSSCREATE
00041Br 2               @sf2010:				; #12 pilot
00041Br 2  A9 0C        		LDA #%00001100
00041Dr 2  A0 08        		LDY #$08
00041Fr 2  20 rr rr     		JSR SSSCREATE
000422r 2               @hitmarks:				; #13 is small hit, #14 is large hit
000422r 2  A9 0C        		LDA #%00001100
000424r 2  A0 07        		LDY #$07
000426r 2  20 rr rr     		JSR SSSCREATE
000429r 2  A9 0F        		LDA #%00001111
00042Br 2  A0 10        		LDY #$10
00042Dr 2  20 rr rr     		JSR SSSCREATE	; total of 98 (49*2) custom characters for sprites
000430r 2               
000430r 2               ;*********************************************************************
000430r 2               ; START NEXT LEVEL
000430r 2               ;
000430r 2               NEXTLEVEL:
000430r 2  A2 00        		LDX #$00
000432r 2  A9 00        @bolts:	LDA #$00
000434r 2  9D rr rr     		STA BOLT,X
000437r 2  BD rr rr     		LDA SPRITEDEF,X
00043Ar 2  29 7F        		AND #$7F		; disable sprite
00043Cr 2  9D rr rr     		STA SPRITEDEF,X
00043Fr 2  E8           		INX
000440r 2  E0 03        		CPX #$03
000442r 2  D0 EE        		BNE @bolts
000444r 2  A2 00        		LDX #$00
000446r 2               @phasers:
000446r 2  A9 00        		LDA #$00
000448r 2  9D rr rr     		STA NMESHOT,X
00044Br 2  BD rr rr     		LDA SPRITEDEF+3,X
00044Er 2  29 7F        		AND #$7F		; disable sprite
000450r 2  9D rr rr     		STA SPRITEDEF+3,X
000453r 2  E8           		INX
000454r 2  E0 04        		CPX #$04
000456r 2  D0 EE        		BNE @phasers
000458r 2  A2 00        		LDX #$00
00045Ar 2  8A           		TXA
00045Br 2  9D rr rr     @nmes:	STA NME,X
00045Er 2  9D rr rr     		STA NMETURN,X
000461r 2  E8           		INX
000462r 2  E0 04        		CPX #$04
000464r 2  D0 F5        		BNE @nmes
000466r 2  AA           		TAX
000467r 2  9D rr rr     @mines:	STA MINES,X
00046Ar 2  E8           		INX
00046Br 2  E0 10        		CPX #$10
00046Dr 2  D0 F8        		BNE @mines
00046Fr 2  8D rr rr     		STA BOOMB4
000472r 2  8D rr rr     		STA BOOMER
000475r 2               		;
000475r 2  A9 A0        		LDA #SSSNULL
000477r 2  20 rr rr     		JSR SSSCLEAR
00047Ar 2  20 rr rr     		JSR DRAWOBJECTIVE
00047Dr 2  20 rr rr     		JSR DRAWRANK
000480r 2  A0 00        		LDY #$00		; render immediate
000482r 2  20 rr rr     		JSR SSSFLIP
000485r 2               		;
000485r 2  AE rr rr     		LDX MISSION
000488r 2  D0 35        		BNE @mission
00048Ar 2  A9 01        		LDA #$01		; WHITE
00048Cr 2  8D 86 02     		STA COLORCODE
00048Fr 2  A2 07        		LDX #$07
000491r 2  A0 05        		LDY #$05
000493r 2  20 rr rr     		JSR DRAWCELLS
000496r 2  81 83 81 84  		.byte	$81,$83,$81,$84,$85,$8D,$99,$00
00049Ar 2  85 8D 99 00  
00049Er 2  A0 00        		LDY #$00		; render immediate
0004A0r 2  20 rr rr     		JSR SSSFLIP
0004A3r 2               		;
0004A3r 2  A9 07        		LDA #$07		; YELLOW
0004A5r 2  8D 86 02     		STA COLORCODE
0004A8r 2  A2 07        		LDX #$07
0004AAr 2  A0 05        		LDY #$05
0004ACr 2  20 rr rr     		JSR DRAWCELLS
0004AFr 2  81 83 81 84  		.byte	$81,$83,$81,$84,$85,$8D,$99,$00
0004B3r 2  85 8D 99 00  
0004B7r 2  A0 00        		LDY #$00		; render immediate
0004B9r 2  20 rr rr     		JSR SSSFLIP
0004BCr 2  4C rr rr     		JMP @missionx
0004BFr 2               		;
0004BFr 2               @mission:
0004BFr 2  A9 01        		LDA #$01		; WHITE
0004C1r 2  8D 86 02     		STA COLORCODE
0004C4r 2  A2 05        		LDX #$05
0004C6r 2  A0 05        		LDY #$05
0004C8r 2  20 rr rr     		JSR DRAWCELLS
0004CBr 2  8D 89 93 93  		.byte	$8D,$89,$93,$93,$89,$8F,$8E,$BA,$00
0004CFr 2  89 8F 8E BA  
0004D3r 2  00           
0004D4r 2  A0 00        		LDY #$00		; render immediate
0004D6r 2  20 rr rr     		JSR SSSFLIP
0004D9r 2               		;
0004D9r 2  A9 03        		LDA #$03		; CYAN
0004DBr 2  8D 86 02     		STA COLORCODE
0004DEr 2  A2 05        		LDX #$05
0004E0r 2  A0 05        		LDY #$05
0004E2r 2  20 rr rr     		JSR DRAWCELLS
0004E5r 2  8D 89 93 93  		.byte	$8D,$89,$93,$93,$89,$8F,$8E,$BA,$00
0004E9r 2  89 8F 8E BA  
0004EDr 2  00           
0004EEr 2  A0 00        		LDY #$00		; render immediate
0004F0r 2  20 rr rr     		JSR SSSFLIP
0004F3r 2               		;
0004F3r 2  A9 07        		LDA #$07
0004F5r 2  8D 86 02     		STA COLORCODE
0004F8r 2  A2 0E        		LDX #$0E
0004FAr 2  A0 05        		LDY #$05
0004FCr 2  20 rr rr     		JSR SSSPLOT
0004FFr 2  AD rr rr     		LDA MISSIONX
000502r 2  4A           		LSR
000503r 2  4A           		LSR
000504r 2  4A           		LSR
000505r 2  4A           		LSR
000506r 2  09 B0        		ORA #$B0
000508r 2  20 rr rr     		JSR SSSPRINT
00050Br 2  AD rr rr     		LDA MISSIONX
00050Er 2  29 0F        		AND #$0F
000510r 2  09 B0        		ORA #$B0
000512r 2  20 rr rr     		JSR SSSPRINT
000515r 2               		;
000515r 2               @missionx:
000515r 2  A2 0C        		LDX #$0C		; player
000517r 2  20 rr rr     		JSR SSSUSE
00051Ar 2  BD rr rr     		LDA SPRITEDEF,X
00051Dr 2  09 80        		ORA #$80		; enable
00051Fr 2  9D rr rr     		STA SPRITEDEF,X
000522r 2  A9 01        		LDA #$01		; WHITE
000524r 2  A2 rr        		LDX #<FURY0
000526r 2  A0 rr        		LDY #>FURY0
000528r 2  20 rr rr     		JSR SSSANIM
00052Br 2  A2 60        		LDX #$60
00052Dr 2  A0 B0        		LDY #$B0
00052Fr 2  20 rr rr     		JSR SSSMOVEXY
000532r 2  A0 00        		LDY #$00
000534r 2  8C rr rr     		STY NAVI
000537r 2  8C rr rr     		STY DIRECTION
00053Ar 2  8C rr rr     		STY SPEED
00053Dr 2               		;
00053Dr 2  A9 D4        		LDA #$D4		; 212 hull points
00053Fr 2  8D rr rr     		STA OMEGAHP
000542r 2  A9 40        		LDA #$40		; 64 hull points
000544r 2  8D rr rr     		STA FURYHP
000547r 2  20 rr rr     		JSR HULLSTATUS
00054Ar 2  20 rr rr     		JSR SCORESTATUS
00054Dr 2  A9 F0        		LDA #$F0
00054Fr 2  8D rr rr     		STA ENERGIZER
000552r 2  A9 04        		LDA #$04
000554r 2  8D rr rr     		STA ALERTS
000557r 2  AC rr rr     		LDY MISSION
00055Ar 2  F0 03        		BEQ @na
00055Cr 2  4E rr rr     		LSR ALERTS
00055Fr 2  20 rr rr     @na:	JSR WEAPONSTATUS
000562r 2  A0 02        		LDY #2
000564r 2  20 rr rr     		JSR SSSFLIP
000567r 2  AD rr rr     		LDA ALERTS
00056Ar 2  D0 F3        		BNE @na
00056Cr 2               		;
00056Cr 2  A9 E0        		LDA #$E0
00056Er 2  8D rr rr     		STA HIT
000571r 2  A2 00        		LDX #$00		; fill buffer with RND values (0-99)
000573r 2  8E rr rr     		STX LOOPX
000576r 2  20 94 E0     @rloop:	JSR $E094		; rnd: perform BASIC RND
000579r 2  20 E2 DA     		JSR $DAE2		; mul10: Multiply FAC#1 by 10
00057Cr 2  20 E2 DA     		JSR $DAE2		; mul10: Multiply FAC#1 by 10
00057Fr 2  20 AA D1     		JSR $D1AA		; facinx: FAC#1 to Integer in (AC/YR)
000582r 2  98           		TYA				; A is always zero, make A = 0-99
000583r 2  EE rr rr     		INC LOOPX
000586r 2  AE rr rr     		LDX LOOPX
000589r 2  9D 3C 03     		STA RANDOM,X	; store result in cassette buffer
00058Cr 2  E0 BF        		CPX #$BF		; until it is filled
00058Er 2  D0 E6        		BNE @rloop
000590r 2               		;
000590r 2  A9 A0        		LDA #SSSNULL
000592r 2  20 rr rr     		JSR SSSCLEAR
000595r 2  20 rr rr     		JSR DRAWOBJECTIVE
000598r 2  A0 00        		LDY #$00		; render immediate
00059Ar 2  20 rr rr     		JSR SSSFLIP
00059Dr 2  20 rr rr     		JSR HULLSTATUS
0005A0r 2  20 rr rr     		JSR WEAPONSTATUS
0005A3r 2  20 rr rr     		JSR SCORESTATUS
0005A6r 2               		;
0005A6r 2  A0 00        		LDY #$00
0005A8r 2  8C rr rr     		STY OBJECTIVE
0005ABr 2  8C rr rr     		STY SHIPS
0005AEr 2  AD rr rr     		LDA MISSION
0005B1r 2  0A           		ASL
0005B2r 2  0A           		ASL
0005B3r 2  0A           		ASL
0005B4r 2  AA           		TAX
0005B5r 2  BD rr rr     @ships:	LDA MISSIONS,X
0005B8r 2  F0 03        		BEQ @skip
0005BAr 2  EE rr rr     		INC SHIPS
0005BDr 2  E8           @skip:	INX
0005BEr 2  C8           		INY
0005BFr 2  C0 04        		CPY #$04
0005C1r 2  D0 F2        		BNE @ships
0005C3r 2               		;
0005C3r 2  8E 9C 02     		STX R2
0005C6r 2  A0 00        		LDY #$00
0005C8r 2  8C 9D 02     		STY R3
0005CBr 2  BD rr rr     @seed:	LDA MISSIONS,X
0005CEr 2  F0 03        		BEQ @next
0005D0r 2  20 rr rr     		JSR NEWMINE
0005D3r 2  EE 9C 02     @next:	INC R2
0005D6r 2  AE 9C 02     		LDX R2
0005D9r 2  EE 9D 02     		INC R3
0005DCr 2  AC 9D 02     		LDY R3
0005DFr 2  C0 04        		CPY #$04
0005E1r 2  D0 E8        		BNE @seed
0005E3r 2               		;
0005E3r 2  A9 01        		LDA #$01
0005E5r 2  8D rr rr     		STA FRAME
0005E8r 2  20 rr rr     		JSR DRAWSHIELDS
0005EBr 2               
0005EBr 2               ;*********************************************************************
0005EBr 2               ; MAIN GAME PLAYING LOOP
0005EBr 2               ;
0005EBr 2               GAMELOOP:
0005EBr 2  AD rr rr     		LDA FRAME
0005EEr 2  29 7F        		AND #$7F
0005F0r 2  D0 1B        		BNE OMEGAFURY
0005F2r 2               		;
0005F2r 2  CE rr rr     		DEC SHIPS
0005F5r 2  AD rr rr     		LDA MISSION
0005F8r 2  AE rr rr     		LDX FURYHP
0005FBr 2  D0 02        		BNE @cont
0005FDr 2  A9 0F        		LDA #$0F		; complement attack now that it is defenseless
0005FFr 2  0A           @cont:	ASL
000600r 2  0A           		ASL
000601r 2  0A           		ASL
000602r 2  18           		CLC
000603r 2  6D rr rr     		ADC SHIPS
000606r 2  AA           		TAX
000607r 2  BD rr rr     		LDA MISSIONS,X
00060Ar 2  20 rr rr     		JSR NEWTHARGOID
00060Dr 2               
00060Dr 2               ;*********************************************************************
00060Dr 2               ; Omega Fury navigational and firing controls
00060Dr 2               ;
00060Dr 2               OMEGAFURY:
00060Dr 2  A2 0C        		LDX #$0C		; player
00060Fr 2  86 90        		STX sssNUM
000611r 2  BD rr rr     		LDA SPRITEDEF,X
000614r 2  29 80        		AND #$80
000616r 2  D0 0C        		BNE @alive
000618r 2  8D rr rr     		STA SPEED		; ship is dead
00061Br 2  8D rr rr     		STA INERTIA		; keep it off the playfield
00061Er 2  9D rr rr     		STA SPRITEX,X
000621r 2  9D rr rr     		STA SPRITEY,X
000624r 2  AD rr rr     @alive:	LDA NAVI
000627r 2  8D rr rr     		STA SF2010
00062Ar 2  F0 15        		BEQ @navi		; is ship under pilot's control?
00062Cr 2  A0 00        		LDY #$00
00062Er 2  AD rr rr     		LDA FRAME
000631r 2  29 03        		AND #$03
000633r 2  D0 06        		BNE @skip
000635r 2  CE rr rr     		DEC NAVI
000638r 2  AC rr rr     		LDY SPIN
00063Br 2  8C rr rr     @skip:	STY ACTION
00063Er 2  4C rr rr     		JMP @nonavi
000641r 2               @navi:
000641r 2  A0 00        		LDY #$00
000643r 2  8C rr rr     		STY ACTION
000646r 2  8C 13 91     		STY $9113
000649r 2  A9 7F        		LDA #$7F
00064Br 2  8D 22 91     		STA $9122
00064Er 2               		;
00064Er 2  AD 20 91     		LDA $9120
000651r 2  29 80        		AND #$80
000653r 2  D0 05        		BNE @joy0
000655r 2  A9 01        		LDA #$01		; RIGHT
000657r 2  8D rr rr     		STA ACTION
00065Ar 2  A9 FF        @joy0:	LDA #$FF
00065Cr 2  8D 22 91     		STA $9122
00065Fr 2  AC 11 91     		LDY $9111
000662r 2               		;
000662r 2  A2 00        		LDX #$00		; clear events
000664r 2  98           		TYA
000665r 2  29 20        		AND #$20		; FIRE
000667r 2  D0 12        		BNE @xfire
000669r 2  A2 80        		LDX #$80		; record DOWN event
00066Br 2  AD rr rr     		LDA FIRE
00066Er 2  D0 0B        		BNE @xfire
000670r 2  8C 0E 03     		STY YCOPY
000673r 2  20 rr rr     		JSR NEWBOLT
000676r 2  AC 0E 03     		LDY YCOPY
000679r 2  A2 80        		LDX #$80		; record DOWN event
00067Br 2  8E rr rr     @xfire:	STX FIRE
00067Er 2               		;
00067Er 2  98           		TYA
00067Fr 2  29 08        		AND #$08
000681r 2  D0 08        		BNE @joy1
000683r 2  A9 02        		LDA #$02		; DOWN
000685r 2  0D rr rr     		ORA ACTION
000688r 2  8D rr rr     		STA ACTION
00068Br 2               		;
00068Br 2  98           @joy1:	TYA
00068Cr 2  29 10        		AND #$10
00068Er 2  D0 08        		BNE @joy2
000690r 2  A9 04        		LDA #$04		; LEFT
000692r 2  0D rr rr     		ORA ACTION
000695r 2  8D rr rr     		STA ACTION
000698r 2               		;
000698r 2  98           @joy2:	TYA
000699r 2  29 04        		AND #$04
00069Br 2  D0 08        		BNE @joy3
00069Dr 2  A9 08        		LDA #$08		; UP
00069Fr 2  0D rr rr     		ORA ACTION
0006A2r 2  8D rr rr     		STA ACTION
0006A5r 2               @joy3:
0006A5r 2  AD rr rr     		LDA ACTION
0006A8r 2  CD rr rr     		CMP ACTION2
0006ABr 2  F0 0B        		BEQ @oldact
0006ADr 2  8D rr rr     		STA ACTION2
0006B0r 2  A9 00        		LDA #00
0006B2r 2  8D rr rr     		STA ACTIONS
0006B5r 2  8D 0D 90     		STA VIC+$0D
0006B8r 2               @oldact:
0006B8r 2  AD rr rr     		LDA ACTIONS
0006BBr 2  29 03        		AND #$03		; repeat every 4-frames
0006BDr 2  F0 03        		BEQ @ckup
0006BFr 2  4C rr rr     		JMP @nochange
0006C2r 2               		;
0006C2r 2               @ckup:
0006C2r 2  EE rr rr     		INC SF2010
0006C5r 2  AD rr rr     		LDA ACTION
0006C8r 2  29 08        		AND #$08		; UP
0006CAr 2  F0 76        		BEQ @nonavi
0006CCr 2  AD rr rr     		LDA INERTIA
0006CFr 2  CD rr rr     		CMP DIRECTION
0006D2r 2  F0 51        		BEQ @accel		; same direction, accelerate
0006D4r 2  AD rr rr     		LDA SPEED
0006D7r 2  C9 03        		CMP #$03
0006D9r 2  90 4A        		BCC @accel		; at this snail pace, just allow new direction
0006DBr 2  C9 0B        		CMP #$0B
0006DDr 2  90 03        		BCC @turn
0006DFr 2  4C rr rr     		JMP @braking	; slowdown first, before turning
0006E2r 2  AD rr rr     @turn:	LDA INERTIA
0006E5r 2  CD rr rr     		CMP DIRECTION
0006E8r 2  B0 03        		BCS @delta
0006EAr 2  69 10        		ADC #$10
0006ECr 2  38           		SEC
0006EDr 2  ED rr rr     @delta:	SBC DIRECTION
0006F0r 2  C9 08        		CMP #$08
0006F2r 2  90 1B        		BCC @driftleft
0006F4r 2  D0 03        		BNE @driftright
0006F6r 2  4C rr rr     		JMP @braking
0006F9r 2               @driftright:
0006F9r 2  A9 FE        		LDA #$FE
0006FBr 2  8D 0D 90     		STA VIC+$0D
0006FEr 2  EE rr rr     		INC INERTIA
000701r 2  AD rr rr     		LDA INERTIA
000704r 2  C9 10        		CMP #$10
000706r 2  90 3A        		BCC @nonavi
000708r 2  A9 00        		LDA #$00
00070Ar 2  8D rr rr     		STA INERTIA
00070Dr 2  F0 33        		BEQ @nonavi
00070Fr 2               @driftleft:
00070Fr 2  A9 FE        		LDA #$FE
000711r 2  8D 0D 90     		STA VIC+$0D
000714r 2  CE rr rr     		DEC INERTIA
000717r 2  AD rr rr     		LDA INERTIA
00071Ar 2  C9 FF        		CMP #$FF
00071Cr 2  D0 24        		BNE @nonavi
00071Er 2  A9 0F        		LDA #$0F
000720r 2  8D rr rr     		STA INERTIA
000723r 2  D0 1D        		BNE @nonavi
000725r 2  AD rr rr     @accel:	LDA SPEED
000728r 2  C9 10        		CMP #$10
00072Ar 2  B0 03        		BCS @newdir
00072Cr 2  EE rr rr     		INC SPEED
00072Fr 2               @newdir:
00072Fr 2  AD rr rr     		LDA ENERGIZER
000732r 2  F0 0E        		BEQ @nonavi
000734r 2  CE rr rr     		DEC ENERGIZER
000737r 2  A9 FE        		LDA #$FE
000739r 2  8D 0D 90     		STA VIC+$0D
00073Cr 2  AD rr rr     		LDA DIRECTION
00073Fr 2  8D rr rr     		STA INERTIA
000742r 2               		;
000742r 2               @nonavi:
000742r 2  AD rr rr     		LDA ACTIONS
000745r 2  29 07        		AND #$07		; repeat every 8-frames
000747r 2  F0 03        		BEQ @ckright
000749r 2  4C rr rr     		JMP @nochange
00074Cr 2               @ckright:
00074Cr 2  AD rr rr     		LDA ACTION
00074Fr 2  29 01        		AND #$01		; RIGHT
000751r 2  F0 0F        		BEQ @ckleft
000753r 2               @goright:
000753r 2  EE rr rr     		INC DIRECTION
000756r 2  AD rr rr     		LDA DIRECTION
000759r 2  C9 10        		CMP #$10
00075Br 2  90 05        		BCC @ckleft
00075Dr 2  A9 00        		LDA #$00
00075Fr 2  8D rr rr     		STA DIRECTION
000762r 2               		;
000762r 2               @ckleft:
000762r 2  AD rr rr     		LDA ACTION
000765r 2  29 04        		AND #$04		; LEFT
000767r 2  F0 0F        		BEQ @ckdown
000769r 2               @goleft:
000769r 2  CE rr rr     		DEC DIRECTION
00076Cr 2  AD rr rr     		LDA DIRECTION
00076Fr 2  C9 FF        		CMP #$FF
000771r 2  90 05        		BCC @ckdown
000773r 2  A9 0F        		LDA #$0F
000775r 2  8D rr rr     		STA DIRECTION
000778r 2               		;
000778r 2               @ckdown:
000778r 2  AD rr rr     		LDA ACTION
00077Br 2  29 02        		AND #$02		; DOWN
00077Dr 2  F0 15        		BEQ @nochange
00077Fr 2               @braking:
00077Fr 2  AD rr rr     		LDA SPEED
000782r 2  F0 10        		BEQ @nochange
000784r 2  AD rr rr     		LDA ENERGIZER
000787r 2  F0 0B        		BEQ @nochange
000789r 2  CE rr rr     		DEC ENERGIZER
00078Cr 2  CE rr rr     		DEC SPEED
00078Fr 2  A9 FE        		LDA #$FE
000791r 2  8D 0D 90     		STA VIC+$0D
000794r 2               		;
000794r 2               @nochange:
000794r 2  EE rr rr     		INC ACTIONS
000797r 2  A0 rr        		LDY #>FURY0
000799r 2  AD rr rr     		LDA DIRECTION
00079Cr 2  0A           		ASL
00079Dr 2  0A           		ASL
00079Er 2  0A           		ASL
00079Fr 2  18           		CLC
0007A0r 2  69 rr        		ADC #<FURY0
0007A2r 2  90 01        		BCC @nocc
0007A4r 2  C8           		INY
0007A5r 2  AA           @nocc:	TAX
0007A6r 2  A9 01        		LDA #$01		; white
0007A8r 2  20 rr rr     		JSR SSSANIM		; update ship's direction
0007ABr 2               
0007ABr 2               OMEGAMOVE:
0007ABr 2  AD rr rr     		LDA SPEED
0007AEr 2  4A           		LSR
0007AFr 2  F0 29        		BEQ TACTICAL
0007B1r 2  A8           		TAY
0007B2r 2  AD rr rr     		LDA FRAME
0007B5r 2  29 07        		AND #$07
0007B7r 2  AA           		TAX
0007B8r 2  BD 70 82     		LDA MASK,X
0007BBr 2  39 rr rr     		AND VELOCITY-1,Y
0007BEr 2  F0 1A        		BEQ TACTICAL
0007C0r 2               		;
0007C0r 2  EE rr rr     		INC SF2010
0007C3r 2  EE rr rr     		INC THRUST		; ship will move this frame
0007C6r 2  AE rr rr     		LDX INERTIA
0007C9r 2  A0 00        		LDY #$00
0007CBr 2  20 rr rr     		JSR TRAVELING
0007CEr 2  8E rr rr     		STX INERTIA
0007D1r 2  AE 9B 02     		LDX R1
0007D4r 2  AC 9C 02     		LDY R2
0007D7r 2  20 rr rr     		JSR SSSMOVEXY
0007DAr 2               
0007DAr 2               TACTICAL:
0007DAr 2               		; replenish fuel and update energizer gauge
0007DAr 2  AD rr rr     		LDA FURYHP
0007DDr 2  F0 22        		BEQ @cc
0007DFr 2  AD rr rr     		LDA OMEGAHP
0007E2r 2  F0 20        		BEQ @mt			; no Omega energy field for fuel!!
0007E4r 2  AD rr rr     		LDA FRAME
0007E7r 2  29 02        		AND #$02
0007E9r 2  D0 1C        		BNE ENEMY
0007EBr 2  AD rr rr     		LDA @unit+1
0007EEr 2  49 03        		EOR #$03
0007F0r 2  8D rr rr     		STA @unit+1
0007F3r 2  AD rr rr     		LDA ENERGIZER
0007F6r 2  C9 FF        		CMP #$FF
0007F8r 2  F0 0D        		BEQ ENEMY
0007FAr 2  18           		CLC
0007FBr 2  69 02        @unit:	ADC #$02
0007FDr 2  90 02        		BCC @cc
0007FFr 2  A9 FF        		LDA #$FF
000801r 2  8D rr rr     @cc:	STA ENERGIZER
000804r 2  20 rr rr     @mt:	JSR WEAPONSTATUS
000807r 2               
000807r 2               ;*********************************************************************
000807r 2               ; ENEMY CRAFT
000807r 2               ;
000807r 2               ENEMY:
000807r 2  A2 00        		LDX #$00
000809r 2  8E rr rr     		STX LOOPX
00080Cr 2               @loop:
00080Cr 2  BD rr rr     		LDA NME,X
00080Fr 2  D0 03        		BNE @ok
000811r 2  4C rr rr     @not:	JMP @next
000814r 2  BD rr rr     @ok:	LDA NME,X		; active?
000817r 2  F0 F8        		BEQ @not
000819r 2  BD rr rr     		LDA NMESPEED,X
00081Cr 2  4A           		LSR
00081Dr 2  F0 35        		BEQ @x			; stationary?
00081Fr 2  A8           		TAY
000820r 2  AD rr rr     		LDA FRAME
000823r 2  29 07        		AND #$07
000825r 2  AA           		TAX
000826r 2  BD 70 82     		LDA MASK,X
000829r 2  39 rr rr     		AND VELOCITY-1,Y
00082Cr 2  D0 03        		BNE @go
00082Er 2  4C rr rr     		JMP @next
000831r 2               @go:
000831r 2  AE rr rr     		LDX LOOPX
000834r 2  BD rr rr     		LDA NMEDIR,X
000837r 2  AA           		TAX				; X = direction
000838r 2  AC rr rr     		LDY LOOPX
00083Br 2  20 rr rr     		JSR TRAVELING2	; what's the next correct move?
00083Er 2  8A           		TXA
00083Fr 2  AE rr rr     		LDX LOOPX
000842r 2  9D rr rr     		STA NMEDIR,X
000845r 2  8A           		TXA
000846r 2  18           		CLC
000847r 2  69 08        		ADC #$08
000849r 2  85 90        		STA sssNUM
00084Br 2  AE 9B 02     		LDX R1
00084Er 2  AC 9C 02     		LDY R2
000851r 2  20 rr rr     		JSR SSSMOVEXY
000854r 2               @x:
000854r 2  AE rr rr     		LDX LOOPX
000857r 2  BD rr rr     		LDA SPRITEX+8,X
00085Ar 2  29 07        		AND #$07
00085Cr 2  F0 03        		BEQ @y
00085Er 2  4C rr rr     		JMP @anim		; in-between cells
000861r 2  BD rr rr     @y:		LDA SPRITEY+8,X
000864r 2  29 07        		AND #$07
000866r 2  F0 03        		BEQ @l
000868r 2  4C rr rr     		JMP @anim		; in-between cells
00086Br 2  DE rr rr     @l:		DEC NMELEN,X
00086Er 2  FE rr rr     		INC NMETHRUST,X	; account for this action
000871r 2  BD rr rr     		LDA NMESPEED,X
000874r 2  D0 16        		BNE @moving
000876r 2  BD rr rr     		LDA NMEPLAN,X
000879r 2  F0 3D        		BEQ @warpout	; operation spoil-sport
00087Br 2  BD rr rr     		LDA NMETHRUST,X
00087Er 2  29 1F        		AND #$1F
000880r 2  D0 0A        		BNE @moving
000882r 2               @firing:
000882r 2  BD rr rr     		LDA NMEDIR,X
000885r 2  A8           		TAY
000886r 2  BD rr rr     		LDA NME,X
000889r 2  20 rr rr     		JSR NEWPHASER
00088Cr 2               @moving:
00088Cr 2  AE rr rr     		LDX LOOPX
00088Fr 2  BD rr rr     		LDA NMETURN,X
000892r 2  F0 16        		BEQ @noturn
000894r 2  18           		CLC
000895r 2  7D rr rr     		ADC NMEDIR,X	; ship is still completing a U-turn
000898r 2  29 0F        		AND #$0F
00089Ar 2  9D rr rr     		STA NMEDIR,X
00089Dr 2  BD rr rr     		LDA NMELEN,X
0008A0r 2  D0 55        		BNE @anim
0008A2r 2  9D rr rr     		STA NMETURN,X	; ship completed turn
0008A5r 2  FE rr rr     		INC NMELEN,X	; travel another space
0008A8r 2  D0 4D        		BNE @anim
0008AAr 2               @noturn:
0008AAr 2  BD rr rr     		LDA NMELEN,X
0008ADr 2  D0 48        		BNE @anim
0008AFr 2  9D rr rr     		STA NMETURN,X
0008B2r 2  20 rr rr     		JSR PLANNING	; re-examine for any change in agenda
0008B5r 2  4C rr rr     		JMP @anim
0008B8r 2               @warpout:
0008B8r 2  BD rr rr     		LDA NMELEN,X
0008BBr 2  C9 01        		CMP #$01
0008BDr 2  D0 38        		BNE @anim
0008BFr 2  A9 00        		LDA #$00
0008C1r 2  9D rr rr     		STA NME,X
0008C4r 2  BD rr rr     		LDA NMEDIR,X
0008C7r 2  8D rr rr     		STA NEUTRONDIR
0008CAr 2  CE rr rr     		DEC OBJECTIVE
0008CDr 2  BD rr rr     		LDA SPRITEDEF+8,X
0008D0r 2  29 7F        		AND #$7F
0008D2r 2  9D rr rr     		STA SPRITEDEF+8,X
0008D5r 2  BD rr rr     		LDA SPRITEY+8,X
0008D8r 2  48           		PHA				;++
0008D9r 2  A8           		TAY
0008DAr 2  A9 00        		LDA #$00
0008DCr 2  9D rr rr     		STA SPRITEY+8,X	; baseship leaves
0008DFr 2  BD rr rr     		LDA SPRITEX+8,X
0008E2r 2  48           		PHA				;++
0008E3r 2  AA           		TAX
0008E4r 2  20 rr rr     		JSR NEWJUMPMARK
0008E7r 2  68           		PLA				;--
0008E8r 2  18           		CLC
0008E9r 2  69 04        		ADC #$04
0008EBr 2  AA           		TAX
0008ECr 2  68           		PLA				;--
0008EDr 2  18           		CLC
0008EEr 2  69 04        		ADC #$04
0008F0r 2  A8           		TAY
0008F1r 2  20 rr rr     		JSR NEWNEUTRONBOMB
0008F4r 2  4C rr rr     		JMP @next
0008F7r 2               @anim:
0008F7r 2  AE rr rr     		LDX LOOPX
0008FAr 2  8A           		TXA
0008FBr 2  18           		CLC
0008FCr 2  69 08        		ADC #$08
0008FEr 2  85 90        		STA sssNUM
000900r 2  BD rr rr     		LDA NMEDIR,X
000903r 2  A8           		TAY
000904r 2  BD rr rr     		LDA NME,X
000907r 2  F0 21        		BEQ @next
000909r 2  C9 01        @s1:	CMP #$01
00090Br 2  D0 06        		BNE @s2
00090Dr 2  20 rr rr     		JSR SCOUT
000910r 2  4C rr rr     		JMP @next
000913r 2  C9 02        @s2:	CMP #$02
000915r 2  D0 06        		BNE @s3
000917r 2  20 rr rr     		JSR CRUISER
00091Ar 2  4C rr rr     		JMP @next
00091Dr 2  C9 03        @s3:	CMP #$03
00091Fr 2  D0 06        		BNE @s4
000921r 2  20 rr rr     		JSR DESTROYER
000924r 2  4C rr rr     		JMP @next
000927r 2  20 rr rr     @s4:	JSR CARRIER
00092Ar 2               @next:
00092Ar 2  EE rr rr     		INC LOOPX
00092Dr 2  AE rr rr     		LDX LOOPX
000930r 2  E0 04        		CPX #$04
000932r 2  F0 03        		BEQ @fini
000934r 2  4C rr rr     		JMP @loop
000937r 2               @fini:
000937r 2               
000937r 2               ;*********************************************************************
000937r 2               ; NPC MOVES
000937r 2               ;
000937r 2  AD rr rr     		LDA NEUTRON
00093Ar 2  F0 0A        		BEQ PLAYERSHOTS
00093Cr 2  AD rr rr     		LDA FRAME
00093Fr 2  29 07        		AND #$07		; move agonizingly slow
000941r 2  D0 03        		BNE PLAYERSHOTS
000943r 2  20 rr rr     		JSR OLDNEUTRONBOMB
000946r 2               
000946r 2               PLAYERSHOTS:
000946r 2  A2 00        		LDX #$00
000948r 2  8E rr rr     		STX LOOPX
00094Br 2  BD rr rr     @hero:	LDA BOLT,X
00094Er 2  F0 03        		BEQ @next
000950r 2  20 rr rr     		JSR OLDBOLT
000953r 2  EE rr rr     @next:	INC LOOPX
000956r 2  AE rr rr     		LDX LOOPX
000959r 2  E0 03        		CPX #$03
00095Br 2  D0 EE        		BNE @hero
00095Dr 2               		;
00095Dr 2               NMESHOTS:
00095Dr 2  A2 00        		LDX #$00
00095Fr 2  8E rr rr     		STX LOOPX
000962r 2  BD rr rr     @nme:	LDA NMESHOT,X
000965r 2  F0 03        		BEQ @next
000967r 2  20 rr rr     		JSR OLDPHASER
00096Ar 2  EE rr rr     @next:	INC LOOPX
00096Dr 2  AE rr rr     		LDX LOOPX
000970r 2  E0 04        		CPX #$04
000972r 2  D0 EE        		BNE @nme
000974r 2               		;
000974r 2  AD rr rr     		LDA HITMARK
000977r 2  F0 03        		BEQ @nohit
000979r 2  20 rr rr     		JSR OLDHITMARK
00097Cr 2  AD rr rr     @nohit:	LDA BIGHITMARK
00097Fr 2  F0 03        		BEQ @nobig
000981r 2  20 rr rr     		JSR OLDBIGHITMARK
000984r 2  AD rr rr     @nobig:	LDA JUMPMARK
000987r 2  F0 03        		BEQ @nojump
000989r 2  20 rr rr     		JSR OLDJUMPMARK
00098Cr 2               @nojump:
00098Cr 2               		;
00098Cr 2               MINEPROXIMITY:
00098Cr 2  A2 00        		LDX #$00
00098Er 2  8E 9E 02     		STX R4
000991r 2  BD rr rr     @loop:	LDA MINES,X
000994r 2  D0 03        		BNE @q1
000996r 2  4C rr rr     		JMP @next
000999r 2               		;
000999r 2  C9 01        @q1:	CMP #$01		; grenade
00099Br 2  F0 03        		BEQ @m1
00099Dr 2  4C rr rr     		JMP @q2
0009A0r 2  BD rr rr     @m1:	LDA MINEX,X
0009A3r 2  0A           		ASL
0009A4r 2  0A           		ASL
0009A5r 2  0A           		ASL
0009A6r 2  18           		CLC
0009A7r 2  69 10        		ADC #$10
0009A9r 2  38           		SEC
0009AAr 2  ED rr rr     		SBC SPRITEX+12
0009ADr 2  B0 05        		BCS @nov1
0009AFr 2  49 FF        		EOR #$FF
0009B1r 2  18           		CLC
0009B2r 2  69 01        		ADC #$01
0009B4r 2  C9 08        @nov1:	CMP #$08
0009B6r 2  90 03        		BCC @x1
0009B8r 2  4C rr rr     		JMP @next
0009BBr 2  BD rr rr     @x1:	LDA MINEY,X
0009BEr 2  0A           		ASL
0009BFr 2  0A           		ASL
0009C0r 2  0A           		ASL
0009C1r 2  18           		CLC
0009C2r 2  69 10        		ADC #$10
0009C4r 2  38           		SEC
0009C5r 2  ED rr rr     		SBC SPRITEY+12
0009C8r 2  B0 05        		BCS @nov2
0009CAr 2  49 FF        		EOR #$FF
0009CCr 2  18           		CLC
0009CDr 2  69 01        		ADC #$01
0009CFr 2  C9 08        @nov2:	CMP #$08
0009D1r 2  90 03        		BCC @y1
0009D3r 2  4C rr rr     		JMP @next
0009D6r 2  20 rr rr     @y1:	JSR XMINE
0009D9r 2  A9 18        		LDA #$18
0009DBr 2  20 rr rr     		JSR FURYHIT
0009DEr 2  4E rr rr     		LSR SPEED
0009E1r 2  20 rr rr     		JSR RNDNEXT
0009E4r 2  29 0F        		AND #$0F
0009E6r 2  20 rr rr     		JSR FURYNAVI
0009E9r 2  4C rr rr     		JMP @next
0009ECr 2               		;
0009ECr 2  C9 02        @q2:	CMP #$02		; hull blaster
0009EEr 2  F0 03        		BEQ @m2
0009F0r 2  4C rr rr     		JMP @q3
0009F3r 2  BD rr rr     @m2:	LDA MINEX,X
0009F6r 2  0A           		ASL
0009F7r 2  0A           		ASL
0009F8r 2  0A           		ASL
0009F9r 2  18           		CLC
0009FAr 2  69 10        		ADC #$10
0009FCr 2  38           		SEC
0009FDr 2  ED rr rr     		SBC SPRITEX+12
000A00r 2  B0 05        		BCS @nov3
000A02r 2  49 FF        		EOR #$FF
000A04r 2  18           		CLC
000A05r 2  69 01        		ADC #$01
000A07r 2  C9 10        @nov3:	CMP #$10
000A09r 2  90 03        		BCC @x2
000A0Br 2  4C rr rr     		JMP @next
000A0Er 2  BD rr rr     @x2:	LDA MINEY,X
000A11r 2  0A           		ASL
000A12r 2  0A           		ASL
000A13r 2  0A           		ASL
000A14r 2  18           		CLC
000A15r 2  69 10        		ADC #$10
000A17r 2  38           		SEC
000A18r 2  ED rr rr     		SBC SPRITEY+12
000A1Br 2  B0 05        		BCS @nov4
000A1Dr 2  49 FF        		EOR #$FF
000A1Fr 2  18           		CLC
000A20r 2  69 01        		ADC #$01
000A22r 2  C9 10        @nov4:	CMP #$10
000A24r 2  90 03        		BCC @y2
000A26r 2  4C rr rr     		JMP @next
000A29r 2  20 rr rr     @y2:	JSR XMINE
000A2Cr 2  A9 10        		LDA #$10
000A2Er 2  20 rr rr     		JSR FURYHIT
000A31r 2  20 rr rr     		JSR RNDNEXT
000A34r 2  29 1F        		AND #$1F
000A36r 2  20 rr rr     		JSR FURYNAVI
000A39r 2  4C rr rr     		JMP @next
000A3Cr 2               		;
000A3Cr 2  C9 03        @q3:	CMP #$03			; sonic boomer
000A3Er 2  F0 03        		BEQ @m3
000A40r 2  4C rr rr     		JMP @q4
000A43r 2  AD rr rr     @m3:	LDA BOOMER
000A46r 2  D0 46        		BNE @m3a
000A48r 2  AD rr rr     		LDA BOOMB4
000A4Br 2  CD 9E 02     		CMP R4
000A4Er 2  F0 05        		BEQ @m3new
000A50r 2  90 03        		BCC @m3new
000A52r 2  4C rr rr     		JMP @next
000A55r 2  8A           @m3new:	TXA
000A56r 2  A8           		TAY
000A57r 2  C8           		INY
000A58r 2  8C rr rr     		STY BOOMER			; start next boomer
000A5Br 2  BD rr rr     		LDA MINEX,X
000A5Er 2  0A           		ASL
000A5Fr 2  0A           		ASL
000A60r 2  0A           		ASL
000A61r 2  18           		CLC
000A62r 2  69 10        		ADC #$10
000A64r 2  8D rr rr     		STA BOOMX
000A67r 2  BD rr rr     		LDA MINEY,X
000A6Ar 2  0A           		ASL
000A6Br 2  0A           		ASL
000A6Cr 2  0A           		ASL
000A6Dr 2  18           		CLC
000A6Er 2  69 10        		ADC #$10
000A70r 2  8D rr rr     		STA BOOMY
000A73r 2  20 rr rr     		JSR RNDNEXT
000A76r 2  29 03        		AND #$03
000A78r 2  A8           		TAY
000A79r 2  B9 rr rr     		LDA BOOMITC,Y
000A7Cr 2  8D rr rr     		STA BOOMC
000A7Fr 2  B9 rr rr     		LDA BOOMITX,Y
000A82r 2  8D rr rr     		STA BOOMDX
000A85r 2  B9 rr rr     		LDA BOOMITY,Y
000A88r 2  8D rr rr     		STA BOOMDY
000A8Br 2  AE 9E 02     		LDX R4
000A8Er 2  BD rr rr     @m3a:	LDA MINEX,X
000A91r 2  0A           		ASL
000A92r 2  0A           		ASL
000A93r 2  0A           		ASL
000A94r 2  18           		CLC
000A95r 2  69 10        		ADC #$10
000A97r 2  38           		SEC
000A98r 2  ED rr rr     		SBC SPRITEX+12
000A9Br 2  B0 05        		BCS @nov5
000A9Dr 2  49 FF        		EOR #$FF
000A9Fr 2  18           		CLC
000AA0r 2  69 01        		ADC #$01
000AA2r 2  C9 08        @nov5:	CMP #$08
000AA4r 2  90 03        		BCC @x3
000AA6r 2  4C rr rr     		JMP @next
000AA9r 2  BD rr rr     @x3:	LDA MINEY,X
000AACr 2  0A           		ASL
000AADr 2  0A           		ASL
000AAEr 2  0A           		ASL
000AAFr 2  18           		CLC
000AB0r 2  69 10        		ADC #$10
000AB2r 2  38           		SEC
000AB3r 2  ED rr rr     		SBC SPRITEY+12
000AB6r 2  B0 05        		BCS @nov6
000AB8r 2  49 FF        		EOR #$FF
000ABAr 2  18           		CLC
000ABBr 2  69 01        		ADC #$01
000ABDr 2  C9 08        @nov6:	CMP #$08
000ABFr 2  90 03        		BCC @y3
000AC1r 2  4C rr rr     		JMP @next
000AC4r 2  20 rr rr     @y3:	JSR XMINE
000AC7r 2  A9 02        		LDA #$02
000AC9r 2  20 rr rr     		JSR FURYHIT
000ACCr 2  AD rr rr     		LDA FRAME
000ACFr 2  29 07        		AND #$07
000AD1r 2  20 rr rr     		JSR FURYNAVI
000AD4r 2  4C rr rr     		JMP @next
000AD7r 2               		;
000AD7r 2  C9 04        @q4:	CMP #$04			; heart-stopper
000AD9r 2  D0 53        		BNE @next
000ADBr 2  BD rr rr     @m4:	LDA MINEX,X
000ADEr 2  0A           		ASL
000ADFr 2  0A           		ASL
000AE0r 2  0A           		ASL
000AE1r 2  18           		CLC
000AE2r 2  69 10        		ADC #$10
000AE4r 2  38           		SEC
000AE5r 2  ED rr rr     		SBC SPRITEX+12
000AE8r 2  B0 05        		BCS @nov7
000AEAr 2  49 FF        		EOR #$FF
000AECr 2  18           		CLC
000AEDr 2  69 01        		ADC #$01
000AEFr 2  C9 20        @nov7:	CMP #$20
000AF1r 2  90 03        		BCC @x4
000AF3r 2  4C rr rr     		JMP @next
000AF6r 2  BD rr rr     @x4:	LDA MINEY,X
000AF9r 2  0A           		ASL
000AFAr 2  0A           		ASL
000AFBr 2  0A           		ASL
000AFCr 2  18           		CLC
000AFDr 2  69 10        		ADC #$10
000AFFr 2  38           		SEC
000B00r 2  ED rr rr     		SBC SPRITEY+12
000B03r 2  B0 05        		BCS @nov8
000B05r 2  49 FF        		EOR #$FF
000B07r 2  18           		CLC
000B08r 2  69 01        		ADC #$01
000B0Ar 2  C9 20        @nov8:	CMP #$20
000B0Cr 2  90 03        		BCC @y4
000B0Er 2  4C rr rr     		JMP @next
000B11r 2  20 rr rr     @y4:	JSR XMINE
000B14r 2  A9 AA        		LDA #$AA		; pink / red
000B16r 2  8D 0F 90     		STA VIC+$0F
000B19r 2  CE rr rr     		DEC HEARTBEATS
000B1Cr 2  A9 00        		LDA #$00
000B1Er 2  8D rr rr     		STA ENERGIZER
000B21r 2  A9 32        		LDA #$32
000B23r 2  20 rr rr     		JSR FURYHIT
000B26r 2  20 rr rr     		JSR RNDNEXT
000B29r 2  29 3F        		AND #$3F
000B2Br 2  20 rr rr     		JSR FURYNAVI
000B2Er 2  EE 9E 02     @next:	INC R4
000B31r 2  AE 9E 02     		LDX R4
000B34r 2  E0 10        		CPX #$10
000B36r 2  F0 03        		BEQ @xmines
000B38r 2  4C rr rr     		JMP @loop
000B3Br 2               @xmines:
000B3Br 2  AD rr rr     		LDA FRAME
000B3Er 2  29 03        		AND #$03
000B40r 2  D0 08        		BNE @noboom
000B42r 2  AD rr rr     		LDA BOOMER
000B45r 2  D0 06        		BNE @boom
000B47r 2  4C rr rr     		JMP @xboom
000B4Ar 2               @noboom:
000B4Ar 2  4C rr rr     		JMP NMEPROXIMITY
000B4Dr 2               @boom:					; do sonic boomer probing ...
000B4Dr 2  AE rr rr     		LDX BOOMX
000B50r 2  AC rr rr     		LDY BOOMY
000B53r 2  20 rr rr     		JSR SSSPEEKXY
000B56r 2  CD rr rr     		CMP BOOMC
000B59r 2  F0 0A        		BEQ @erase
000B5Br 2  C9 A0        		CMP #SSSNULL
000B5Dr 2  F0 0B        		BEQ @boom2
000B5Fr 2  C9 20        		CMP #$20
000B61r 2  90 07        		BCC @boom2		; allow passthru of other mines
000B63r 2  B0 13        		BCS @ng
000B65r 2  A9 A0        @erase:	LDA #SSSNULL
000B67r 2  20 rr rr     		JSR SSSPOKE
000B6Ar 2  AD rr rr     @boom2:	LDA BOOMX
000B6Dr 2  18           		CLC
000B6Er 2  6D rr rr     		ADC BOOMDX
000B71r 2  8D rr rr     		STA BOOMX
000B74r 2  C9 10        		CMP #$10
000B76r 2  B0 08        		BCS @x
000B78r 2  4C rr rr     @ng:	JMP @xboom		; disrupt wave
000B7Br 2  CD 98 02     		CMP SSSCLIPX
000B7Er 2  B0 F8        		BCS @ng
000B80r 2  AA           @x:		TAX
000B81r 2  AD rr rr     		LDA BOOMY
000B84r 2  18           		CLC
000B85r 2  6D rr rr     		ADC BOOMDY
000B88r 2  8D rr rr     		STA BOOMY
000B8Br 2  C9 10        		CMP #$10
000B8Dr 2  90 E9        		BCC @ng
000B8Fr 2  C9 C8        		CMP #200		; SSSCLIPY - 8
000B91r 2  B0 E5        		BCS @ng
000B93r 2  A8           @y:		TAY
000B94r 2  20 rr rr     		JSR SSSPEEKXY
000B97r 2  C9 A0        		CMP #SSSNULL
000B99r 2  D0 6A        		BNE NMEPROXIMITY
000B9Br 2  A6 D3        		LDX CRSRCOL
000B9Dr 2  A4 D6        		LDY CRSRROW
000B9Fr 2  20 rr rr     		JSR SSSPEEKS
000BA2r 2  C9 A0        		CMP #SSSNULL
000BA4r 2  D0 5F        		BNE NMEPROXIMITY
000BA6r 2  A6 D3        		LDX CRSRCOL
000BA8r 2  A4 D6        		LDY CRSRROW
000BAAr 2  20 rr rr     		JSR SSSPLOT
000BADr 2  A9 04        		LDA #$04		; MAGENTA
000BAFr 2  8D 86 02     		STA COLORCODE
000BB2r 2  AD rr rr     		LDA BOOMC
000BB5r 2  20 rr rr     		JSR SSSPOKE
000BB8r 2  AD rr rr     		LDA BOOMX
000BBBr 2  38           		SEC
000BBCr 2  ED rr rr     		SBC SPRITEX+12
000BBFr 2  B0 05        		BCS @bx
000BC1r 2  49 FF        		EOR #$FF
000BC3r 2  18           		CLC
000BC4r 2  69 01        		ADC #$01
000BC6r 2  C9 08        @bx:	CMP #$08
000BC8r 2  90 03        		BCC @bhx
000BCAr 2  4C rr rr     		JMP NMEPROXIMITY
000BCDr 2  AD rr rr     @bhx:	LDA BOOMY
000BD0r 2  38           		SEC
000BD1r 2  ED rr rr     		SBC SPRITEY+12
000BD4r 2  B0 05        		BCS @by
000BD6r 2  49 FF        		EOR #$FF
000BD8r 2  18           		CLC
000BD9r 2  69 01        		ADC #$01
000BDBr 2  C9 08        @by:	CMP #$08
000BDDr 2  90 03        		BCC @bhy
000BDFr 2  4C rr rr     		JMP NMEPROXIMITY
000BE2r 2  A9 01        @bhy:	LDA #$01
000BE4r 2  8D rr rr     		STA BOOMED
000BE7r 2  20 rr rr     		JSR FURYHIT
000BEAr 2  A9 32        		LDA #$32		; NAVICOM requires a re-boot
000BECr 2  20 rr rr     		JSR FURYNAVI
000BEFr 2  A9 00        		LDA #$00		; shutoff any noise
000BF1r 2  8D rr rr     		STA HIT
000BF4r 2  8D 0D 90     		STA VIC+$0D
000BF7r 2  4C rr rr     		JMP NMEPROXIMITY
000BFAr 2  AD rr rr     @xboom:	LDA BOOMER
000BFDr 2  8D rr rr     		STA BOOMB4
000C00r 2  A9 00        		LDA #$00
000C02r 2  8D rr rr     		STA BOOMER
000C05r 2               		;
000C05r 2               NMEPROXIMITY:
000C05r 2  AE rr rr     		LDX COLLISION
000C08r 2  F0 06        		BEQ @cont
000C0Ar 2  CE rr rr     		DEC COLLISION
000C0Dr 2  4C rr rr     		JMP @xnme
000C10r 2  A2 00        @cont:	LDX #$00
000C12r 2  8E rr rr     		STX LOOPX
000C15r 2  BD rr rr     @loop:	LDA NME,X
000C18r 2  D0 03        		BNE @ck
000C1Ar 2  4C rr rr     		JMP @next
000C1Dr 2  A9 01        @ck:	LDA #$01		; adjustment for EOR operation
000C1Fr 2  8D 0C 03     		STA ACOPY
000C22r 2  A9 08        		LDA #$08
000C24r 2  DD rr rr     		CMP SPRITEH+8,X
000C27r 2  F0 05        		BEQ @nme
000C29r 2  A9 F9        		LDA #$F9		; adjust for carrier collision (-7)
000C2Br 2  8D 0C 03     		STA ACOPY
000C2Er 2  BD rr rr     @nme:	LDA SPRITEX+8,X
000C31r 2  38           		SEC
000C32r 2  ED rr rr     		SBC SPRITEX+12
000C35r 2  B0 06        		BCS @nov1
000C37r 2  49 FF        		EOR #$FF
000C39r 2  18           		CLC
000C3Ar 2  6D 0C 03     		ADC ACOPY
000C3Dr 2  C9 08        @nov1:	CMP #$08
000C3Fr 2  B0 68        		BCS @next
000C41r 2  BD rr rr     		LDA SPRITEY+8,X
000C44r 2  38           		SEC
000C45r 2  ED rr rr     		SBC SPRITEY+12
000C48r 2  B0 06        		BCS @nov2
000C4Ar 2  49 FF        		EOR #$FF
000C4Cr 2  18           		CLC
000C4Dr 2  6D 0C 03     		ADC ACOPY
000C50r 2  C9 08        @nov2:	CMP #$08
000C52r 2  B0 55        		BCS @next
000C54r 2  AE rr rr     		LDX SPRITEX+12
000C57r 2  AC rr rr     		LDY SPRITEY+12
000C5Ar 2  20 rr rr     		JSR NEWHITMARK	; player hit
000C5Dr 2  A9 E0        		LDA #$E0
000C5Fr 2  8D rr rr     		STA HIT
000C62r 2  AE rr rr     		LDX LOOPX
000C65r 2  DE rr rr     		DEC NMEHP,X		; scratch the enemy's hull paint
000C68r 2  D0 10        		BNE @paint
000C6Ar 2               		; killed enemy by ramming it -- no score
000C6Ar 2  A9 00        		LDA #$00
000C6Cr 2  9D rr rr     		STA NME,X
000C6Fr 2  BD rr rr     		LDA SPRITEDEF+8,X
000C72r 2  29 7F        		AND #$7F		; disable sprite
000C74r 2  9D rr rr     		STA SPRITEDEF+8,X
000C77r 2  CE rr rr     		DEC OBJECTIVE
000C7Ar 2  BD rr rr     @paint:	LDA SPRITEH+8,X	; bigger the ship, the bigger the hit
000C7Dr 2  18           		CLC
000C7Er 2  6D rr rr     		ADC SPEED		; and the faster you were going
000C81r 2  4A           		LSR				; half
000C82r 2  20 rr rr     		JSR FURYHIT
000C85r 2  AD rr rr     		LDA FURYHP
000C88r 2  F0 2C        		BEQ @xnme
000C8Ar 2  A9 08        		LDA #$08
000C8Cr 2  8D rr rr     		STA SPEED
000C8Fr 2  A9 38        		LDA #$38		; 56-frames of immunity
000C91r 2  8D rr rr     		STA COLLISION
000C94r 2  AD rr rr     		LDA INERTIA
000C97r 2  49 08        		EOR #$08		; reverse direction
000C99r 2  8D rr rr     		STA INERTIA
000C9Cr 2  A9 64        		LDA #100
000C9Er 2  20 rr rr     		JSR RND
000CA1r 2  29 0F        		AND #$0F
000CA3r 2  20 rr rr     		JSR FURYNAVI
000CA6r 2  4C rr rr     		JMP @xnme		; go!
000CA9r 2  EE rr rr     @next:	INC LOOPX
000CACr 2  AE rr rr     		LDX LOOPX
000CAFr 2  E0 04        		CPX #$04
000CB1r 2  F0 03        		BEQ @xnme
000CB3r 2  4C rr rr     		JMP @loop
000CB6r 2               @xnme:
000CB6r 2  AD rr rr     		LDA SHIPS
000CB9r 2  F0 0B        		BEQ @nomore		; more ships for this mission?
000CBBr 2  EE rr rr     		INC FRAME		; anim counter
000CBEr 2  A0 00        		LDY #$00
000CC0r 2  20 rr rr     		JSR SSSFFLIP	; render, but skip a frame if necessary
000CC3r 2  4C rr rr     		JMP GAMELOOP
000CC6r 2               @nomore:
000CC6r 2  AD rr rr     		LDA OBJECTIVE
000CC9r 2  D0 03        		BNE @notdone	; completed this mission?
000CCBr 2  4C rr rr     		JMP FINILEVEL
000CCEr 2               @notdone:
000CCEr 2  AD rr rr     		LDA FURYHP
000CD1r 2  D0 16        		BNE @alive
000CD3r 2  AD rr rr     		LDA MISSION
000CD6r 2  F0 1C        		BEQ @fini		; dead at the acamedy?  You suck.
000CD8r 2  AD rr rr     		LDA OMEGAHP
000CDBr 2  D0 0C        		BNE @alive
000CDDr 2  AD rr rr     		LDA NAVI
000CE0r 2  F0 12        		BEQ @fini
000CE2r 2  20 rr rr     		JSR KILLOBJECTIVE
000CE5r 2  A0 00        		LDY #$00
000CE7r 2  84 C6        		STY $C6			; empty keyboard buffer
000CE9r 2               @alive:
000CE9r 2  EE rr rr     		INC FRAME		; anim counter
000CECr 2  A0 00        		LDY #$00
000CEEr 2  20 rr rr     		JSR SSSFFLIP	; render, but skip a frame if necessary
000CF1r 2  4C rr rr     		JMP OMEGAFURY	; complete the game loop until over
000CF4r 2               		;
000CF4r 2               @fini:
000CF4r 2  A9 08        		LDA #$08
000CF6r 2  8D 0F 90     		STA VIC+$0F
000CF9r 2  AD rr rr     		LDA FRAME
000CFCr 2  29 01        		AND #$01
000CFEr 2  AA           		TAX
000CFFr 2  BD rr rr     		LDA SPRITEDEF+8,X
000D02r 2  49 80        		EOR #$80		; flicker Thargoid sprite #0/1
000D04r 2  9D rr rr     		STA SPRITEDEF+8,X
000D07r 2  BD rr rr     		LDA SPRITEDEF+10,X
000D0Ar 2  49 80        		EOR #$80		; flicker Thargoid sprite #2/3
000D0Cr 2  9D rr rr     		STA SPRITEDEF+10,X
000D0Fr 2  20 rr rr     		JSR SSSREFRESH
000D12r 2  20 rr rr     		JSR GAMEOVER
000D15r 2  20 rr rr     		JSR DRAWRANK
000D18r 2  EE rr rr     		INC FRAME		; anim counter
000D1Br 2  A0 00        		LDY #$00
000D1Dr 2  20 rr rr     		JSR SSSFLIP
000D20r 2  20 E4 FF     @scan:	JSR GETIN		; get keyboard
000D23r 2  C9 85        		CMP #$85		; got F1 ?
000D25r 2  F0 0F        		BEQ GOODBYE		; try again ...
000D27r 2  A9 FF        		LDA #$FF
000D29r 2  8D 22 91     		STA $9122
000D2Cr 2  AD 11 91     		LDA $9111
000D2Fr 2  29 20        		AND #$20		; FIRE
000D31r 2  F0 03        		BEQ GOODBYE
000D33r 2  4C rr rr     		JMP ENEMY
000D36r 2               
000D36r 2               ;*********************************************************************
000D36r 2               ; FAREWELL TO THIS GAMING SESSION
000D36r 2               ;
000D36r 2               GOODBYE:
000D36r 2  A9 A0        		LDA #SSSNULL
000D38r 2  20 rr rr     		JSR SSSCLEAR
000D3Br 2  A0 00        		LDY #$00		; render immediate
000D3Dr 2  20 rr rr     		JSR SSSFLIP
000D40r 2  4C rr rr     		JMP RESTART
000D43r 2               
000D43r 2               ;*********************************************************************
000D43r 2               ; COMPLETED THIS LEVEL'S OBJECTIVE
000D43r 2               ;
000D43r 2               FINILEVEL:
000D43r 2  A9 C0        		LDA #$C0
000D45r 2  8D rr rr     		STA FRAME		; allow for current sequencing to complete
000D48r 2               @loop:
000D48r 2  A2 00        		LDX #$00
000D4Ar 2  8E rr rr     		STX LOOPX
000D4Dr 2  BD rr rr     @hero:	LDA BOLT,X
000D50r 2  F0 03        		BEQ @next
000D52r 2  20 rr rr     		JSR OLDBOLT
000D55r 2  EE rr rr     @next:	INC LOOPX
000D58r 2  AE rr rr     		LDX LOOPX
000D5Br 2  E0 03        		CPX #$03
000D5Dr 2  D0 EE        		BNE @hero
000D5Fr 2               @hits:
000D5Fr 2  AD rr rr     		LDA HITMARK
000D62r 2  F0 03        		BEQ @nohit
000D64r 2  20 rr rr     		JSR OLDHITMARK
000D67r 2  AD rr rr     @nohit:	LDA BIGHITMARK
000D6Ar 2  F0 03        		BEQ @nobig
000D6Cr 2  20 rr rr     		JSR OLDBIGHITMARK
000D6Fr 2  AD rr rr     @nobig:	LDA JUMPMARK
000D72r 2  F0 03        		BEQ @nojump
000D74r 2  20 rr rr     		JSR OLDJUMPMARK
000D77r 2               @nojump:
000D77r 2  A0 01        		LDY #$01
000D79r 2  20 rr rr     		JSR SSSFLIP
000D7Cr 2  EE rr rr     		INC FRAME
000D7Fr 2  D0 C7        		BNE @loop
000D81r 2               		;
000D81r 2  A2 00        		LDX #$00
000D83r 2  8E rr rr     		STX HEARTBEATS
000D86r 2  BD rr rr     @mt:	LDA SPRITEDEF,X
000D89r 2  29 7F        		AND #$7F		; disable sprite
000D8Br 2  9D rr rr     		STA SPRITEDEF,X
000D8Er 2  E8           		INX
000D8Fr 2  E4 B7        		CPX SPRITES
000D91r 2  D0 F3        		BNE @mt
000D93r 2  A0 00        		LDY #$00
000D95r 2  20 rr rr     		JSR SSSFLIP
000D98r 2               		;
000D98r 2  EE rr rr     		INC MISSION
000D9Br 2  AD rr rr     		LDA MISSION
000D9Er 2  C9 10        		CMP #$10
000DA0r 2  90 05        		BCC @ok
000DA2r 2  A9 0F        		LDA #$0F
000DA4r 2  8D rr rr     		STA MISSION
000DA7r 2  AD rr rr     @ok:	LDA MISSIONX
000DAAr 2  18           		CLC
000DABr 2  F8           		SED
000DACr 2  69 01        		ADC #$01
000DAEr 2  D8           		CLD
000DAFr 2  8D rr rr     		STA MISSIONX
000DB2r 2               		;
000DB2r 2  A2 00        		LDX #$00
000DB4r 2  8E rr rr     		STX ALERTS
000DB7r 2  8E rr rr     		STX BOOMED
000DBAr 2  8E 0B 90     		STX VIC+$0B
000DBDr 2  8E 0D 90     		STX VIC+$0D
000DC0r 2  8E rr rr     		STX LOOPX
000DC3r 2  AD rr rr     		LDA MISSIONX
000DC6r 2  C9 01        		CMP #$01		; SCOUT
000DC8r 2  F0 13        		BEQ @tune
000DCAr 2  C9 03        		CMP #$03		; DEFENDER
000DCCr 2  F0 0F        		BEQ @tune
000DCEr 2  C9 06        		CMP #$06		; WARRIOR
000DD0r 2  F0 0B        		BEQ @tune
000DD2r 2  C9 10        		CMP #$10		; CENTURION
000DD4r 2  F0 07        		BEQ @tune
000DD6r 2  C9 15        		CMP #$15		; PROTECTOR
000DD8r 2  F0 03        		BEQ @tune
000DDAr 2  4C rr rr     		JMP NEXTLEVEL
000DDDr 2               		;
000DDDr 2               @tune:
000DDDr 2  AC rr rr     		LDY OBJECTIVE
000DE0r 2  D0 16        		BNE @chorus
000DE2r 2  4A           		LSR
000DE3r 2  0A           		ASL
000DE4r 2  0A           		ASL
000DE5r 2  0A           		ASL
000DE6r 2  0A           		ASL
000DE7r 2  18           		CLC
000DE8r 2  F8           		SED
000DE9r 2  6D rr rr     		ADC SCORE+1		; 1000s of bonus
000DECr 2  90 03        		BCC @nocc
000DEEr 2  EE rr rr     		INC SCORE
000DF1r 2  8D rr rr     @nocc:	STA SCORE+1
000DF4r 2  D8           		CLD
000DF5r 2  20 rr rr     		JSR SCORESTATUS
000DF8r 2               @chorus:
000DF8r 2  A9 DD        		LDA #221		; B
000DFAr 2  8D 0C 90     		STA VIC+$0C
000DFDr 2  A9 00        		LDA #0
000DFFr 2  E0 01        		CPX #$01
000E01r 2  90 02        		BCC @s1
000E03r 2  A9 E6        		LDA #230		; e
000E05r 2  8D 0A 90     @s1:	STA VIC+$0A
000E08r 2  A0 07        		LDY #$07
000E0Ar 2  20 rr rr     		JSR SSSFLIP
000E0Dr 2  A9 D9        		LDA #217		; A
000E0Fr 2  8D 0C 90     		STA VIC+$0C
000E12r 2  A9 00        		LDA #0
000E14r 2  8D 0A 90     		STA VIC+$0A
000E17r 2  A0 07        		LDY #$07
000E19r 2  20 rr rr     		JSR SSSFLIP
000E1Cr 2  A9 DD        		LDA #221		; B
000E1Er 2  8D 0C 90     		STA VIC+$0C
000E21r 2  E0 01        		CPX #$01
000E23r 2  90 02        		BCC @s2
000E25r 2  A9 DD        		LDA #221		; b
000E27r 2  8D 0A 90     @s2:	STA VIC+$0A
000E2Ar 2  A0 07        		LDY #$07
000E2Cr 2  20 rr rr     		JSR SSSFLIP
000E2Fr 2  A9 DF        		LDA #223		; C
000E31r 2  8D 0C 90     		STA VIC+$0C
000E34r 2  A9 00        		LDA #0
000E36r 2  8D 0A 90     		STA VIC+$0A
000E39r 2  A0 07        		LDY #$07
000E3Br 2  20 rr rr     		JSR SSSFLIP
000E3Er 2  A9 E2        		LDA #226		; D
000E40r 2  8D 0C 90     		STA VIC+$0C
000E43r 2  A9 D9        		LDA #217		; a high
000E45r 2  8D 0A 90     		STA VIC+$0A
000E48r 2  A0 1C        		LDY #$1C
000E4Ar 2  20 rr rr     		JSR SSSFLIP
000E4Dr 2  A9 D5        		LDA #213		; G
000E4Fr 2  8D 0C 90     		STA VIC+$0C
000E52r 2  A9 B3        		LDA #179		; a low
000E54r 2  8D 0A 90     		STA VIC+$0A
000E57r 2  A0 0E        		LDY #$0E
000E59r 2  20 rr rr     		JSR SSSFLIP
000E5Cr 2  EE rr rr     		INC LOOPX
000E5Fr 2  AE rr rr     		LDX LOOPX
000E62r 2  E0 03        		CPX #$03
000E64r 2  D0 92        		BNE @chorus
000E66r 2               		;
000E66r 2  A9 BF        		LDA #191		; c
000E68r 2  8D 0A 90     		STA VIC+$0A
000E6Br 2  A9 DD        		LDA #221		; B
000E6Dr 2  8D 0C 90     		STA VIC+$0C
000E70r 2  A0 07        		LDY #$07
000E72r 2  20 rr rr     		JSR SSSFLIP
000E75r 2  A9 D9        		LDA #217		; A
000E77r 2  8D 0C 90     		STA VIC+$0C
000E7Ar 2  A0 07        		LDY #$07
000E7Cr 2  20 rr rr     		JSR SSSFLIP
000E7Fr 2  A9 DD        		LDA #221		; B
000E81r 2  8D 0C 90     		STA VIC+$0C
000E84r 2  A0 07        		LDY #$07
000E86r 2  20 rr rr     		JSR SSSFLIP
000E89r 2  A9 DF        		LDA #223		; C
000E8Br 2  8D 0C 90     		STA VIC+$0C
000E8Er 2  A0 07        		LDY #$07
000E90r 2  20 rr rr     		JSR SSSFLIP
000E93r 2  A9 D9        		LDA #217		; A
000E95r 2  8D 0C 90     		STA VIC+$0C
000E98r 2  A0 1C        		LDY #$1C
000E9Ar 2  20 rr rr     		JSR SSSFLIP
000E9Dr 2               		;
000E9Dr 2  A9 00        		LDA #0
000E9Fr 2  8D 0C 90     		STA VIC+$0C
000EA2r 2  8D 0A 90     		STA VIC+$0A
000EA5r 2  4C rr rr     		JMP NEXTLEVEL
000EA8r 2               
000EA8r 2               ;*********************************************************************
000EA8r 2               ; Fury attempts to fire a new energy bolt
000EA8r 2               ;
000EA8r 2               NEWBOLT:
000EA8r 2  AD rr rr     		LDA ENERGIZER
000EABr 2  CD rr rr     		CMP BOLTE+2
000EAEr 2  B0 06        		BCS @ok
000EB0r 2  A9 08        @mt:	LDA #$08
000EB2r 2  8D rr rr     		STA EMPTY
000EB5r 2  60           		RTS
000EB6r 2               		;
000EB6r 2  A2 00        @ok:	LDX #$00
000EB8r 2  BD rr rr     @find:	LDA BOLT,X
000EBBr 2  F0 07        		BEQ @ready
000EBDr 2  E8           		INX
000EBEr 2  E0 03        		CPX #$03
000EC0r 2  D0 F6        		BNE @find
000EC2r 2  F0 EC        		BEQ @mt
000EC4r 2               		;
000EC4r 2  86 90        @ready:	STX sssNUM
000EC6r 2  A0 00        		LDY #$00
000EC8r 2  AD rr rr     		LDA ENERGIZER
000ECBr 2  D9 rr rr     @bolte:	CMP BOLTE,Y
000ECEr 2  B0 05        		BCS @fire
000ED0r 2  C8           		INY
000ED1r 2  C0 03        		CPY #$03
000ED3r 2  D0 F6        		BNE @bolte
000ED5r 2  38           @fire:	SEC
000ED6r 2  F9 rr rr     		SBC BOLTE,Y
000ED9r 2  8D rr rr     		STA ENERGIZER
000EDCr 2  B9 rr rr     		LDA BOLTC,Y
000EDFr 2  9D rr rr     		STA SPRITECOL,X
000EE2r 2  C8           		INY
000EE3r 2  98           		TYA
000EE4r 2  9D rr rr     		STA BOLT,X
000EE7r 2               		;
000EE7r 2  AD rr rr     		LDA DIRECTION
000EEAr 2  9D rr rr     		STA BOLTDIR,X
000EEDr 2  A8           		TAY
000EEEr 2  BD rr rr     		LDA SPRITEDEF,X
000EF1r 2  09 80        		ORA #$80		; enable new sprite
000EF3r 2  9D rr rr     		STA SPRITEDEF,X
000EF6r 2  B9 rr rr     		LDA BOLTX,Y		; position new shot
000EF9r 2  18           		CLC
000EFAr 2  6D rr rr     		ADC SPRITEX+12
000EFDr 2  29 FE        		AND #$FE
000EFFr 2  AA           		TAX
000F00r 2  B9 rr rr     		LDA BOLTY,Y
000F03r 2  18           		CLC
000F04r 2  6D rr rr     		ADC SPRITEY+12
000F07r 2  29 FE        		AND #$FE
000F09r 2  A8           		TAY
000F0Ar 2  20 rr rr     		JSR SSSMOVEXY
000F0Dr 2  A9 FD        		LDA #$FD		; new FIRE event
000F0Fr 2  8D rr rr     		STA SHOOTING
000F12r 2  60           		RTS
000F13r 2               
000F13r 2               ;*********************************************************************
000F13r 2               ; Process Fury fired shot
000F13r 2               ; pass X with sprite #
000F13r 2               ;
000F13r 2               OLDBOLT:
000F13r 2  86 90        		STX sssNUM
000F15r 2  8D 9A 02     		STA R0
000F18r 2  A8           		TAY
000F19r 2  88           		DEY
000F1Ar 2  B9 rr rr     		LDA BOLTC,Y
000F1Dr 2               
000F1Dr 2  A2 rr        		LDX #<BOLTIMG0
000F1Fr 2  A0 rr        		LDY #>BOLTIMG0
000F21r 2  20 rr rr     		JSR SSSANIM
000F24r 2  A6 90        		LDX sssNUM
000F26r 2  AD rr rr     		LDA FRAME
000F29r 2  29 08        		AND #$08
000F2Br 2  F0 14        		BEQ @even
000F2Dr 2               		;
000F2Dr 2  AD 9A 02     		LDA R0
000F30r 2  0A           		ASL
000F31r 2  18           		CLC
000F32r 2  6D 9A 02     		ADC R0
000F35r 2  18           		CLC
000F36r 2  7D rr rr     		ADC SPRITEIMGL,X
000F39r 2  90 03        		BCC @nocc
000F3Br 2  FE rr rr     		INC SPRITEIMGH,X
000F3Er 2  9D rr rr     @nocc:	STA SPRITEIMGL,X
000F41r 2               @even:
000F41r 2  BD rr rr     		LDA BOLTDIR,X
000F44r 2  A8           		TAY
000F45r 2  B9 rr rr     		LDA DDX2,Y
000F48r 2  F0 27        		BEQ @ddy2
000F4Ar 2  C9 01        		CMP #$01
000F4Cr 2  F0 07        		BEQ @ddx
000F4Er 2  AD rr rr     		LDA FRAME
000F51r 2  29 01        		AND #$01
000F53r 2  F0 1C        		BEQ @ddy2
000F55r 2  B9 rr rr     @ddx:	LDA NDDX,Y
000F58r 2  18           		CLC
000F59r 2  7D rr rr     		ADC SPRITEX,X
000F5Cr 2  9D rr rr     		STA SPRITEX,X
000F5Fr 2  C9 10        		CMP #$10
000F61r 2  B0 03        		BCS @okleft
000F63r 2  4C rr rr     		JMP @xout
000F66r 2               @okleft:
000F66r 2  18           		CLC
000F67r 2  69 02        		ADC #$02
000F69r 2  CD 98 02     		CMP SSSCLIPX
000F6Cr 2  90 03        		BCC @okright
000F6Er 2  4C rr rr     		JMP @xout
000F71r 2               @okright:
000F71r 2  B9 rr rr     @ddy2:	LDA DDY2,Y
000F74r 2  F0 27        		BEQ @fini
000F76r 2  C9 01        		CMP #$01
000F78r 2  F0 07        		BEQ @ddy
000F7Ar 2  AD rr rr     		LDA FRAME
000F7Dr 2  29 01        		AND #$01
000F7Fr 2  F0 1C        		BEQ @fini
000F81r 2  B9 rr rr     @ddy:	LDA NDDY,Y
000F84r 2  18           		CLC
000F85r 2  7D rr rr     		ADC SPRITEY,X
000F88r 2  9D rr rr     		STA SPRITEY,X
000F8Br 2  C9 10        		CMP #$10
000F8Dr 2  B0 03        		BCS @oktop
000F8Fr 2  4C rr rr     		JMP @xout
000F92r 2  18           @oktop:	CLC
000F93r 2  69 0A        		ADC #$0A
000F95r 2  CD 99 02     		CMP SSSCLIPY
000F98r 2  90 03        		BCC @okbottom
000F9Ar 2  4C rr rr     		JMP @xout
000F9Dr 2               @okbottom:
000F9Dr 2               @fini:
000F9Dr 2  BD rr rr     		LDA SPRITEY,X
000FA0r 2  38           		SEC
000FA1r 2  E9 0F        		SBC #$0F		; hcenter of bolt counts ($10 - 1)
000FA3r 2  4A           		LSR
000FA4r 2  4A           		LSR
000FA5r 2  4A           		LSR
000FA6r 2  A8           		TAY
000FA7r 2  BD rr rr     		LDA SPRITEX,X
000FAAr 2  38           		SEC
000FABr 2  E9 0F        		SBC #$0F		; vcenter of bolt counts ($10 - 1)
000FADr 2  4A           		LSR
000FAEr 2  4A           		LSR
000FAFr 2  4A           		LSR
000FB0r 2  AA           		TAX
000FB1r 2  20 rr rr     		JSR SSSPEEKS
000FB4r 2  C9 80        		CMP #$80
000FB6r 2  90 0C        		BCC @object
000FB8r 2  C9 C0        		CMP #$C0
000FBAr 2  B0 45        		BCS @xout
000FBCr 2  A6 90        		LDX sssNUM
000FBEr 2  20 rr rr     		JSR NMEHIT
000FC1r 2  B0 3E        		BCS @xout
000FC3r 2  60           		RTS
000FC4r 2               @object:
000FC4r 2  A6 D3        		LDX CRSRCOL
000FC6r 2  A4 D6        		LDY CRSRROW
000FC8r 2  20 rr rr     		JSR FINDMINE
000FCBr 2  E0 10        		CPX #$10
000FCDr 2  B0 32        		BCS @xout
000FCFr 2  BD rr rr     		LDA MINES,X
000FD2r 2  C9 04        		CMP #$04		; is it a heart-stopper?
000FD4r 2  90 0A        		BCC @mine
000FD6r 2  AD 9A 02     		LDA R0
000FD9r 2  C9 01        		CMP #$01
000FDBr 2  D0 24        		BNE @xout		; was it hit by a red bolt?
000FDDr 2  CE rr rr     		DEC HEARTBEATS
000FE0r 2  A9 00        @mine:	LDA #$00		; eradicate
000FE2r 2  9D rr rr     		STA MINES,X
000FE5r 2  CE rr rr     		DEC OBJECTIVE
000FE8r 2  A5 CE        		LDA CRSRCHAR	; retrieve last peeked cell
000FEAr 2  48           		PHA				;++
000FEBr 2  A6 D3        		LDX CRSRCOL
000FEDr 2  A4 D6        		LDY CRSRROW
000FEFr 2  20 rr rr     		JSR SSSPLOT
000FF2r 2  A9 A0        		LDA #SSSNULL
000FF4r 2  20 rr rr     		JSR SSSPOKE
000FF7r 2  A9 FD        		LDA #$FD
000FF9r 2  8D rr rr     		STA HIT
000FFCr 2  68           		PLA				;--
000FFDr 2  A8           		TAY
000FFEr 2  20 rr rr     		JSR SCOREUPDATE
001001r 2               @xout:
001001r 2  A6 90        		LDX sssNUM		; restore sprite #
001003r 2  A9 00        		LDA #$00
001005r 2  9D rr rr     		STA BOLT,X
001008r 2  BD rr rr     		LDA SPRITEDEF,X
00100Br 2  29 7F        		AND #$7F		; disable sprite
00100Dr 2  9D rr rr     		STA SPRITEDEF,X
001010r 2  BD rr rr     		LDA SPRITEY,X
001013r 2  A8           		TAY
001014r 2  88           		DEY
001015r 2  88           		DEY
001016r 2  BD rr rr     		LDA SPRITEX,X
001019r 2  AA           		TAX
00101Ar 2  CA           		DEX
00101Br 2  CA           		DEX
00101Cr 2  20 rr rr     		JSR NEWHITMARK
00101Fr 2  60           		RTS
001020r 2               
001020r 2               ;*********************************************************************
001020r 2               ; check if bolt hit an enemy ship
001020r 2               ;
001020r 2               NMEHIT:
001020r 2  8A           		TXA
001021r 2  48           		PHA				;++
001022r 2  A0 00        		LDY #$00
001024r 2  8C 9E 02     		STY R4			; current enemy ship #0-3
001027r 2  B9 rr rr     @loop:	LDA NME,Y
00102Ar 2  D0 03        		BNE @nme
00102Cr 2  4C rr rr     		JMP @next
00102Fr 2  BD rr rr     @nme:	LDA SPRITEX,X
001032r 2  18           		CLC
001033r 2  69 02        		ADC #$02		; adjust for bolt width
001035r 2  D9 rr rr     		CMP SPRITEX+8,Y
001038r 2  90 78        		BCC @next
00103Ar 2  F9 rr rr     		SBC SPRITEX+8,Y
00103Dr 2  D9 rr rr     		CMP SPRITEH+8,Y
001040r 2  90 07        		BCC @y
001042r 2  E9 02        		SBC #$02		; adjust for bolt width
001044r 2  D9 rr rr     		CMP SPRITEH+8,Y
001047r 2  B0 69        		BCS @next
001049r 2  BD rr rr     @y:		LDA SPRITEY,X
00104Cr 2  18           		CLC
00104Dr 2  69 02        		ADC #$02		; adjust for bolt height
00104Fr 2  D9 rr rr     		CMP SPRITEY+8,Y
001052r 2  90 5E        		BCC @next
001054r 2  F9 rr rr     		SBC SPRITEY+8,Y
001057r 2  D9 rr rr     		CMP SPRITEH+8,Y
00105Ar 2  90 07        		BCC @hit
00105Cr 2  E9 02        		SBC #$02		; adjust for bolt height
00105Er 2  D9 rr rr     		CMP SPRITEH+8,Y
001061r 2  B0 4F        		BCS @next
001063r 2  A9 F0        @hit:	LDA #$F0
001065r 2  8D rr rr     		STA HIT
001068r 2  68           		PLA				;--
001069r 2  AA           		TAX
00106Ar 2  8E 0D 03     		STX XCOPY
00106Dr 2  BD rr rr     		LDA BOLT,X
001070r 2  A8           		TAY
001071r 2  AE 9E 02     		LDX R4
001074r 2  BD rr rr     		LDA NMEHP,X
001077r 2  38           		SEC
001078r 2  F9 rr rr     		SBC HULLV-1,Y
00107Br 2  B0 1D        		BCS @alive
00107Dr 2               		;
00107Dr 2  BD rr rr     @score:	LDA NME,X
001080r 2  A8           		TAY
001081r 2  B9 rr rr     		LDA VALUE-1,Y
001084r 2  18           		CLC
001085r 2  F8           		SED
001086r 2  6D rr rr     		ADC SCORE+1
001089r 2  90 03        		BCC @nocc
00108Br 2  EE rr rr     		INC SCORE
00108Er 2  8D rr rr     @nocc:	STA SCORE+1
001091r 2  D8           		CLD
001092r 2  20 rr rr     		JSR SCORESTATUS
001095r 2  AE 9E 02     		LDX R4
001098r 2  A9 00        		LDA #$00
00109Ar 2  9D rr rr     @alive:	STA NMEHP,X
00109Dr 2  D0 0E        		BNE @done
00109Fr 2  9D rr rr     		STA NME,X
0010A2r 2  BD rr rr     		LDA SPRITEDEF+8,X
0010A5r 2  29 7F        		AND #$7F		; disable sprite
0010A7r 2  9D rr rr     		STA SPRITEDEF+8,X
0010AAr 2  CE rr rr     		DEC OBJECTIVE
0010ADr 2               @done:
0010ADr 2  AE 0D 03     		LDX XCOPY
0010B0r 2  38           		SEC
0010B1r 2  60           		RTS
0010B2r 2               		;
0010B2r 2  EE 9E 02     @next:	INC R4
0010B5r 2  AC 9E 02     		LDY R4
0010B8r 2  C0 04        		CPY #$04
0010BAr 2  F0 03        		BEQ @xnme
0010BCr 2  4C rr rr     		JMP @loop
0010BFr 2               @xnme:
0010BFr 2  68           		PLA
0010C0r 2  AA           		TAX
0010C1r 2  18           		CLC
0010C2r 2  60           		RTS
0010C3r 2               
0010C3r 2               ;*********************************************************************
0010C3r 2               ; plot a new hit mark
0010C3r 2               ; pass X/Y
0010C3r 2               ;
0010C3r 2               NEWHITMARK:
0010C3r 2  E0 10        		CPX #$10
0010C5r 2  B0 02        		BCS @ok1
0010C7r 2  A2 0D        		LDX #$0D
0010C9r 2  E0 B4        @ok1:	CPX #$B4
0010CBr 2  90 02        		BCC @ok2
0010CDr 2  A2 B4        		LDX #$B4
0010CFr 2  C0 10        @ok2:	CPY #$10
0010D1r 2  B0 02        		BCS @ok3
0010D3r 2  A0 0D        		LDY #$0D
0010D5r 2  A9 0D        @ok3:	LDA #$0D
0010D7r 2  85 90        		STA sssNUM
0010D9r 2  20 rr rr     		JSR SSSMOVEXY
0010DCr 2  A9 8C        		LDA #%10001100
0010DEr 2  8D rr rr     		STA SPRITEDEF+13
0010E1r 2  A9 02        		LDA #$02		; red
0010E3r 2  A2 rr        		LDX #<HITMARK0
0010E5r 2  A0 rr        		LDY #>HITMARK0
0010E7r 2  20 rr rr     		JSR SSSANIM
0010EAr 2  A9 03        		LDA #$03
0010ECr 2  8D rr rr     		STA HITMARK
0010EFr 2  60           		RTS
0010F0r 2               
0010F0r 2               ;*********************************************************************
0010F0r 2               ; dissipate old hit mark
0010F0r 2               ;
0010F0r 2               OLDHITMARK:
0010F0r 2  AD rr rr     		LDA FRAME
0010F3r 2  29 03        		AND #$03
0010F5r 2  D0 28        		BNE @fini
0010F7r 2  A2 0D        		LDX #$0D
0010F9r 2  86 90        		STX sssNUM
0010FBr 2  CE rr rr     		DEC HITMARK
0010FEr 2  D0 07        		BNE @cont
001100r 2  29 7F        		AND #$7F
001102r 2  9D rr rr     		STA SPRITEDEF,X
001105r 2  D0 18        		BNE @fini
001107r 2               @cont:
001107r 2  AD rr rr     		LDA HITMARK
00110Ar 2  29 01        		AND #$01
00110Cr 2  D0 08        		BNE @h0
00110Er 2  A2 rr        @h1:	LDX #<HITMARK1
001110r 2  A0 rr        		LDY #>HITMARK1
001112r 2  A9 07        		LDA #$07		; yellow
001114r 2  D0 06        		BNE @anim
001116r 2  A2 rr        @h0:	LDX #<HITMARK0
001118r 2  A0 rr        		LDY #>HITMARK0
00111Ar 2  A9 02        		LDA #$02		; red
00111Cr 2  20 rr rr     @anim:	JSR SSSANIM
00111Fr 2  60           @fini:	RTS
001120r 2               
001120r 2               ;*********************************************************************
001120r 2               ; plot a new BIG hit mark
001120r 2               ; pass X/Y
001120r 2               ;
001120r 2               NEWBIGHITMARK:
001120r 2  E0 10        		CPX #$10
001122r 2  B0 02        		BCS @ok1
001124r 2  A2 0D        		LDX #$0D
001126r 2  E0 B4        @ok1:	CPX #$B4
001128r 2  90 02        		BCC @ok2
00112Ar 2  A2 B4        		LDX #$B4
00112Cr 2  C0 10        @ok2:	CPY #$10
00112Er 2  B0 02        		BCS @ok3
001130r 2  A0 0D        		LDY #$0D
001132r 2  A9 0E        @ok3:	LDA #$0E
001134r 2  85 90        		STA sssNUM
001136r 2  20 rr rr     		JSR SSSMOVEXY
001139r 2  A9 8F        		LDA #%10001111
00113Br 2  9D rr rr     		STA SPRITEDEF,X
00113Er 2  A9 02        		LDA #$02		; red
001140r 2  A2 rr        		LDX #<BIGHITMARK0
001142r 2  A0 rr        		LDY #>BIGHITMARK0
001144r 2  20 rr rr     		JSR SSSANIM
001147r 2  A9 03        		LDA #$03
001149r 2  8D rr rr     		STA BIGHITMARK
00114Cr 2  60           		RTS
00114Dr 2               
00114Dr 2               ;*********************************************************************
00114Dr 2               ; dissipate old BIG hit mark
00114Dr 2               ;
00114Dr 2               OLDBIGHITMARK:
00114Dr 2  AD rr rr     		LDA FRAME
001150r 2  29 03        		AND #$03
001152r 2  D0 2D        		BNE @fini
001154r 2  A2 0E        		LDX #$0E
001156r 2  86 90        		STX sssNUM
001158r 2  CE rr rr     		DEC BIGHITMARK
00115Br 2  D0 0C        		BNE @cont
00115Dr 2  29 7F        		AND #$7F		; disable sprite
00115Fr 2  9D rr rr     		STA SPRITEDEF,X
001162r 2  A9 0A        		LDA #$0A		; black with red
001164r 2  8D 0F 90     		STA VIC+$0F		; screen and border
001167r 2  D0 18        		BNE @fini
001169r 2               @cont:
001169r 2  AD rr rr     		LDA BIGHITMARK
00116Cr 2  29 01        		AND #$01
00116Er 2  D0 08        		BNE @h0
001170r 2  A2 rr        @h1:	LDX #<BIGHITMARK1
001172r 2  A0 rr        		LDY #>BIGHITMARK1
001174r 2  A9 01        		LDA #$01		; white
001176r 2  D0 06        		BNE @anim
001178r 2  A2 rr        @h0:	LDX #<BIGHITMARK0
00117Ar 2  A0 rr        		LDY #>BIGHITMARK0
00117Cr 2  A9 02        		LDA #$02		; red
00117Er 2  20 rr rr     @anim:	JSR SSSANIM
001181r 2  60           @fini:	RTS
001182r 2               
001182r 2               ;*********************************************************************
001182r 2               ; plot a new JUMP mark
001182r 2               ; pass X/Y
001182r 2               ;
001182r 2               NEWJUMPMARK:
001182r 2  A9 0E        		LDA #$0E		; re-use big hitmark sprite
001184r 2  85 90        		STA sssNUM
001186r 2  A9 8F        		LDA #%10001111
001188r 2  8D rr rr     		STA SPRITEDEF+14
00118Br 2  20 rr rr     		JSR SSSMOVEXY
00118Er 2  A9 01        		LDA #$01		; white
001190r 2  A2 rr        		LDX #<BIGHITMARK1
001192r 2  A0 rr        		LDY #>BIGHITMARK1
001194r 2  20 rr rr     		JSR SSSANIM
001197r 2  A9 05        		LDA #$05
001199r 2  8D rr rr     		STA JUMPMARK
00119Cr 2  60           		RTS
00119Dr 2               
00119Dr 2               ;*********************************************************************
00119Dr 2               ; dissipate old JUMP mark
00119Dr 2               ;
00119Dr 2               OLDJUMPMARK:
00119Dr 2  AD rr rr     		LDA FRAME
0011A0r 2  29 07        		AND #$07
0011A2r 2  D0 42        		BNE @fini
0011A4r 2  A2 0E        		LDX #$0E
0011A6r 2  86 90        		STX sssNUM
0011A8r 2  CE rr rr     		DEC JUMPMARK
0011ABr 2  D0 1A        		BNE @cont
0011ADr 2  BD rr rr     		LDA SPRITEDEF,X
0011B0r 2  29 7F        		AND #$7F
0011B2r 2  9D rr rr     		STA SPRITEDEF,X
0011B5r 2  AE rr rr     		LDX WARPED
0011B8r 2  BD rr rr     		LDA NME,X
0011BBr 2  F0 29        		BEQ @fini		; warped out
0011BDr 2  BD rr rr     		LDA SPRITEDEF+8,X
0011C0r 2  09 80        		ORA #$80		; warping in
0011C2r 2  9D rr rr     		STA SPRITEDEF+8,X
0011C5r 2  D0 1F        		BNE @fini
0011C7r 2               @cont:
0011C7r 2  AE rr rr     		LDX WARPED
0011CAr 2  BD rr rr     		LDA SPRITECOL+8,X
0011CDr 2  8D rr rr     		STA @anim+1		; use Thargoid hull color
0011D0r 2  AD rr rr     		LDA JUMPMARK
0011D3r 2  29 01        		AND #$01
0011D5r 2  D0 06        		BNE @h0
0011D7r 2  A2 rr        @h1:	LDX #<BIGHITMARK1
0011D9r 2  A0 rr        		LDY #>BIGHITMARK1
0011DBr 2  D0 04        		BNE @anim
0011DDr 2  A2 rr        @h0:	LDX #<BIGHITMARK0
0011DFr 2  A0 rr        		LDY #>BIGHITMARK0
0011E1r 2  A9 01        @anim:	LDA #$01		; white
0011E3r 2  20 rr rr     		JSR SSSANIM
0011E6r 2  60           @fini:	RTS
0011E7r 2               
0011E7r 2               ;*********************************************************************
0011E7r 2               ; Thargoid ship attempts to fire a phaser shot
0011E7r 2               ;
0011E7r 2               ; Pass A with phaser type (1-4)
0011E7r 2               ; Pass Y with direction (0-15)
0011E7r 2               ; Pass LOOPX with Thargoid ship (0-3)
0011E7r 2               ;
0011E7r 2               NEWPHASER:
0011E7r 2  48           		PHA				;++
0011E8r 2  98           		TYA
0011E9r 2  48           		PHA				;++
0011EAr 2  A2 00        		LDX #$00
0011ECr 2  BD rr rr     @find:	LDA NMESHOT,X
0011EFr 2  F0 09        		BEQ @fire
0011F1r 2  E8           		INX
0011F2r 2  E0 04        		CPX #$04
0011F4r 2  D0 F6        		BNE @find
0011F6r 2  68           		PLA				;--
0011F7r 2  A8           		TAY
0011F8r 2  68           		PLA				;--
0011F9r 2  60           		RTS
0011FAr 2               @fire:
0011FAr 2  68           		PLA				;--
0011FBr 2  9D rr rr     		STA NMESHOTDIR,X
0011FEr 2  68           		PLA				;--
0011FFr 2  9D rr rr     		STA NMESHOT,X
001202r 2  8A           		TXA
001203r 2  18           		CLC
001204r 2  69 03        		ADC #$03
001206r 2  85 90        		STA sssNUM		; sprite #3-6
001208r 2  A8           		TAY
001209r 2  B9 rr rr     		LDA SPRITEDEF,Y
00120Cr 2  09 80        		ORA #$80		; enable new sprite
00120Er 2  99 rr rr     		STA SPRITEDEF,Y
001211r 2  8E 0D 03     		STX XCOPY
001214r 2  BD rr rr     		LDA NMESHOT,X
001217r 2  AA           		TAX				; load phaser type for sprite
001218r 2  0A           		ASL
001219r 2  0A           		ASL
00121Ar 2  0A           		ASL				; x8
00121Br 2  8D rr rr     		STA PHASER		; sound event
00121Er 2  A9 rr        		LDA #<PHASER0
001220r 2  A0 rr        		LDY #>PHASER0
001222r 2  CA           		DEX
001223r 2  F0 09        		BEQ @type
001225r 2  18           @loop:	CLC
001226r 2  69 03        		ADC #$03
001228r 2  90 01        		BCC @nocc
00122Ar 2  C8           		INY
00122Br 2  CA           @nocc:	DEX
00122Cr 2  D0 F7        		BNE @loop
00122Er 2  AA           @type:	TAX
00122Fr 2  A9 01        		LDA #$01		; WHITE
001231r 2  20 rr rr     		JSR SSSANIM
001234r 2  AE 0D 03     		LDX XCOPY
001237r 2  BD rr rr     		LDA NMESHOTDIR,X
00123Ar 2  AE rr rr     		LDX LOOPX
00123Dr 2  A8           		TAY
00123Er 2  B9 rr rr     		LDA BOLTX,Y		; position new shot
001241r 2  18           		CLC
001242r 2  7D rr rr     		ADC SPRITEX+8,X
001245r 2  8D 0D 03     		STA XCOPY
001248r 2  B9 rr rr     		LDA BOLTY,Y
00124Br 2  18           		CLC
00124Cr 2  7D rr rr     		ADC SPRITEY+8,X
00124Fr 2  A8           		TAY
001250r 2  AE 0D 03     		LDX XCOPY
001253r 2  20 rr rr     		JSR SSSMOVEXY
001256r 2  60           		RTS
001257r 2               
001257r 2               ;*********************************************************************
001257r 2               ; Process Thargoid phaser shot
001257r 2               ;
001257r 2               ; pass LOOPX with shot #
001257r 2               ;
001257r 2               OLDPHASER:
001257r 2  BD rr rr     		LDA NMESHOTDIR,X
00125Ar 2  A8           		TAY
00125Br 2  8A           		TXA
00125Cr 2  18           		CLC
00125Dr 2  69 03        		ADC #$03
00125Fr 2  AA           		TAX
001260r 2  86 90        		STX sssNUM
001262r 2  B9 rr rr     		LDA DDX2,Y
001265r 2  F0 27        		BEQ @ddy2
001267r 2  C9 01        		CMP #$01
001269r 2  F0 07        		BEQ @ddx
00126Br 2  AD rr rr     		LDA FRAME
00126Er 2  29 01        		AND #$01
001270r 2  F0 1C        		BEQ @ddy2
001272r 2  B9 rr rr     @ddx:	LDA NDDX,Y
001275r 2  18           		CLC
001276r 2  7D rr rr     		ADC SPRITEX,X
001279r 2  9D rr rr     		STA SPRITEX,X
00127Cr 2  C9 10        		CMP #$10
00127Er 2  B0 03        		BCS @okleft
001280r 2  4C rr rr     		JMP @xout
001283r 2               @okleft:
001283r 2  18           		CLC
001284r 2  69 02        		ADC #$02
001286r 2  CD 98 02     		CMP SSSCLIPX
001289r 2  90 03        		BCC @okright
00128Br 2  4C rr rr     		JMP @xout
00128Er 2               @okright:
00128Er 2  B9 rr rr     @ddy2:	LDA DDY2,Y
001291r 2  F0 27        		BEQ @fini
001293r 2  C9 01        		CMP #$01
001295r 2  F0 07        		BEQ @ddy
001297r 2  AD rr rr     		LDA FRAME
00129Ar 2  29 01        		AND #$01
00129Cr 2  F0 1C        		BEQ @fini
00129Er 2  B9 rr rr     @ddy:	LDA NDDY,Y
0012A1r 2  18           		CLC
0012A2r 2  7D rr rr     		ADC SPRITEY,X
0012A5r 2  9D rr rr     		STA SPRITEY,X
0012A8r 2  C9 10        		CMP #$10
0012AAr 2  B0 03        		BCS @oktop
0012ACr 2  4C rr rr     		JMP @xout
0012AFr 2  18           @oktop:	CLC
0012B0r 2  69 0A        		ADC #$0A
0012B2r 2  CD 99 02     		CMP SSSCLIPY
0012B5r 2  90 03        		BCC @okbottom
0012B7r 2  4C rr rr     		JMP @xout
0012BAr 2               @okbottom:
0012BAr 2               @fini:
0012BAr 2  BD rr rr     		LDA SPRITEY,X
0012BDr 2  A8           		TAY
0012BEr 2  BD rr rr     		LDA SPRITEX,X
0012C1r 2  AA           		TAX
0012C2r 2  20 rr rr     		JSR SSSMOVEXY
0012C5r 2  A6 90        		LDX sssNUM
0012C7r 2  BD rr rr     		LDA SPRITEY,X
0012CAr 2  38           		SEC
0012CBr 2  E9 10        		SBC #$10
0012CDr 2  4A           		LSR
0012CEr 2  4A           		LSR
0012CFr 2  4A           		LSR
0012D0r 2  A8           		TAY
0012D1r 2  BD rr rr     		LDA SPRITEX,X
0012D4r 2  38           		SEC
0012D5r 2  E9 10        		SBC #$10
0012D7r 2  4A           		LSR
0012D8r 2  4A           		LSR
0012D9r 2  4A           		LSR
0012DAr 2  AA           		TAX
0012DBr 2  20 rr rr     		JSR SSSPEEKS
0012DEr 2  A8           		TAY
0012DFr 2  C0 C0        		CPY #$C0
0012E1r 2  B0 06        		BCS @shields
0012E3r 2  20 rr rr     		JSR PLAYERHIT
0012E6r 2  B0 36        		BCS @hit
0012E8r 2  60           		RTS
0012E9r 2               @shields:
0012E9r 2  A9 FD        		LDA #$FD
0012EBr 2  8D rr rr     		STA HIT
0012EEr 2  AE rr rr     		LDX LOOPX
0012F1r 2  BD rr rr     		LDA NMESHOT,X
0012F4r 2  48           		PHA
0012F5r 2  20 rr rr     		JSR @xout
0012F8r 2  68           		PLA
0012F9r 2  18           		CLC
0012FAr 2  69 01        		ADC #$01
0012FCr 2  0A           		ASL
0012FDr 2  0A           		ASL				; x4 damage
0012FEr 2  8D 0C 03     		STA ACOPY
001301r 2  AD rr rr     		LDA OMEGAHP
001304r 2  CD 0C 03     		CMP ACOPY
001307r 2  D0 03        		BNE @more
001309r 2  EE 0C 03     		INC ACOPY
00130Cr 2  38           @more:	SEC
00130Dr 2  ED 0C 03     		SBC ACOPY
001310r 2  B0 05        		BCS @nocc
001312r 2  20 rr rr     		JSR KILLOBJECTIVE
001315r 2  A9 00        		LDA #$00		; no more fuel for the Fury ...
001317r 2  8D rr rr     @nocc:	STA OMEGAHP		; the end is near!
00131Ar 2  20 rr rr     		JSR DRAWSHIELDS	; if any
00131Dr 2  60           		RTS
00131Er 2               @hit:	; shot Omega Fury
00131Er 2  A9 F8        		LDA #$F8
001320r 2  8D rr rr     		STA HIT
001323r 2  AE rr rr     		LDX LOOPX
001326r 2  BD rr rr     		LDA NMESHOT,X
001329r 2  48           		PHA
00132Ar 2  20 rr rr     		JSR @xout
00132Dr 2  68           		PLA
00132Er 2  0A           		ASL
00132Fr 2  0A           		ASL
001330r 2  0A           		ASL				; x8 damage
001331r 2  38           		SEC
001332r 2  E9 02        		SBC #$02
001334r 2  20 rr rr     		JSR FURYHIT
001337r 2  AD rr rr     		LDA FRAME
00133Ar 2  29 07        		AND #$07
00133Cr 2  20 rr rr     		JSR FURYNAVI
00133Fr 2  60           		RTS
001340r 2               @xout:
001340r 2  AE rr rr     		LDX LOOPX
001343r 2  A9 00        		LDA #$00
001345r 2  9D rr rr     		STA NMESHOT,X
001348r 2  A6 90        		LDX sssNUM		; restore sprite #
00134Ar 2  BD rr rr     		LDA SPRITEDEF,X
00134Dr 2  29 7F        		AND #$7F		; disable sprite
00134Fr 2  9D rr rr     		STA SPRITEDEF,X
001352r 2  BD rr rr     		LDA SPRITEY,X
001355r 2  A8           		TAY
001356r 2  88           		DEY
001357r 2  88           		DEY
001358r 2  BD rr rr     		LDA SPRITEX,X
00135Br 2  AA           		TAX
00135Cr 2  CA           		DEX
00135Dr 2  CA           		DEX
00135Er 2  20 rr rr     		JSR NEWHITMARK
001361r 2  60           		RTS
001362r 2               
001362r 2               ;*********************************************************************
001362r 2               ; Thargoid launches a deadly neutron bomb at Omegan objective
001362r 2               ;
001362r 2               ; Pass X/Y with starting coordinates
001362r 2               ;
001362r 2               NEWNEUTRONBOMB:
001362r 2  8E rr rr     		STX SPRITEX+7
001365r 2  8C rr rr     		STY SPRITEY+7
001368r 2  A9 07        		LDA #$07
00136Ar 2  8D rr rr     		STA NEUTRON
00136Dr 2  85 90        		STA sssNUM
00136Fr 2  A9 8C        		LDA #%10001100
001371r 2  8D rr rr     		STA SPRITEDEF+7
001374r 2  A9 04        		LDA #$04		; MAGENTA
001376r 2  A2 rr        		LDX #<NEUTRONBOMB
001378r 2  A0 rr        		LDY #>NEUTRONBOMB
00137Ar 2  20 rr rr     		JSR SSSANIM
00137Dr 2  60           		RTS
00137Er 2               
00137Er 2               ;*********************************************************************
00137Er 2               ; Process launched neutron bomb
00137Er 2               ;
00137Er 2               OLDNEUTRONBOMB:
00137Er 2  A2 07        		LDX #$07
001380r 2  86 90        		STX sssNUM
001382r 2               		;
001382r 2  AD rr rr     		LDA NEUTRONDIR
001385r 2  A8           		TAY
001386r 2  B9 rr rr     		LDA DDX2,Y
001389r 2  F0 27        		BEQ @ddy2
00138Br 2  C9 01        		CMP #$01
00138Dr 2  F0 07        		BEQ @ddx
00138Fr 2  AD rr rr     		LDA FRAME
001392r 2  29 01        		AND #$01
001394r 2  F0 1C        		BEQ @ddy2
001396r 2  B9 rr rr     @ddx:	LDA DDX,Y
001399r 2  18           		CLC
00139Ar 2  6D rr rr     		ADC SPRITEX+7
00139Dr 2  8D rr rr     		STA SPRITEX+7
0013A0r 2  C9 10        		CMP #$10
0013A2r 2  B0 03        		BCS @okleft
0013A4r 2  4C rr rr     		JMP @xout
0013A7r 2               @okleft:
0013A7r 2  18           		CLC
0013A8r 2  69 02        		ADC #$02
0013AAr 2  CD 98 02     		CMP SSSCLIPX
0013ADr 2  90 03        		BCC @okright
0013AFr 2  4C rr rr     		JMP @xout
0013B2r 2               @okright:
0013B2r 2  B9 rr rr     @ddy2:	LDA DDY2,Y
0013B5r 2  F0 27        		BEQ @fini
0013B7r 2  C9 01        		CMP #$01
0013B9r 2  F0 07        		BEQ @ddy
0013BBr 2  AD rr rr     		LDA FRAME
0013BEr 2  29 01        		AND #$01
0013C0r 2  F0 1C        		BEQ @fini
0013C2r 2  B9 rr rr     @ddy:	LDA DDY,Y
0013C5r 2  18           		CLC
0013C6r 2  6D rr rr     		ADC SPRITEY+7
0013C9r 2  8D rr rr     		STA SPRITEY+7
0013CCr 2  C9 10        		CMP #$10
0013CEr 2  B0 03        		BCS @oktop
0013D0r 2  4C rr rr     		JMP @xout
0013D3r 2  18           @oktop:	CLC
0013D4r 2  69 0A        		ADC #$0A
0013D6r 2  CD 99 02     		CMP SSSCLIPY
0013D9r 2  90 03        		BCC @okbottom
0013DBr 2  4C rr rr     		JMP @xout
0013DEr 2               @okbottom:
0013DEr 2               @fini:
0013DEr 2  AE rr rr     		LDX SPRITEX+7
0013E1r 2  AC rr rr     		LDY SPRITEY+7
0013E4r 2  20 rr rr     		JSR SSSMOVEXY
0013E7r 2  AE rr rr     		LDX SPRITEX+7
0013EAr 2  AC rr rr     		LDY SPRITEY+7
0013EDr 2  20 rr rr     		JSR SSSPEEKXY
0013F0r 2  C9 C0        		CMP #$C0
0013F2r 2  B0 01        		BCS @shields
0013F4r 2  60           		RTS
0013F5r 2               @shields:
0013F5r 2  A9 FD        		LDA #$FD
0013F7r 2  8D rr rr     		STA HIT
0013FAr 2  20 rr rr     		JSR @xout
0013FDr 2  AD rr rr     		LDA OMEGAHP
001400r 2  C9 80        		CMP #$80
001402r 2  D0 03        		BNE @more
001404r 2  CE rr rr     		DEC OMEGAHP
001407r 2  38           @more:	SEC
001408r 2  E9 80        		SBC #$80
00140Ar 2  B0 05        		BCS @nocc
00140Cr 2  20 rr rr     		JSR KILLOBJECTIVE
00140Fr 2  A9 00        		LDA #$00		; no more fuel for the Fury ...
001411r 2  8D rr rr     @nocc:	STA OMEGAHP		; the end is near!
001414r 2  20 rr rr     		JSR DRAWSHIELDS	; if any
001417r 2  60           		RTS
001418r 2               @xout:
001418r 2  A6 90        		LDX sssNUM		; restore sprite #
00141Ar 2  BD rr rr     		LDA SPRITEDEF,X
00141Dr 2  29 7F        		AND #$7F		; disable sprite
00141Fr 2  9D rr rr     		STA SPRITEDEF,X
001422r 2  BD rr rr     		LDA SPRITEY,X
001425r 2  A8           		TAY
001426r 2  88           		DEY
001427r 2  88           		DEY
001428r 2  BD rr rr     		LDA SPRITEX,X
00142Br 2  AA           		TAX
00142Cr 2  CA           		DEX
00142Dr 2  CA           		DEX
00142Er 2  20 rr rr     		JSR NEWBIGHITMARK
001431r 2  A9 00        		LDA #$00
001433r 2  8D rr rr     		STA NEUTRON
001436r 2  60           		RTS
001437r 2               
001437r 2               ;*********************************************************************
001437r 2               ; check if phaser hit the Fury
001437r 2               ;
001437r 2               PLAYERHIT:
001437r 2  AE rr rr     		LDX LOOPX
00143Ar 2  BD rr rr     		LDA SPRITEX+3,X
00143Dr 2  18           		CLC
00143Er 2  69 02        		ADC #$02		; adjust for phaser width
001440r 2  CD rr rr     		CMP SPRITEX+12
001443r 2  90 27        		BCC @xplayer
001445r 2  ED rr rr     		SBC SPRITEX+12
001448r 2  C9 08        		CMP #$08
00144Ar 2  90 06        		BCC @y
00144Cr 2  E9 02        		SBC #$02		; adjust for phaser width
00144Er 2  C9 08        		CMP #$08
001450r 2  B0 1A        		BCS @xplayer
001452r 2  BD rr rr     @y:		LDA SPRITEY+3,X
001455r 2  18           		CLC
001456r 2  69 02        		ADC #$02		; adjust for phaser height
001458r 2  CD rr rr     		CMP SPRITEY+12
00145Br 2  90 0F        		BCC @xplayer
00145Dr 2  ED rr rr     		SBC SPRITEY+12
001460r 2  C9 08        		CMP #$08
001462r 2  90 06        		BCC @hit
001464r 2  E9 02        		SBC #$02		; adjust for bolt height
001466r 2  C9 08        		CMP #$08
001468r 2  B0 02        		BCS @xplayer
00146Ar 2  38           @hit:	SEC				; a hit!
00146Br 2  60           		RTS
00146Cr 2               @xplayer:
00146Cr 2  18           		CLC				; ok
00146Dr 2  60           		RTS
00146Er 2               
00146Er 2               ;*********************************************************************
00146Er 2               ; Omega Fury takes a hull hit!
00146Er 2               ; Pass A for damage points
00146Er 2               ;
00146Er 2               FURYHIT:
00146Er 2  8D 0C 03     		STA ACOPY
001471r 2  AD rr rr     		LDA FURYHP
001474r 2  38           		SEC
001475r 2  ED 0C 03     		SBC ACOPY
001478r 2  90 09        		BCC @dead
00147Ar 2  8D rr rr     		STA FURYHP
00147Dr 2  F0 04        		BEQ @dead
00147Fr 2  20 rr rr     		JSR HULLSTATUS
001482r 2  60           		RTS
001483r 2               @dead:	; RIP
001483r 2  A9 00        		LDA #$00
001485r 2  8D 0D 90     		STA VIC+$0D
001488r 2  20 rr rr     		JSR GAMEOVER
00148Br 2  A9 00        		LDA #$00
00148Dr 2  8D rr rr     		STA FURYHP
001490r 2  8D rr rr     		STA INERTIA
001493r 2  8D rr rr     		STA SPEED
001496r 2  20 rr rr     		JSR HULLSTATUS
001499r 2  AE rr rr     		LDX SPRITEX+12
00149Cr 2  CA           		DEX
00149Dr 2  CA           		DEX
00149Er 2  CA           		DEX
00149Fr 2  AC rr rr     		LDY SPRITEY+12
0014A2r 2  88           		DEY
0014A3r 2  88           		DEY
0014A4r 2  88           		DEY
0014A5r 2  20 rr rr     		JSR NEWBIGHITMARK
0014A8r 2  AD 99 02     		LDA SSSCLIPY
0014ABr 2  4A           		LSR
0014ACr 2  8D rr rr     		STA SPRITEX+12	; move out of the way
0014AFr 2  8D rr rr     		STA SPRITEY+12	; so game over can complete
0014B2r 2  AD rr rr     		LDA SPRITEDEF+12
0014B5r 2  29 7F        		AND #$7F		; disable sprite
0014B7r 2  8D rr rr     		STA SPRITEDEF+12
0014BAr 2  A9 F0        		LDA #$F0
0014BCr 2  8D rr rr     		STA NAVI		; spin cycle
0014BFr 2  AD rr rr     		LDA MISSION
0014C2r 2  F0 0D        		BEQ @fini		; academy training center is immune
0014C4r 2  AD rr rr     		LDA OMEGAHP
0014C7r 2  F0 08        		BEQ @fini		; already destroyed
0014C9r 2  A9 04        		LDA #$04
0014CBr 2  8D rr rr     		STA SHIPS		; fill with missing ships
0014CEr 2  8D rr rr     		STA FRAME		; allow fury to explode
0014D1r 2  60           @fini:	RTS
0014D2r 2               
0014D2r 2               ;*********************************************************************
0014D2r 2               ; Omega Fury navigations go offline
0014D2r 2               ; Pass A for duration
0014D2r 2               ;
0014D2r 2               FURYNAVI:
0014D2r 2  CD rr rr     		CMP NAVI
0014D5r 2  B0 07        		BCS @cont
0014D7r 2  6D rr rr     		ADC NAVI
0014DAr 2  90 02        		BCC @cont
0014DCr 2  A9 F0        		LDA #$F0
0014DEr 2  8D rr rr     @cont:	STA NAVI
0014E1r 2  D0 03        		BNE @good
0014E3r 2  EE rr rr     		INC NAVI
0014E6r 2  A9 00        @good:	LDA #$00
0014E8r 2  8D rr rr     		STA ACTIONS
0014EBr 2  EE rr rr     		INC INERTIA
0014EEr 2  A5 A2        		LDA JIFFYL
0014F0r 2  29 01        		AND #$01
0014F2r 2  D0 08        		BNE @right
0014F4r 2  CE rr rr     		DEC INERTIA
0014F7r 2  CE rr rr     		DEC INERTIA
0014FAr 2  A9 04        		LDA #$04
0014FCr 2  8D rr rr     @right:	STA SPIN
0014FFr 2  AD rr rr     		LDA SPEED
001502r 2  C9 02        		CMP #$02
001504r 2  B0 0B        		BCS @moving
001506r 2  AD rr rr     		LDA FRAME
001509r 2  8D rr rr     		STA INERTIA
00150Cr 2  A9 02        		LDA #$02
00150Er 2  8D rr rr     		STA SPEED
001511r 2               @moving:
001511r 2  AD rr rr     		LDA INERTIA
001514r 2  29 0F        		AND #$0F
001516r 2  8D rr rr     		STA INERTIA
001519r 2  60           		RTS
00151Ar 2               
00151Ar 2               ;*********************************************************************
00151Ar 2               ; Update tactical with Omega Fury's hull plating status
00151Ar 2               ;
00151Ar 2               HULLSTATUS:
00151Ar 2  A0 00        		LDY #$00
00151Cr 2  AD rr rr     		LDA FURYHP
00151Fr 2  D9 rr rr     @dash1:	CMP HULLV,Y
001522r 2  B0 05        		BCS @hull
001524r 2  C8           		INY
001525r 2  C0 03        		CPY #$03
001527r 2  D0 F6        		BNE @dash1
001529r 2               @hull:
001529r 2  B9 rr rr     		LDA HULLC,Y
00152Cr 2  8D 86 02     		STA COLORCODE
00152Fr 2               @hi:
00152Fr 2  C0 00        		CPY #$00
001531r 2  D0 39        		BNE @mid
001533r 2  AD rr rr     		LDA FURYHP
001536r 2  C9 40        		CMP #$40
001538r 2  B0 01        		BCS @full
00153Ar 2  C8           		INY
00153Br 2  8C rr rr     @full:	STY ALERTS
00153Er 2  A2 00        		LDX #$00
001540r 2  A0 17        		LDY #$17
001542r 2  20 rr rr     		JSR DRAWCELLS
001545r 2  E6 E6 E6 E6  		.byte	$E6,$E6,$E6,$E6,$E6,$E6,$E6,$E6,$00
001549r 2  E6 E6 E6 E6  
00154Dr 2  00           
00154Er 2  A0 00        		LDY #$00		; render immediate
001550r 2  20 rr rr     		JSR SSSFLIP
001553r 2  AD rr rr     		LDA HULLC
001556r 2  8D 86 02     		STA COLORCODE
001559r 2  A2 00        		LDX #$00
00155Br 2  A0 17        		LDY #$17
00155Dr 2  20 rr rr     		JSR DRAWCELLS	; OK
001560r 2  E6 E6 E6 8F  		.byte	$E6,$E6,$E6,$8F,$8B,$E6,$E6,$E6,$00
001564r 2  8B E6 E6 E6  
001568r 2  00           
001569r 2  4C rr rr     		JMP @fini
00156Cr 2               @mid:
00156Cr 2  C0 01        		CPY #$01
00156Er 2  D0 32        		BNE @low
001570r 2  C8           		INY
001571r 2  8C rr rr     		STY ALERTS
001574r 2  A2 00        		LDX #$00
001576r 2  A0 17        		LDY #$17
001578r 2  20 rr rr     		JSR DRAWCELLS
00157Br 2  E6 E8 E8 E8  		.byte	$E6,$E8,$E8,$E8,$E8,$E8,$E8,$E6,$00
00157Fr 2  E8 E8 E8 E6  
001583r 2  00           
001584r 2  A0 00        		LDY #$00		; render immediate
001586r 2  20 rr rr     		JSR SSSFLIP
001589r 2  AD rr rr     		LDA HULLC+1
00158Cr 2  8D 86 02     		STA COLORCODE
00158Fr 2  A2 00        		LDX #$00
001591r 2  A0 17        		LDY #$17
001593r 2  20 rr rr     		JSR DRAWCELLS	; DAMAGE
001596r 2  E6 84 81 8D  		.byte	$E6,$84,$81,$8D,$81,$87,$85,$E6,$00
00159Ar 2  81 87 85 E6  
00159Er 2  00           
00159Fr 2  4C rr rr     		JMP @fini
0015A2r 2               @low:
0015A2r 2  C0 02        		CPY #$02
0015A4r 2  D0 32        		BNE @mt
0015A6r 2  C8           @ng:	INY
0015A7r 2  8C rr rr     		STY ALERTS
0015AAr 2  A2 00        		LDX #$00
0015ACr 2  A0 17        		LDY #$17
0015AEr 2  20 rr rr     		JSR DRAWCELLS
0015B1r 2  A0 E8 E8 E8  		.byte	$A0,$E8,$E8,$E8,$E8,$E8,$E8,$A0,$00
0015B5r 2  E8 E8 E8 A0  
0015B9r 2  00           
0015BAr 2  A0 00        		LDY #$00		; render immediate
0015BCr 2  20 rr rr     		JSR SSSFLIP
0015BFr 2  AD rr rr     		LDA HULLC+2
0015C2r 2  8D 86 02     		STA COLORCODE
0015C5r 2  A2 00        		LDX #$00
0015C7r 2  A0 17        		LDY #$17
0015C9r 2  20 rr rr     		JSR DRAWCELLS	; CRITICAL
0015CCr 2  83 92 89 94  		.byte	$83,$92,$89,$94,$89,$83,$81,$8C,$00
0015D0r 2  89 83 81 8C  
0015D4r 2  00           
0015D5r 2  4C rr rr     		JMP @fini
0015D8r 2               @mt:
0015D8r 2  AD rr rr     		LDA FURYHP
0015DBr 2  D0 C9        		BNE @ng
0015DDr 2               @dead:
0015DDr 2  A9 01        		LDA #$01
0015DFr 2  8D 86 02     		STA COLORCODE
0015E2r 2  A2 00        		LDX #$00
0015E4r 2  A0 17        		LDY #$17
0015E6r 2  20 rr rr     		JSR DRAWCELLS	; EJECT!
0015E9r 2  A0 85 8A 85  		.byte	$A0,$85,$8A,$85,$83,$94,$A1,$A0,$00
0015EDr 2  83 94 A1 A0  
0015F1r 2  00           
0015F2r 2  A0 00        		LDY #$00		; render immediate
0015F4r 2  20 rr rr     		JSR SSSFLIP
0015F7r 2  A9 07        		LDA #$07
0015F9r 2  8D 86 02     		STA COLORCODE
0015FCr 2  A2 00        		LDX #$00
0015FEr 2  A0 17        		LDY #$17
001600r 2  20 rr rr     		JSR DRAWCELLS	; EJECT!
001603r 2  A0 85 8A 85  		.byte	$A0,$85,$8A,$85,$83,$94,$A1,$A0,$00
001607r 2  83 94 A1 A0  
00160Br 2  00           
00160Cr 2  A0 00        @fini:	LDY #$00		; render immediate
00160Er 2  20 rr rr     		JSR SSSFLIP
001611r 2  60           		RTS
001612r 2               
001612r 2               ;*********************************************************************
001612r 2               ; Update tactical with Omega Fury's weapon status
001612r 2               ;
001612r 2               WEAPONSTATUS:
001612r 2  A0 00        		LDY #$00
001614r 2  AD rr rr     		LDA ENERGIZER
001617r 2  D9 rr rr     @dash1:	CMP BOLTE,Y
00161Ar 2  B0 05        		BCS @energy
00161Cr 2  C8           		INY
00161Dr 2  C0 03        		CPY #$03
00161Fr 2  D0 F6        		BNE @dash1
001621r 2               @energy:
001621r 2  B9 rr rr     		LDA BOLTC,Y
001624r 2  8D 86 02     		STA COLORCODE
001627r 2               @hi:
001627r 2  C0 00        		CPY #$00
001629r 2  D0 0E        		BNE @mid
00162Br 2  A2 08        		LDX #$08
00162Dr 2  A0 17        		LDY #$17
00162Fr 2  20 rr rr     		JSR DRAWCELLS
001632r 2  E6 E6 E6 E6  		.byte	$E6,$E6,$E6,$E6,$E6,$00
001636r 2  E6 00        
001638r 2  60           		RTS
001639r 2               @mid:
001639r 2  C0 01        		CPY #$01
00163Br 2  D0 0E        		BNE @low
00163Dr 2  A2 08        		LDX #$08
00163Fr 2  A0 17        		LDY #$17
001641r 2  20 rr rr     		JSR DRAWCELLS
001644r 2  E8 E8 E8 E8  		.byte	$E8,$E8,$E8,$E8,$E8,$00
001648r 2  E8 00        
00164Ar 2  60           		RTS
00164Br 2               @low:
00164Br 2  C0 02        		CPY #$02
00164Dr 2  D0 0E        		BNE @mt
00164Fr 2  A2 08        		LDX #$08
001651r 2  A0 17        		LDY #$17
001653r 2  20 rr rr     		JSR DRAWCELLS
001656r 2  A0 E8 E8 E8  		.byte	$A0,$E8,$E8,$E8,$A0,$00
00165Ar 2  A0 00        
00165Cr 2  60           		RTS
00165Dr 2               @mt:
00165Dr 2  A2 08        		LDX #$08
00165Fr 2  A0 17        		LDY #$17
001661r 2  20 rr rr     		JSR DRAWCELLS
001664r 2  85 8D 90 94  		.byte	$85,$8D,$90,$94,$99,$00	; EMPTY
001668r 2  99 00        
00166Ar 2  60           		RTS
00166Br 2               
00166Br 2               ;*********************************************************************
00166Br 2               ; Show player's score
00166Br 2               ;
00166Br 2               SCORESTATUS:
00166Br 2  A9 01        		LDA #$01
00166Dr 2  8D 86 02     		STA COLORCODE
001670r 2  A2 0E        		LDX #$0E
001672r 2  A0 17        		LDY #$17
001674r 2  20 rr rr     		JSR SSSPLOT
001677r 2  A2 00        		LDX #$00
001679r 2  BD rr rr     @loop:	LDA SCORE,X
00167Cr 2  4A           		LSR
00167Dr 2  4A           		LSR
00167Er 2  4A           		LSR
00167Fr 2  4A           		LSR
001680r 2  09 B0        		ORA #$B0
001682r 2  20 rr rr     		JSR SSSPRINT
001685r 2  BD rr rr     		LDA SCORE,X
001688r 2  29 0F        		AND #$0F
00168Ar 2  09 B0        		ORA #$B0
00168Cr 2  20 rr rr     		JSR SSSPRINT
00168Fr 2  E8           		INX
001690r 2  E0 03        		CPX #$03
001692r 2  D0 E5        		BNE @loop
001694r 2  60           		RTS
001695r 2               
001695r 2               ;*********************************************************************
001695r 2               ; Update player's score
001695r 2               ; Send Y as index
001695r 2               ;
001695r 2               SCOREUPDATE:
001695r 2  C0 04        		CPY #$04
001697r 2  B0 05        		BCS @g1
001699r 2  B9 rr rr     		LDA VALUE,Y
00169Cr 2  D0 21        		BNE @score
00169Er 2  C0 0B        @g1:	CPY #$0B		; grenade
0016A0r 2  B0 04        		BCS @g2
0016A2r 2  A9 10        		LDA #$10
0016A4r 2  D0 19        		BNE @score
0016A6r 2  C0 0D        @g2:	CPY #$0D		; hull blaster
0016A8r 2  B0 04        		BCS @g3
0016AAr 2  A9 20        		LDA #$20
0016ACr 2  D0 11        		BNE @score
0016AEr 2  C0 0F        @g3:	CPY #$0F		; sonic boomer
0016B0r 2  B0 04        		BCS @g4
0016B2r 2  A9 40        		LDA #$40
0016B4r 2  D0 09        		BNE @score
0016B6r 2  C0 11        @g4:	CPY #$11		; heart stopper
0016B8r 2  B0 04        		BCS @x
0016BAr 2  A9 80        		LDA #$80
0016BCr 2  D0 01        		BNE @score
0016BEr 2  60           @x:		RTS
0016BFr 2               @score:
0016BFr 2  18           		CLC
0016C0r 2  F8           		SED
0016C1r 2  6D rr rr     		ADC SCORE+2
0016C4r 2  8D rr rr     		STA SCORE+2
0016C7r 2  90 14        		BCC @nocc
0016C9r 2  AD rr rr     		LDA SCORE+1
0016CCr 2  18           		CLC
0016CDr 2  69 01        		ADC #$01
0016CFr 2  8D rr rr     		STA SCORE+1
0016D2r 2  90 09        		BCC @nocc
0016D4r 2  AD rr rr     		LDA SCORE
0016D7r 2  18           		CLC
0016D8r 2  69 01        		ADC #$01
0016DAr 2  8D rr rr     		STA SCORE
0016DDr 2  D8           @nocc:	CLD
0016DEr 2  20 rr rr     		JSR SCORESTATUS
0016E1r 2  60           		RTS
0016E2r 2               
0016E2r 2               ;*********************************************************************
0016E2r 2               ; Print STATIC CELL data from PC stored on stack
0016E2r 2               ;
0016E2r 2               DRAWCELLS:
0016E2r 2  68           		PLA
0016E3r 2  85 F7        		STA VECTORFG
0016E5r 2  68           		PLA
0016E6r 2  85 F8        		STA VECTORFG+1
0016E8r 2  20 rr rr     		JSR SSSPLOTS
0016EBr 2  A0 01        		LDY #$01
0016EDr 2  8C 9A 02     		STY R0
0016F0r 2  B1 F7        @loop:	LDA (VECTORFG),Y
0016F2r 2  F0 11        		BEQ @fini
0016F4r 2  A6 D3        		LDX CRSRCOL
0016F6r 2  A4 D6        		LDY CRSRROW
0016F8r 2  20 rr rr     		JSR SSSCELL
0016FBr 2  E6 D3        		INC CRSRCOL
0016FDr 2  EE 9A 02     		INC R0
001700r 2  AC 9A 02     		LDY R0
001703r 2  D0 EB        		BNE @loop
001705r 2               		;
001705r 2  98           @fini:	TYA
001706r 2  18           		CLC
001707r 2  65 F7        		ADC VECTORFG
001709r 2  90 02        		BCC @nocc
00170Br 2  E6 F8        		INC VECTORFG+1
00170Dr 2  85 F7        @nocc:	STA VECTORFG
00170Fr 2  A5 F8        		LDA VECTORFG+1
001711r 2  48           		PHA
001712r 2  A5 F7        		LDA VECTORFG
001714r 2  48           		PHA
001715r 2  60           		RTS
001716r 2               
001716r 2               ;*********************************************************************
001716r 2               ; Render Omegan Objective at the center of the screen
001716r 2               ; Pass A for objective
001716r 2               ;
001716r 2               DRAWOBJECTIVE:
001716r 2  AD rr rr     		LDA MISSION
001719r 2               @mission0:
001719r 2  C9 01        		CMP #$01
00171Br 2  B0 1A        		BCS @mission1
00171Dr 2  A9 00        		LDA #$00
00171Fr 2  8D rr rr     		STA TITLE
001722r 2  A9 FF        		LDA #$FF		; light yellow & highest
001724r 2  8D 0E 90     		STA VIC+$0E		; auxiliary color & volume
001727r 2  A9 0E        		LDA #$0E
001729r 2  8D 86 02     		STA COLORCODE
00172Cr 2  A2 rr        		LDX #<ACADEMY
00172Er 2  A0 rr        		LDY #>ACADEMY
001730r 2  86 01        		STX $01
001732r 2  84 02        		STY $02
001734r 2  4C rr rr     		JMP @copy
001737r 2               @mission1:
001737r 2  C9 03        		CMP #$03
001739r 2  B0 1A        		BCS @mission2
00173Br 2  A9 01        		LDA #$01
00173Dr 2  8D rr rr     		STA TITLE
001740r 2  A9 EF        		LDA #$EF		; light blue & highest
001742r 2  8D 0E 90     		STA VIC+$0E		; auxiliary color & volume
001745r 2  A9 0E        		LDA #$0E
001747r 2  8D 86 02     		STA COLORCODE
00174Ar 2  A2 rr        		LDX #<STARGATE
00174Cr 2  A0 rr        		LDY #>STARGATE
00174Er 2  86 01        		STX $01
001750r 2  84 02        		STY $02
001752r 2  4C rr rr     		JMP @copy
001755r 2               @mission2:
001755r 2  C9 06        		CMP #$06
001757r 2  B0 1A        		BCS @mission3
001759r 2  A9 02        		LDA #$02
00175Br 2  8D rr rr     		STA TITLE
00175Er 2  A9 FF        		LDA #$FF		; light yellow & highest
001760r 2  8D 0E 90     		STA VIC+$0E		; auxiliary color & volume
001763r 2  A9 0D        		LDA #$0D		; green
001765r 2  8D 86 02     		STA COLORCODE
001768r 2  A2 rr        		LDX #<CARGOSHIP
00176Ar 2  A0 rr        		LDY #>CARGOSHIP
00176Cr 2  86 01        		STX $01
00176Er 2  84 02        		STY $02
001770r 2  4C rr rr     		JMP @copy
001773r 2               @mission3:
001773r 2  C9 0A        		CMP #$0A
001775r 2  B0 1A        		BCS @mission4
001777r 2  A9 03        		LDA #$03
001779r 2  8D rr rr     		STA TITLE
00177Cr 2  A9 AF        		LDA #$AF		; light red & highest
00177Er 2  8D 0E 90     		STA VIC+$0E		; auxiliary color & volume
001781r 2  A9 09        		LDA #$09
001783r 2  8D 86 02     		STA COLORCODE
001786r 2  A2 rr        		LDX #<MEDICALSHIP
001788r 2  A0 rr        		LDY #>MEDICALSHIP
00178Ar 2  86 01        		STX $01
00178Cr 2  84 02        		STY $02
00178Er 2  4C rr rr     		JMP @copy
001791r 2               @mission4:
001791r 2  C9 0F        		CMP #$0F
001793r 2  B0 1A        		BCS @mission5
001795r 2  A9 04        		LDA #$04
001797r 2  8D rr rr     		STA TITLE
00179Ar 2  A9 EF        		LDA #$EF		; light blue & highest
00179Cr 2  8D 0E 90     		STA VIC+$0E		; auxiliary color & volume
00179Fr 2  A9 0F        		LDA #$0F
0017A1r 2  8D 86 02     		STA COLORCODE
0017A4r 2  A2 rr        		LDX #<WEAPONSHIP
0017A6r 2  A0 rr        		LDY #>WEAPONSHIP
0017A8r 2  86 01        		STX $01
0017AAr 2  84 02        		STY $02
0017ACr 2  4C rr rr     		JMP @copy
0017AFr 2               @mission5:
0017AFr 2  A9 05        		LDA #$05
0017B1r 2  8D rr rr     		STA TITLE
0017B4r 2  A9 EF        		LDA #$EF		; light blue & highest
0017B6r 2  8D 0E 90     		STA VIC+$0E		; auxiliary color & volume
0017B9r 2  A9 0F        		LDA #$0F
0017BBr 2  8D 86 02     		STA COLORCODE
0017BEr 2  A2 rr        		LDX #<COLONISTS
0017C0r 2  A0 rr        		LDY #>COLONISTS
0017C2r 2  86 01        		STX $01
0017C4r 2  84 02        		STY $02
0017C6r 2  4C rr rr     		JMP @copy
0017C9r 2               @copy:
0017C9r 2  A0 00        		LDY #$00
0017CBr 2  B1 01        @img:	LDA ($01),Y
0017CDr 2  99 00 1C     		STA $1C00,Y
0017D0r 2  C8           		INY
0017D1r 2  C0 48        		CPY #$48		; 3x3 matrix
0017D3r 2  D0 F6        		BNE @img
0017D5r 2               		;
0017D5r 2  A2 09        		LDX #$09
0017D7r 2  8E 9A 02     		STX R0
0017DAr 2  A9 00        		LDA #$00		; start with this character code
0017DCr 2  8D 9C 02     		STA R2
0017DFr 2  A0 0A        @y:		LDY #$0A
0017E1r 2  8C 9B 02     		STY R1
0017E4r 2  20 rr rr     @draw:	JSR SSSPLOT
0017E7r 2  AD 9C 02     		LDA R2
0017EAr 2  20 rr rr     		JSR SSSPOKE
0017EDr 2  EE 9C 02     		INC R2
0017F0r 2  EE 9B 02     		INC R1
0017F3r 2  AC 9B 02     		LDY R1
0017F6r 2  AE 9A 02     		LDX R0
0017F9r 2  C0 0D        		CPY #$0D
0017FBr 2  D0 E7        		BNE @draw
0017FDr 2  E8           		INX
0017FEr 2  8E 9A 02     		STX R0
001801r 2  E0 0C        		CPX #$0C
001803r 2  D0 DA        		BNE @y
001805r 2  60           		RTS
001806r 2               
001806r 2               ;*********************************************************************
001806r 2               ; Draw Omegan Objective's shields
001806r 2               ;
001806r 2               DRAWSHIELDS:
001806r 2  AD rr rr     		LDA OMEGAHP
001809r 2  D0 01        		BNE @shields
00180Br 2  60           		RTS
00180Cr 2               @shields:
00180Cr 2  A2 01        		LDX #$01		; WHITE
00180Er 2  C9 D0        		CMP #$D0
001810r 2  B0 14        		BCS @color
001812r 2  A2 03        		LDX #$03		; CYAN
001814r 2  C9 90        		CMP #$90
001816r 2  B0 0E        		BCS @color
001818r 2  A2 07        		LDX #$07		; YELLOW
00181Ar 2  C9 50        		CMP #$50
00181Cr 2  B0 08        		BCS @color
00181Er 2  A2 02        		LDX #$02		; RED
001820r 2  C9 10        		CMP #$10
001822r 2  B0 02        		BCS @color
001824r 2  A2 00        		LDX #$00		; BLACK
001826r 2  8E 86 02     @color:	STX COLORCODE
001829r 2  A2 08        		LDX #$08
00182Br 2  A0 09        		LDY #$09
00182Dr 2  20 rr rr     		JSR SSSPLOT
001830r 2  A9 D5        		LDA #$D5
001832r 2  20 rr rr     		JSR SSSPRINT
001835r 2  A2 02        		LDX #$02
001837r 2  8E 9A 02     		STX R0
00183Ar 2  A9 C0        @top:	LDA #$C0
00183Cr 2  20 rr rr     		JSR SSSPRINT
00183Fr 2  CE 9A 02     		DEC R0
001842r 2  AE 9A 02     		LDX R0
001845r 2  10 F3        		BPL @top
001847r 2  A9 C9        		LDA #$C9
001849r 2  20 rr rr     		JSR SSSPRINT
00184Cr 2  A4 D6        		LDY CRSRROW
00184Er 2  C8           		INY
00184Fr 2  8C 9A 02     		STY R0
001852r 2               		;
001852r 2  A2 08        @mid:	LDX #$08
001854r 2  20 rr rr     		JSR SSSPLOT
001857r 2  A9 DD        		LDA #$DD
001859r 2  20 rr rr     		JSR SSSPRINT
00185Cr 2  A2 0C        		LDX #$0C
00185Er 2  AC 9A 02     		LDY R0
001861r 2  20 rr rr     		JSR SSSPLOT
001864r 2  A9 DD        		LDA #$DD
001866r 2  20 rr rr     		JSR SSSPRINT
001869r 2  EE 9A 02     		INC R0
00186Cr 2  AC 9A 02     		LDY R0
00186Fr 2  C0 0D        		CPY #$0D
001871r 2  D0 DF        		BNE @mid
001873r 2               		;
001873r 2  A2 08        		LDX #$08
001875r 2  20 rr rr     		JSR SSSPLOT
001878r 2  A9 CA        		LDA #$CA
00187Ar 2  20 rr rr     		JSR SSSPRINT
00187Dr 2  A2 02        		LDX #$02
00187Fr 2  A9 C0        @bot:	LDA #$C0
001881r 2  20 rr rr     		JSR SSSPRINT
001884r 2  CA           		DEX
001885r 2  10 F8        		BPL @bot
001887r 2  A9 CB        		LDA #$CB
001889r 2  20 rr rr     		JSR SSSPRINT
00188Cr 2               		;
00188Cr 2  60           		RTS
00188Dr 2               
00188Dr 2               ;*********************************************************************
00188Dr 2               ; Destroy Omegan Objective at the center of the screen
00188Dr 2               ;
00188Dr 2               KILLOBJECTIVE:
00188Dr 2  AD rr rr     		LDA MISSION
001890r 2  F0 75        		BEQ @fini		; let's not destroy the academy over one bad cadet
001892r 2  AD rr rr     		LDA OMEGAHP
001895r 2  F0 70        		BEQ @fini		; sanity check -- already destroyed
001897r 2               		; light show first
001897r 2  A9 1A        		LDA #$1A		; white / red
001899r 2  8D 0F 90     		STA VIC+$0F
00189Cr 2  A9 F8        		LDA #$F8
00189Er 2  8D rr rr     		STA HIT
0018A1r 2  A2 02        		LDX #$02
0018A3r 2  8E rr rr     		STX LOOPX
0018A6r 2               		; explode
0018A6r 2  A2 5D        @loop:	LDX #(11*8)+5
0018A8r 2  A0 64        		LDY #(12*8)+4
0018AAr 2  20 rr rr     		JSR NEWBIGHITMARK
0018ADr 2  A0 02        		LDY #$02
0018AFr 2  20 rr rr     		JSR SSSFLIP
0018B2r 2  EE rr rr     		INC FRAME
0018B5r 2               		; dissipate
0018B5r 2  20 rr rr     @fade:	JSR OLDBIGHITMARK
0018B8r 2  A0 02        		LDY #$02
0018BAr 2  20 rr rr     		JSR SSSFLIP
0018BDr 2  EE rr rr     		INC FRAME
0018C0r 2  AD rr rr     		LDA BIGHITMARK
0018C3r 2  D0 F0        		BNE @fade
0018C5r 2  CE rr rr     		DEC LOOPX
0018C8r 2  D0 DC        		BNE @loop
0018CAr 2               		; bite the dust
0018CAr 2  A9 00        		LDA #$00
0018CCr 2  8D rr rr     		STA OMEGAHP
0018CFr 2  A2 08        		LDX #$08
0018D1r 2  8E 9A 02     		STX R0
0018D4r 2  A0 09        @y:		LDY #$09
0018D6r 2  8C 9B 02     		STY R1
0018D9r 2  20 rr rr     @draw:	JSR SSSPLOT
0018DCr 2  A9 A0        		LDA #SSSNULL
0018DEr 2  20 rr rr     		JSR SSSPOKE
0018E1r 2  EE 9B 02     		INC R1
0018E4r 2  AC 9B 02     		LDY R1
0018E7r 2  AE 9A 02     		LDX R0
0018EAr 2  C0 0E        		CPY #$0E
0018ECr 2  D0 EB        		BNE @draw
0018EEr 2  E8           		INX
0018EFr 2  8E 9A 02     		STX R0
0018F2r 2  E0 0D        		CPX #$0D
0018F4r 2  D0 DE        		BNE @y
0018F6r 2               		; incinerate
0018F6r 2  A9 E0        		LDA #$E0
0018F8r 2  8D rr rr     		STA HIT
0018FBr 2  A2 5D        		LDX #(11*8)+5
0018FDr 2  A0 64        		LDY #(12*8)+4
0018FFr 2  20 rr rr     		JSR NEWBIGHITMARK
001902r 2  A9 1F        		LDA #$1F
001904r 2  8D rr rr     		STA NAVI		; fury momentarily loses control
001907r 2  60           @fini:	RTS
001908r 2               
001908r 2               ;*********************************************************************
001908r 2               ; Display player's RANK
001908r 2               ;
001908r 2               DRAWRANK:
001908r 2  A9 04        		LDA #$04
00190Ar 2  8D 86 02     		STA COLORCODE
00190Dr 2  AD rr rr     		LDA TITLE
001910r 2  0A           		ASL
001911r 2  AA           		TAX
001912r 2  BD rr rr     		LDA TITLES,X
001915r 2  85 8E        		STA $8E
001917r 2  BD rr rr     		LDA TITLES+1,X
00191Ar 2  85 8F        		STA $8F
00191Cr 2  A0 00        		LDY #$00
00191Er 2  B1 8E        		LDA ($8E),Y
001920r 2  AA           		TAX
001921r 2  A0 11        		LDY #$11
001923r 2  20 rr rr     		JSR SSSPLOT
001926r 2  A0 01        		LDY #$01
001928r 2  B1 8E        @title:	LDA ($8E),Y
00192Ar 2  F0 06        		BEQ @xtitle
00192Cr 2  20 rr rr     		JSR SSSPRINT
00192Fr 2  C8           		INY
001930r 2  D0 F6        		BNE @title
001932r 2               @xtitle:
001932r 2  60           		RTS
001933r 2               
001933r 2               ;*********************************************************************
001933r 2               ; Find a mine in the array
001933r 2               ; Pass X/Y coordinate to check for,
001933r 2               ; returning result in X
001933r 2               ;
001933r 2               FINDMINE:
001933r 2  8E 0D 03     		STX XCOPY
001936r 2  8C 0E 03     		STY YCOPY
001939r 2  A2 00        		LDX #$00
00193Br 2  BD rr rr     @loopx:	LDA MINES,X
00193Er 2  F0 10        		BEQ @next
001940r 2  BD rr rr     		LDA MINEX,X
001943r 2  CD 0D 03     		CMP XCOPY
001946r 2  D0 08        		BNE @next
001948r 2  BD rr rr     		LDA MINEY,X
00194Br 2  CD 0E 03     		CMP YCOPY
00194Er 2  F0 05        		BEQ @fini
001950r 2  E8           @next:	INX
001951r 2  E0 10        		CPX #$10
001953r 2  D0 E6        		BNE @loopx
001955r 2  60           @fini:	RTS
001956r 2               
001956r 2               ;*********************************************************************
001956r 2               ; Plot a grenade mine
001956r 2               ; Pass X/Y
001956r 2               ;
001956r 2               DROPGRENADE:
001956r 2  8A           		TXA
001957r 2  48           		PHA
001958r 2  98           		TYA
001959r 2  48           		PHA
00195Ar 2  20 rr rr     		JSR SSSPEEKS
00195Dr 2  C9 A0        		CMP #SSSNULL
00195Fr 2  F0 03        		BEQ @mt
001961r 2  68           		PLA
001962r 2  68           		PLA
001963r 2  60           		RTS
001964r 2               @mt:
001964r 2  A2 00        		LDX #$00
001966r 2  BD rr rr     @loop:	LDA MINES,X
001969r 2  F0 08        		BEQ @slot
00196Br 2  E8           		INX
00196Cr 2  E0 10        		CPX #$10
00196Er 2  D0 F6        		BNE @loop
001970r 2  68           		PLA
001971r 2  68           		PLA
001972r 2  60           		RTS
001973r 2               @slot:
001973r 2  8A           		TXA
001974r 2  48           		PHA
001975r 2  A9 05        		LDA #$05
001977r 2  8D 86 02     		STA COLORCODE
00197Ar 2  A9 09        		LDA #$09
00197Cr 2  A6 D3        		LDX CRSRCOL
00197Er 2  A4 D6        		LDY CRSRROW
001980r 2  20 rr rr     		JSR SSSCELL
001983r 2  A0 00        		LDY #$00		; render immediate
001985r 2  20 rr rr     		JSR SSSFLIP
001988r 2  68           		PLA
001989r 2  AA           		TAX
00198Ar 2  A9 01        		LDA #$01
00198Cr 2  9D rr rr     		STA MINES,X
00198Fr 2  68           		PLA
001990r 2  9D rr rr     		STA MINEY,X
001993r 2  A8           		TAY
001994r 2  68           		PLA
001995r 2  9D rr rr     		STA MINEX,X
001998r 2  AA           		TAX
001999r 2  A9 05        		LDA #$05
00199Br 2  8D 86 02     		STA COLORCODE
00199Er 2  A9 0A        		LDA #$0A
0019A0r 2  20 rr rr     		JSR SSSCELL
0019A3r 2  A9 04        		LDA #$04
0019A5r 2  8D rr rr     		STA DROPPED
0019A8r 2  EE rr rr     		INC OBJECTIVE
0019ABr 2  60           		RTS
0019ACr 2               
0019ACr 2               ;*********************************************************************
0019ACr 2               ; Plot a hull blaster mine
0019ACr 2               ; Pass X/Y
0019ACr 2               ;
0019ACr 2               DROPHULLBLASTER:
0019ACr 2  8A           		TXA
0019ADr 2  48           		PHA
0019AEr 2  98           		TYA
0019AFr 2  48           		PHA
0019B0r 2  20 rr rr     		JSR SSSPEEKS
0019B3r 2  C9 A0        		CMP #$A0
0019B5r 2  F0 03        		BEQ @mt
0019B7r 2  68           		PLA
0019B8r 2  68           		PLA
0019B9r 2  60           		RTS
0019BAr 2               @mt:
0019BAr 2  A2 00        		LDX #$00
0019BCr 2  BD rr rr     @loop:	LDA MINES,X
0019BFr 2  F0 08        		BEQ @slot
0019C1r 2  E8           		INX
0019C2r 2  E0 10        		CPX #$10
0019C4r 2  D0 F6        		BNE @loop
0019C6r 2  68           		PLA
0019C7r 2  68           		PLA
0019C8r 2  60           		RTS
0019C9r 2               @slot:
0019C9r 2  8A           		TXA
0019CAr 2  48           		PHA
0019CBr 2  A9 01        		LDA #$01
0019CDr 2  8D 86 02     		STA COLORCODE
0019D0r 2  A9 0B        		LDA #$0B
0019D2r 2  A6 D3        		LDX CRSRCOL
0019D4r 2  A4 D6        		LDY CRSRROW
0019D6r 2  20 rr rr     		JSR SSSCELL
0019D9r 2  A0 00        		LDY #$00		; render immediate
0019DBr 2  20 rr rr     		JSR SSSFLIP
0019DEr 2  68           		PLA
0019DFr 2  AA           		TAX
0019E0r 2  A9 02        		LDA #$02
0019E2r 2  9D rr rr     		STA MINES,X
0019E5r 2  68           		PLA
0019E6r 2  9D rr rr     		STA MINEY,X
0019E9r 2  A8           		TAY
0019EAr 2  68           		PLA
0019EBr 2  9D rr rr     		STA MINEX,X
0019EEr 2  AA           		TAX
0019EFr 2  A9 04        		LDA #$04
0019F1r 2  8D 86 02     		STA COLORCODE
0019F4r 2  A9 0C        		LDA #$0C
0019F6r 2  20 rr rr     		JSR SSSCELL
0019F9r 2  A9 04        		LDA #$04
0019FBr 2  8D rr rr     		STA DROPPED
0019FEr 2  EE rr rr     		INC OBJECTIVE
001A01r 2  60           		RTS
001A02r 2               
001A02r 2               ;*********************************************************************
001A02r 2               ; Plot a sonic boomer mine
001A02r 2               ; Pass X/Y
001A02r 2               ;
001A02r 2               DROPSONICBOOMER:
001A02r 2  8A           		TXA
001A03r 2  48           		PHA
001A04r 2  98           		TYA
001A05r 2  48           		PHA
001A06r 2  20 rr rr     		JSR SSSPEEKS
001A09r 2  C9 A0        		CMP #SSSNULL
001A0Br 2  F0 03        		BEQ @mt
001A0Dr 2  68           		PLA
001A0Er 2  68           		PLA
001A0Fr 2  60           		RTS
001A10r 2               @mt:
001A10r 2  A2 00        		LDX #$00
001A12r 2  BD rr rr     @loop:	LDA MINES,X
001A15r 2  F0 08        		BEQ @slot
001A17r 2  E8           		INX
001A18r 2  E0 10        		CPX #$10
001A1Ar 2  D0 F6        		BNE @loop
001A1Cr 2  68           		PLA
001A1Dr 2  68           		PLA
001A1Er 2  60           		RTS
001A1Fr 2               @slot:
001A1Fr 2  8A           		TXA
001A20r 2  48           		PHA
001A21r 2  A9 06        		LDA #$06
001A23r 2  8D 86 02     		STA COLORCODE
001A26r 2  A9 0D        		LDA #$0D
001A28r 2  A6 D3        		LDX CRSRCOL
001A2Ar 2  A4 D6        		LDY CRSRROW
001A2Cr 2  20 rr rr     		JSR SSSCELL
001A2Fr 2  A0 00        		LDY #$00		; render immediate
001A31r 2  20 rr rr     		JSR SSSFLIP
001A34r 2  68           		PLA
001A35r 2  AA           		TAX
001A36r 2  A9 03        		LDA #$03
001A38r 2  9D rr rr     		STA MINES,X
001A3Br 2  68           		PLA
001A3Cr 2  9D rr rr     		STA MINEY,X
001A3Fr 2  A8           		TAY
001A40r 2  68           		PLA
001A41r 2  9D rr rr     		STA MINEX,X
001A44r 2  AA           		TAX
001A45r 2  A9 03        		LDA #$03
001A47r 2  8D 86 02     		STA COLORCODE
001A4Ar 2  A9 0E        		LDA #$0E
001A4Cr 2  20 rr rr     		JSR SSSCELL
001A4Fr 2  A9 04        		LDA #$04
001A51r 2  8D rr rr     		STA DROPPED
001A54r 2  EE rr rr     		INC OBJECTIVE
001A57r 2  60           		RTS
001A58r 2               
001A58r 2               ;*********************************************************************
001A58r 2               ; Plot a heart-stopper mine
001A58r 2               ; Pass X/Y
001A58r 2               ;
001A58r 2               DROPHEARTSTOPPER:
001A58r 2  8A           		TXA
001A59r 2  48           		PHA
001A5Ar 2  98           		TYA
001A5Br 2  48           		PHA
001A5Cr 2  20 rr rr     		JSR SSSPEEKS
001A5Fr 2  C9 A0        		CMP #SSSNULL
001A61r 2  F0 03        		BEQ @mt
001A63r 2  68           		PLA
001A64r 2  68           		PLA
001A65r 2  60           		RTS
001A66r 2               @mt:
001A66r 2  A2 00        		LDX #$00
001A68r 2  BD rr rr     @loop:	LDA MINES,X
001A6Br 2  F0 08        		BEQ @slot
001A6Dr 2  E8           		INX
001A6Er 2  E0 10        		CPX #$10
001A70r 2  D0 F6        		BNE @loop
001A72r 2  68           		PLA
001A73r 2  68           		PLA
001A74r 2  60           		RTS
001A75r 2               @slot:
001A75r 2  8A           		TXA
001A76r 2  48           		PHA
001A77r 2  A9 02        		LDA #$02
001A79r 2  8D 86 02     		STA COLORCODE
001A7Cr 2  A9 0F        		LDA #$0F
001A7Er 2  A6 D3        		LDX CRSRCOL
001A80r 2  A4 D6        		LDY CRSRROW
001A82r 2  20 rr rr     		JSR SSSCELL
001A85r 2  A0 00        		LDY #$00		; render immediate
001A87r 2  20 rr rr     		JSR SSSFLIP
001A8Ar 2  68           		PLA
001A8Br 2  AA           		TAX
001A8Cr 2  A9 04        		LDA #$04
001A8Er 2  9D rr rr     		STA MINES,X
001A91r 2  68           		PLA
001A92r 2  9D rr rr     		STA MINEY,X
001A95r 2  A8           		TAY
001A96r 2  68           		PLA
001A97r 2  9D rr rr     		STA MINEX,X
001A9Ar 2  AA           		TAX
001A9Br 2  A9 02        		LDA #$02
001A9Dr 2  8D 86 02     		STA COLORCODE
001AA0r 2  A9 10        		LDA #$10
001AA2r 2  20 rr rr     		JSR SSSCELL
001AA5r 2  A9 04        		LDA #$04
001AA7r 2  8D rr rr     		STA DROPPED
001AAAr 2  8D rr rr     		STA PULSE
001AADr 2  EE rr rr     		INC OBJECTIVE
001AB0r 2  EE rr rr     		INC HEARTBEATS
001AB3r 2  60           		RTS
001AB4r 2               
001AB4r 2               ;*********************************************************************
001AB4r 2               ; Dispatch a new Thargoid mine
001AB4r 2               ; send A = number of mines (1-16)
001AB4r 2               ; send Y = mine type (1-4)
001AB4r 2               ;
001AB4r 2               NEWMINE:
001AB4r 2  8C 9A 02     		STY R0
001AB7r 2  8D 9B 02     		STA R1
001ABAr 2               @loop:
001ABAr 2  20 rr rr     		JSR RNDXY
001ABDr 2  AD 9A 02     @g1:	LDA R0
001AC0r 2  C9 01        		CMP #$01
001AC2r 2  B0 06        		BCS @g2
001AC4r 2  20 rr rr     		JSR DROPGRENADE
001AC7r 2  4C rr rr     		JMP @next
001ACAr 2               @g2:
001ACAr 2  C9 02        		CMP #$02
001ACCr 2  B0 06        		BCS @g3
001ACEr 2  20 rr rr     		JSR DROPHULLBLASTER
001AD1r 2  4C rr rr     		JMP @next
001AD4r 2               @g3:
001AD4r 2  C9 03        		CMP #$03
001AD6r 2  B0 06        		BCS @g4
001AD8r 2  20 rr rr     		JSR DROPSONICBOOMER
001ADBr 2  4C rr rr     		JMP @next
001ADEr 2               @g4:
001ADEr 2  20 rr rr     		JSR DROPHEARTSTOPPER
001AE1r 2               @next:
001AE1r 2  CE 9B 02     		DEC R1
001AE4r 2  D0 D4        		BNE @loop
001AE6r 2  60           		RTS
001AE7r 2               
001AE7r 2               ;*********************************************************************
001AE7r 2               ; Detonate a mine
001AE7r 2               ; Pass X into MINES array
001AE7r 2               ;
001AE7r 2               XMINE:
001AE7r 2  A9 00        		LDA #$00
001AE9r 2  9D rr rr     		STA MINES,X
001AECr 2  BD rr rr     		LDA MINEY,X
001AEFr 2  48           		PHA
001AF0r 2  A8           		TAY
001AF1r 2  BD rr rr     		LDA MINEX,X
001AF4r 2  48           		PHA
001AF5r 2  AA           		TAX
001AF6r 2  20 rr rr     		JSR SSSPLOT
001AF9r 2  A9 A0        		LDA #SSSNULL
001AFBr 2  20 rr rr     		JSR SSSPOKE
001AFEr 2  68           		PLA
001AFFr 2  0A           		ASL
001B00r 2  0A           		ASL
001B01r 2  0A           		ASL
001B02r 2  18           		CLC
001B03r 2  69 0C        		ADC #$0C
001B05r 2  AA           		TAX
001B06r 2  68           		PLA
001B07r 2  0A           		ASL
001B08r 2  0A           		ASL
001B09r 2  0A           		ASL
001B0Ar 2  18           		CLC
001B0Br 2  69 0C        		ADC #$0C
001B0Dr 2  A8           		TAY
001B0Er 2  20 rr rr     		JSR NEWBIGHITMARK
001B11r 2  CE rr rr     		DEC OBJECTIVE
001B14r 2  A9 FD        		LDA #$FD
001B16r 2  8D rr rr     		STA HIT
001B19r 2  60           		RTS
001B1Ar 2               
001B1Ar 2               ;*********************************************************************
001B1Ar 2               ; Dispatch a new Thargoid ship
001B1Ar 2               ; send A = to type of ship
001B1Ar 2               ;
001B1Ar 2               NEWTHARGOID:
001B1Ar 2  8D 0C 03     		STA ACOPY
001B1Dr 2  A2 00        		LDX #$00
001B1Fr 2  BD rr rr     @find:	LDA NME,X
001B22r 2  F0 06        		BEQ @mt
001B24r 2  E8           		INX
001B25r 2  E0 04        		CPX #$04
001B27r 2  D0 F6        		BNE @find
001B29r 2  60           		RTS
001B2Ar 2               @mt:
001B2Ar 2  8E rr rr     		STX WARPED
001B2Dr 2  AD 0C 03     		LDA ACOPY
001B30r 2  9D rr rr     		STA NME,X
001B33r 2  A8           		TAY
001B34r 2  A9 08        		LDA #$08
001B36r 2  9D rr rr     		STA SPRITEH+8,X
001B39r 2  A9 8C        		LDA #%10001100	; enable new sprite
001B3Br 2  9D rr rr     		STA SPRITEDEF+8,X
001B3Er 2  AD 0C 03     		LDA ACOPY		; duration
001B41r 2  9D rr rr     		STA NMELEN,X
001B44r 2  A9 01        		LDA #$01		; travel
001B46r 2  9D rr rr     		STA NMEPLAN,X
001B49r 2  A9 02        		LDA #$02		; slow: 1 update per 8 frames
001B4Br 2  9D rr rr     		STA NMESPEED,X
001B4Er 2  A9 00        		LDA #$00		; straight
001B50r 2  9D rr rr     		STA NMETURN,X
001B53r 2               		;
001B53r 2  B9 rr rr     		LDA INNER,Y
001B56r 2  48           		PHA				;++
001B57r 2  B9 rr rr     		LDA OUTER,Y
001B5Ar 2  A8           		TAY
001B5Br 2  B9 rr rr     		LDA OTY,Y
001B5Er 2  9D rr rr     		STA SPRITEY+8,X
001B61r 2  68           		PLA				;--
001B62r 2  A8           		TAY
001B63r 2  B9 rr rr     		LDA OLX,Y
001B66r 2  9D rr rr     		STA SPRITEX+8,X
001B69r 2  B9 rr rr     		LDA ORX,Y
001B6Cr 2  38           		SEC
001B6Dr 2  FD rr rr     		SBC SPRITEX+8,X
001B70r 2  4A           		LSR
001B71r 2  4A           		LSR
001B72r 2  4A           		LSR
001B73r 2  20 rr rr     		JSR RND
001B76r 2  AE rr rr     		LDX WARPED
001B79r 2  0A           		ASL
001B7Ar 2  0A           		ASL
001B7Br 2  0A           		ASL
001B7Cr 2  18           		CLC
001B7Dr 2  7D rr rr     		ADC SPRITEX+8,X
001B80r 2  9D rr rr     		STA SPRITEX+8,X
001B83r 2  BD rr rr     		LDA SPRITEY+8,X
001B86r 2  38           		SEC
001B87r 2  E9 04        		SBC #$04
001B89r 2  A8           		TAY
001B8Ar 2  BD rr rr     		LDA SPRITEX+8,X
001B8Dr 2  38           		SEC
001B8Er 2  E9 04        		SBC #$04
001B90r 2  AA           		TAX
001B91r 2  20 rr rr     		JSR NEWJUMPMARK
001B94r 2  AE rr rr     		LDX WARPED
001B97r 2  BD rr rr     		LDA SPRITEX+8,X
001B9Ar 2  A0 04        		LDY #$04
001B9Cr 2  C9 60        		CMP #$60
001B9Er 2  B0 02        		BCS @dir
001BA0r 2  A0 0C        		LDY #$0C
001BA2r 2  98           @dir:	TYA
001BA3r 2  9D rr rr     		STA NMEDIR,X
001BA6r 2  8A           		TXA
001BA7r 2  0A           		ASL
001BA8r 2  A8           		TAY
001BA9r 2  AD 0C 03     		LDA ACOPY
001BACr 2               @s1:
001BACr 2  C9 01        		CMP #$01
001BAEr 2  D0 1A        		BNE @s2
001BB0r 2  A9 rr        		LDA #<SCOUT0
001BB2r 2  9D rr rr     		STA SPRITEIMGL+8,X
001BB5r 2  A9 rr        		LDA #>SCOUT0
001BB7r 2  9D rr rr     		STA SPRITEIMGH+8,X
001BBAr 2  A9 5B        		LDA #$5B		; 91 hull points
001BBCr 2  9D rr rr     		STA NMEHP,X
001BBFr 2  AC rr rr     		LDY MISSION
001BC2r 2  D0 03        		BNE @real		; real mission?
001BC4r 2  1E rr rr     		ASL	NMEHP,X		; training -- double thick hull
001BC7r 2  4C rr rr     @real:	JMP @fini
001BCAr 2               @s2:
001BCAr 2  C9 02        		CMP #$02
001BCCr 2  D0 08        		BNE @s3
001BCEr 2  A9 6A        		LDA #$6A		; 106 hull points
001BD0r 2  9D rr rr     		STA NMEHP,X
001BD3r 2  4C rr rr     		JMP @fini
001BD6r 2               @s3:
001BD6r 2  C9 03        		CMP #$03
001BD8r 2  D0 08        		BNE @s4
001BDAr 2  A9 79        		LDA #$79		; 121 hull points
001BDCr 2  9D rr rr     		STA NMEHP,X
001BDFr 2  4C rr rr     		JMP @fini
001BE2r 2               @s4:
001BE2r 2  A9 10        		LDA #$10
001BE4r 2  9D rr rr     		STA SPRITEH+8,X
001BE7r 2  A9 8F        		LDA #%10001111
001BE9r 2  9D rr rr     		STA SPRITEDEF+8,X
001BECr 2  A9 rr        		LDA #<CARRIER0
001BEEr 2  9D rr rr     		STA SPRITEIMGL+8,X
001BF1r 2  A9 rr        		LDA #>CARRIER0
001BF3r 2  9D rr rr     		STA SPRITEIMGH+8,X
001BF6r 2  A9 C9        		LDA #$C9		; 201 hull points
001BF8r 2  9D rr rr     		STA NMEHP,X
001BFBr 2               @fini:
001BFBr 2  A9 01        		LDA #$01		; start off as WHITE
001BFDr 2  9D rr rr     		STA SPRITECOL+8,X
001C00r 2  EE rr rr     		INC OBJECTIVE
001C03r 2  A9 0A        		LDA #$0A		; black with red
001C05r 2  8D 0F 90     		STA VIC+$0F		; screen and border
001C08r 2  60           		RTS
001C09r 2               
001C09r 2               ;*********************************************************************
001C09r 2               ; Thargoid SCOUT animation
001C09r 2               ; pass sssNUM with SPRITE #
001C09r 2               ;
001C09r 2               SCOUT:
001C09r 2  A6 90        		LDX sssNUM
001C0Br 2  BD rr rr     		LDA SPRITEX,X
001C0Er 2  1D rr rr     		ORA SPRITEY,X
001C11r 2  29 01        		AND #$01
001C13r 2  D0 29        		BNE @fini
001C15r 2  BD rr rr     		LDA SPRITEIMGL,X
001C18r 2  18           		CLC
001C19r 2  69 08        		ADC #$08
001C1Br 2  90 03        		BCC @nocc
001C1Dr 2  FE rr rr     		INC SPRITEIMGH,X
001C20r 2  9D rr rr     @nocc:	STA SPRITEIMGL,X
001C23r 2  C9 rr        		CMP #<CRUISER0
001C25r 2  D0 0A        		BNE @anim
001C27r 2  A9 rr        		LDA #<SCOUT0
001C29r 2  9D rr rr     		STA SPRITEIMGL,X
001C2Cr 2  A9 rr        		LDA #>SCOUT0
001C2Er 2  9D rr rr     		STA SPRITEIMGH,X
001C31r 2  BD rr rr     @anim:	LDA SPRITEIMGH,X
001C34r 2  A8           		TAY
001C35r 2  BD rr rr     		LDA SPRITEIMGL,X
001C38r 2  AA           		TAX
001C39r 2  A9 05        		LDA #$05		; GREEN
001C3Br 2  20 rr rr     		JSR SSSANIM
001C3Er 2  60           @fini:	RTS
001C3Fr 2               
001C3Fr 2               ;*********************************************************************
001C3Fr 2               ; Thargoid CRUISER move
001C3Fr 2               ; pass sssNUM with SPRITE #
001C3Fr 2               ;
001C3Fr 2               CRUISER:
001C3Fr 2  98           		TYA
001C40r 2  4A           		LSR				; 8-directions
001C41r 2  AA           		TAX
001C42r 2  A9 rr        		LDA #<CRUISER0
001C44r 2  A0 rr        		LDY #>CRUISER0
001C46r 2  E0 00        		CPX #$00
001C48r 2  F0 09        		BEQ @anim
001C4Ar 2  18           @loop:	CLC
001C4Br 2  69 08        		ADC #$08
001C4Dr 2  90 01        		BCC @nocc
001C4Fr 2  C8           		INY
001C50r 2  CA           @nocc:	DEX
001C51r 2  D0 F7        		BNE @loop
001C53r 2  AA           @anim:	TAX
001C54r 2  A9 03        		LDA #$03		; CYAN
001C56r 2  20 rr rr     		JSR SSSANIM
001C59r 2  60           		RTS
001C5Ar 2               
001C5Ar 2               ;*********************************************************************
001C5Ar 2               ; Thargoid DESTROYER move
001C5Ar 2               ; pass sssNUM with SPRITE #
001C5Ar 2               ;
001C5Ar 2               DESTROYER:
001C5Ar 2  98           		TYA
001C5Br 2  4A           		LSR				; 8-directions
001C5Cr 2  AA           		TAX
001C5Dr 2  A9 rr        		LDA #<DESTROYER0
001C5Fr 2  A0 rr        		LDY #>DESTROYER0
001C61r 2  E0 00        		CPX #$00
001C63r 2  F0 09        		BEQ @anim
001C65r 2  18           @loop:	CLC
001C66r 2  69 08        		ADC #$08
001C68r 2  90 01        		BCC @nocc
001C6Ar 2  C8           		INY
001C6Br 2  CA           @nocc:	DEX
001C6Cr 2  D0 F7        		BNE @loop
001C6Er 2  AA           @anim:	TAX
001C6Fr 2  A9 07        		LDA #$07		; YELLOW
001C71r 2  20 rr rr     		JSR SSSANIM
001C74r 2  60           		RTS
001C75r 2               
001C75r 2               ;*********************************************************************
001C75r 2               ; Thargoid CARRIER move
001C75r 2               ; pass sssNUM with SPRITE #
001C75r 2               ;
001C75r 2               CARRIER:
001C75r 2  A6 90        		LDX sssNUM
001C77r 2  BD rr rr     		LDA SPRITEX,X
001C7Ar 2  1D rr rr     		ORA SPRITEY,X
001C7Dr 2  29 07        		AND #$07
001C7Fr 2  D0 37        		BNE @fini
001C81r 2  BD rr rr     		LDA SPRITEIMGL,X
001C84r 2  18           		CLC
001C85r 2  69 20        		ADC #$20
001C87r 2  90 03        		BCC @nocc
001C89r 2  FE rr rr     		INC SPRITEIMGH,X
001C8Cr 2  9D rr rr     @nocc:	STA SPRITEIMGL,X
001C8Fr 2  C9 rr        		CMP #<FURY0
001C91r 2  D0 0A        		BNE @anim
001C93r 2  A9 rr        		LDA #<CARRIER0
001C95r 2  9D rr rr     		STA SPRITEIMGL,X
001C98r 2  A9 rr        		LDA #>CARRIER0
001C9Ar 2  9D rr rr     		STA SPRITEIMGH,X
001C9Dr 2  BD rr rr     @anim:	LDA SPRITEIMGH,X
001CA0r 2  A8           		TAY
001CA1r 2  BD rr rr     		LDA SPRITEIMGL,X
001CA4r 2  AA           		TAX
001CA5r 2  AD rr rr     		LDA NMEPLAN+3
001CA8r 2  D0 09        		BNE @w
001CAAr 2  AD rr rr     		LDA FURYHP
001CADr 2  F0 04        		BEQ @w
001CAFr 2  A9 02        		LDA #$02		; RED
001CB1r 2  D0 02        		BNE @x
001CB3r 2  A9 01        @w:		LDA #$01		; WHITE
001CB5r 2  20 rr rr     @x:		JSR SSSANIM
001CB8r 2  60           @fini:	RTS
001CB9r 2               
001CB9r 2               ;*********************************************************************
001CB9r 2               ; Seed the random number generator
001CB9r 2               ; NOTE: floating point work here will corrupt DIRTYLINE2 in FAC#1
001CB9r 2               ;
001CB9r 2               RANDOM = $033C
001CB9r 2               RSEED = $B9
001CB9r 2               RANDOMIZE:
001CB9r 2  A9 00        		LDA #$00
001CBBr 2  85 B9        		STA RSEED
001CBDr 2  AD 24 91     		LDA $9124
001CC0r 2  AC 25 91     		LDY $9125
001CC3r 2  20 91 D3     		JSR $D391		; givayf: Convert Integer in (AC/YR) to Flpt
001CC6r 2  A2 8B        		LDX #$8B
001CC8r 2  A0 00        		LDY #$00
001CCAr 2  20 D7 DB     		JSR $DBD7		; mov2f: Store FAC#1 in Memory
001CCDr 2  60           		RTS
001CCEr 2               
001CCEr 2               ;*********************************************************************
001CCEr 2               ; Retrieve a random int
001CCEr 2               ; Pass A with a CEILING value, i.e., 1 - 100
001CCEr 2               ; returns A (0 thru CEILING-1)
001CCEr 2               ;
001CCEr 2               RND:
001CCEr 2  85 BA        		STA $BA
001CD0r 2  20 rr rr     @retry:	JSR RNDNEXT
001CD3r 2  C5 BA        		CMP $BA
001CD5r 2  B0 F9        		BCS @retry
001CD7r 2  60           		RTS
001CD8r 2               
001CD8r 2               ;*********************************************************************
001CD8r 2               ; Retrieve next random int
001CD8r 2               ; returns A (0-99)
001CD8r 2               ;
001CD8r 2               RNDNEXT:
001CD8r 2  E6 B9        		INC RSEED
001CDAr 2  A6 B9        		LDX RSEED
001CDCr 2  E0 C0        		CPX #$C0		; 192 buffered values
001CDEr 2  90 04        		BCC @cont
001CE0r 2  A2 00        		LDX #$00
001CE2r 2  86 B9        		STX RSEED
001CE4r 2  BD 3C 03     @cont:	LDA RANDOM,X
001CE7r 2  60           		RTS
001CE8r 2               
001CE8r 2               ;*********************************************************************
001CE8r 2               ; Generate a random entry point into the play field
001CE8r 2               ; returns X,Y
001CE8r 2               ;
001CE8r 2               RNDXY:
001CE8r 2  A0 01        		LDY #$01
001CEAr 2  20 rr rr     		JSR RNDNEXT
001CEDr 2  29 03        		AND #$03
001CEFr 2  8D 0C 03     		STA ACOPY
001CF2r 2  C9 02        		CMP #$02
001CF4r 2  B0 02        		BCS @top
001CF6r 2  A0 08        		LDY #$08
001CF8r 2  84 01        @top:	STY $01
001CFAr 2  20 rr rr     		JSR RNDNEXT
001CFDr 2  29 07        		AND #$07
001CFFr 2  18           		CLC
001D00r 2  65 01        		ADC $01
001D02r 2  A8           		TAY
001D03r 2               		;
001D03r 2  A2 00        		LDX #$00
001D05r 2  AD 0C 03     		LDA ACOPY
001D08r 2  29 01        		AND #$01
001D0Ar 2  D0 02        		BNE @left
001D0Cr 2  A2 0D        		LDX #$0D
001D0Er 2  86 01        @left:	STX $01
001D10r 2  20 rr rr     		JSR RNDNEXT
001D13r 2  29 07        		AND #$07
001D15r 2  18           		CLC
001D16r 2  65 01        		ADC $01
001D18r 2  AA           		TAX
001D19r 2  60           		RTS
001D1Ar 2               
001D1Ar 2               ;*********************************************************************
001D1Ar 2               ; Traveling somewhere?  Enforce the rules of our field of play.
001D1Ar 2               ; pass/return X as direction #0-15
001D1Ar 2               ; pass Y as ship #0 (FURY)
001D1Ar 2               ;
001D1Ar 2               TRAVELING:
001D1Ar 2  8E 0D 03     		STX XCOPY
001D1Dr 2  8C 0E 03     		STY YCOPY
001D20r 2  98           		TYA
001D21r 2  AE rr rr     		LDX SPRITEX+12	; save Fury's position
001D24r 2  AC rr rr     		LDY SPRITEY+12
001D27r 2  8D 9A 02     		STA R0			; save ship type
001D2Ar 2  8E 9B 02     		STX R1			; save X coord
001D2Dr 2  8C 9C 02     		STY R2			; save Y coord
001D30r 2               		;
001D30r 2  AE 0D 03     @ddx2:	LDX XCOPY
001D33r 2  AC 0E 03     		LDY YCOPY
001D36r 2  BD rr rr     		LDA DDX2,X
001D39r 2  F0 71        		BEQ @ddy2
001D3Br 2  C9 01        		CMP #$01
001D3Dr 2  F0 07        		BEQ @ddx
001D3Fr 2  AD rr rr     		LDA THRUST
001D42r 2  29 01        		AND #$01
001D44r 2  F0 66        		BEQ @ddy2
001D46r 2  BD rr rr     @ddx:	LDA DDX,X
001D49r 2  18           		CLC
001D4Ar 2  6D 9B 02     		ADC R1
001D4Dr 2  8D 9B 02     		STA R1
001D50r 2  C9 10        		CMP #$10
001D52r 2  90 13        		BCC @tooleft
001D54r 2  C9 75        		CMP #$75		; right edge of objective?
001D56r 2  D0 19        		BNE @okleft
001D58r 2  AD 9C 02     		LDA R2
001D5Br 2  C9 52        		CMP #$52
001D5Dr 2  90 12        		BCC @okleft
001D5Fr 2  C9 7F        		CMP #$7F
001D61r 2  B0 0E        		BCS @okleft
001D63r 2  A9 76        		LDA #$76
001D65r 2  D0 02        		BNE @tooleft2
001D67r 2               @tooleft:
001D67r 2  A9 10        		LDA #$10
001D69r 2               @tooleft2:
001D69r 2  8D 9B 02     		STA R1
001D6Cr 2  AD rr rr     		LDA SPEED
001D6Fr 2  D0 27        		BNE @bouncex
001D71r 2               @okleft:
001D71r 2  AD 9B 02     		LDA R1
001D74r 2  18           		CLC
001D75r 2  69 07        		ADC #$07
001D77r 2  CD 98 02     		CMP SSSCLIPX
001D7Ar 2  B0 13        		BCS @tooright
001D7Cr 2  C9 54        		CMP #$54		; left edge of objective?
001D7Er 2  D0 2C        		BNE @okright
001D80r 2  AD 9C 02     		LDA R2
001D83r 2  C9 52        		CMP #$52
001D85r 2  90 25        		BCC @okright
001D87r 2  C9 7F        		CMP #$7F
001D89r 2  B0 21        		BCS @okright
001D8Br 2  A9 53        		LDA #$53
001D8Dr 2  D0 03        		BNE @tooright2
001D8Fr 2               @tooright:
001D8Fr 2  AD 98 02     		LDA SSSCLIPX
001D92r 2               @tooright2:
001D92r 2  38           		SEC
001D93r 2  E9 07        		SBC #$07
001D95r 2  8D 9B 02     		STA R1
001D98r 2               @bouncex:
001D98r 2  AD rr rr     		LDA SPEED
001D9Br 2  C9 03        		CMP #$03
001D9Dr 2  90 06        		BCC @boingx
001D9Fr 2  8D rr rr     		STA SPEED
001DA2r 2  CE rr rr     		DEC SPEED
001DA5r 2               @boingx:
001DA5r 2  BD rr rr     		LDA VBOUNCE,X
001DA8r 2  8D 0D 03     		STA XCOPY
001DABr 2  AA           		TAX
001DACr 2               @okright:
001DACr 2               		;
001DACr 2  BD rr rr     @ddy2:	LDA DDY2,X
001DAFr 2  F0 70        		BEQ @okbottom
001DB1r 2  C9 01        		CMP #$01
001DB3r 2  F0 07        		BEQ @ddy
001DB5r 2  AD rr rr     		LDA THRUST
001DB8r 2  29 01        		AND #$01
001DBAr 2  F0 65        		BEQ @okbottom
001DBCr 2  BD rr rr     @ddy:	LDA DDY,X
001DBFr 2  18           		CLC
001DC0r 2  6D 9C 02     		ADC R2
001DC3r 2  8D 9C 02     		STA R2
001DC6r 2  C9 10        		CMP #$10
001DC8r 2  90 13        		BCC @toohi
001DCAr 2  C9 7E        		CMP #$7E		; bottom edge of objective?
001DCCr 2  D0 19        		BNE @oktop
001DCEr 2  AD 9B 02     		LDA R1
001DD1r 2  C9 4D        		CMP #$54-7
001DD3r 2  90 12        		BCC @oktop
001DD5r 2  C9 76        		CMP #$76
001DD7r 2  B0 0E        		BCS @oktop
001DD9r 2  A9 7F        		LDA #$7F
001DDBr 2  D0 02        		BNE @toohi2
001DDDr 2               @toohi:
001DDDr 2  A9 10        		LDA #$10
001DDFr 2               @toohi2:
001DDFr 2  8D 9C 02     		STA R2
001DE2r 2  AD rr rr     		LDA SPEED
001DE5r 2  D0 27        		BNE @bouncey
001DE7r 2               @oktop:
001DE7r 2  AD 9C 02     		LDA R2
001DEAr 2  18           		CLC
001DEBr 2  69 10        		ADC #$10
001DEDr 2  CD 99 02     		CMP SSSCLIPY
001DF0r 2  B0 13        		BCS @toolow
001DF2r 2  C9 63        		CMP #$63		; top edge of objective?
001DF4r 2  D0 2B        		BNE @okbottom
001DF6r 2  AD 9B 02     		LDA R1
001DF9r 2  C9 4D        		CMP #$54-7
001DFBr 2  90 24        		BCC @okbottom
001DFDr 2  C9 76        		CMP #$76
001DFFr 2  B0 20        		BCS @okbottom
001E01r 2  A9 62        		LDA #$62
001E03r 2  D0 03        		BNE @toolow2
001E05r 2               @toolow:
001E05r 2  AD 99 02     		LDA SSSCLIPY
001E08r 2               @toolow2:
001E08r 2  38           		SEC
001E09r 2  E9 10        		SBC #$10
001E0Br 2  8D 9C 02     		STA R2
001E0Er 2               @bouncey:
001E0Er 2  AD rr rr     		LDA SPEED
001E11r 2  C9 03        		CMP #$03
001E13r 2  90 06        		BCC @boingy
001E15r 2  8D rr rr     		STA SPEED
001E18r 2  CE rr rr     		DEC SPEED
001E1Br 2               @boingy:
001E1Br 2  BD rr rr     		LDA HBOUNCE,X
001E1Er 2  8D 0D 03     		STA XCOPY
001E21r 2               @okbottom:
001E21r 2  AE 0D 03     		LDX XCOPY
001E24r 2  60           		RTS
001E25r 2               		;
001E25r 2               		; essentially the same playfield for Thargoids, but are not limited to
001E25r 2               		; VIC's borders and should not go crashing into the shields either.
001E25r 2               		; pass Y as ship #0-3 (Thargoids)
001E25r 2               TRAVELING2:
001E25r 2  8E 0D 03     		STX XCOPY
001E28r 2  8C 0E 03     		STY YCOPY
001E2Br 2  B9 rr rr     		LDA NME,Y
001E2Er 2  48           		PHA				;++
001E2Fr 2  B9 rr rr     		LDA SPRITEX+8,Y	; save enemy ship's position
001E32r 2  AA           		TAX
001E33r 2  B9 rr rr     		LDA SPRITEY+8,Y
001E36r 2  A8           		TAY
001E37r 2  68           		PLA				;--
001E38r 2  8D 9A 02     		STA R0			; save ship type
001E3Br 2  8E 9B 02     		STX R1			; save X coord
001E3Er 2  8C 9C 02     		STY R2			; save Y coord
001E41r 2               		;
001E41r 2  AE 0D 03     @ddx2:	LDX XCOPY
001E44r 2  AC 0E 03     		LDY YCOPY
001E47r 2  BD rr rr     		LDA DDX2,X
001E4Ar 2  F0 68        		BEQ @ddy2
001E4Cr 2  BD rr rr     @ddx:	LDA DDX,X
001E4Fr 2  18           		CLC
001E50r 2  6D 9B 02     		ADC R1
001E53r 2  8D 9B 02     		STA R1
001E56r 2  C9 08        		CMP #$08
001E58r 2  90 13        		BCC @tooleft	; left edge of outer space?
001E5Ar 2  C9 6F        		CMP #$6F		; right edge of objective?
001E5Cr 2  D0 19        		BNE @okleft
001E5Er 2  AD 9C 02     		LDA R2
001E61r 2  C9 58        		CMP #$58
001E63r 2  90 12        		BCC @okleft
001E65r 2  C9 80        		CMP #$80
001E67r 2  B0 0E        		BCS @okleft
001E69r 2  A9 70        		LDA #$70
001E6Br 2  D0 02        		BNE @tooleft2
001E6Dr 2               @tooleft:
001E6Dr 2  A9 08        		LDA #$08
001E6Fr 2               @tooleft2:
001E6Fr 2  8D 9B 02     		STA R1
001E72r 2  B9 rr rr     		LDA SPEED,Y
001E75r 2  D0 27        		BNE @bouncex
001E77r 2               @okleft:
001E77r 2  AD 9B 02     		LDA R1
001E7Ar 2  38           		SEC
001E7Br 2  E9 08        		SBC #$08
001E7Dr 2  CD 98 02     		CMP SSSCLIPX
001E80r 2  B0 11        		BCS @tooright	; right edge of outer space?
001E82r 2  C9 51        		CMP #$51		; left edge of objective?
001E84r 2  D0 2E        		BNE @okright
001E86r 2  AD 9C 02     		LDA R2
001E89r 2  C9 58        		CMP #$58
001E8Br 2  90 27        		BCC @okright
001E8Dr 2  C9 80        		CMP #$80
001E8Fr 2  B0 23        		BCS @okright
001E91r 2  A9 50        		LDA #$50
001E93r 2               @tooright:
001E93r 2  AD 98 02     		LDA SSSCLIPX
001E96r 2  D0 03        		BNE @skip8
001E98r 2               @tooright2:
001E98r 2  38           		SEC
001E99r 2  E9 08        		SBC #$08
001E9Br 2               @skip8:
001E9Br 2  8D 9B 02     		STA R1
001E9Er 2               @bouncex:
001E9Er 2  AE 0D 03     		LDX XCOPY
001EA1r 2  BD rr rr     		LDA VBOUNCE,X
001EA4r 2  29 0C        		AND #$0C
001EA6r 2  8D 0D 03     		STA XCOPY
001EA9r 2  AA           		TAX
001EAAr 2  A9 02        		LDA #$02		; just for 2-moves
001EACr 2  99 rr rr     		STA NMELEN,Y
001EAFr 2  A9 00        		LDA #$00		; and stop turning
001EB1r 2  99 rr rr     		STA NMETURN,Y
001EB4r 2               @okright:
001EB4r 2               		;
001EB4r 2  BD rr rr     @ddy2:	LDA DDY2,X
001EB7r 2  F0 67        		BEQ @okbottom
001EB9r 2  BD rr rr     @ddy:	LDA DDY,X
001EBCr 2  18           		CLC
001EBDr 2  6D 9C 02     		ADC R2
001EC0r 2  8D 9C 02     		STA R2
001EC3r 2  C9 08        		CMP #$08
001EC5r 2  90 13        		BCC @toohi		; top edge of outer space?
001EC7r 2  C9 7F        		CMP #$7F		; bottom edge of objective?
001EC9r 2  D0 19        		BNE @oktop
001ECBr 2  AD 9B 02     		LDA R1
001ECEr 2  C9 50        		CMP #$50
001ED0r 2  90 12        		BCC @oktop
001ED2r 2  C9 71        		CMP #$71
001ED4r 2  B0 0E        		BCS @oktop
001ED6r 2  A9 80        		LDA #$80
001ED8r 2  D0 02        		BNE @toohi2
001EDAr 2               @toohi:
001EDAr 2  A9 08        		LDA #$08
001EDCr 2               @toohi2:
001EDCr 2  8D 9C 02     		STA R2
001EDFr 2  B9 rr rr     		LDA SPEED,Y
001EE2r 2  D0 27        		BNE @bouncey
001EE4r 2               @oktop:
001EE4r 2  AD 9C 02     		LDA R2
001EE7r 2  18           		CLC
001EE8r 2  69 08        		ADC #$08
001EEAr 2  CD 99 02     		CMP SSSCLIPY
001EEDr 2  B0 13        		BCS @toolow		; bottom edge of outer space?
001EEFr 2  C9 51        		CMP #$51		; top edge of objective?
001EF1r 2  D0 2D        		BNE @okbottom
001EF3r 2  AD 9B 02     		LDA R1
001EF6r 2  C9 50        		CMP #$50
001EF8r 2  90 26        		BCC @okbottom
001EFAr 2  C9 71        		CMP #$71
001EFCr 2  B0 22        		BCS @okbottom
001EFEr 2  A9 58        		LDA #$58
001F00r 2  D0 03        		BNE @toolow2
001F02r 2               @toolow:
001F02r 2  AD 99 02     		LDA SSSCLIPY
001F05r 2               @toolow2:
001F05r 2  38           		SEC
001F06r 2  E9 08        		SBC #$08
001F08r 2  8D 9C 02     		STA R2
001F0Br 2               @bouncey:
001F0Br 2  AE 0D 03     		LDX XCOPY
001F0Er 2  BD rr rr     		LDA HBOUNCE,X
001F11r 2  29 0C        		AND #$0C
001F13r 2  8D 0D 03     		STA XCOPY
001F16r 2  A9 01        		LDA #$01		; just for 2-moves
001F18r 2  99 rr rr     		STA NMELEN,Y
001F1Br 2  A9 00        		LDA #$00		; and stop turning
001F1Dr 2  99 rr rr     		STA NMETURN,Y
001F20r 2               @okbottom:
001F20r 2  AE 0D 03     		LDX XCOPY
001F23r 2  60           		RTS
001F24r 2               
001F24r 2               ;*********************************************************************
001F24r 2               ; Planning something?  Give our Thargoid "friends" some personality
001F24r 2               ; pass LOOPX as ship #0-3
001F24r 2               ;
001F24r 2               ; NMEPLAN
001F24r 2               ; bit 0: cruisin'
001F24r 2               ; bit 1: turning left
001F24r 2               ; bit 2: turning right
001F24r 2               ; bit 3: mining
001F24r 2               ; bit 4: firing
001F24r 2               ; bit 5: center attack
001F24r 2               ; bit 6: spread attack
001F24r 2               ; bit 7: deadly attack
001F24r 2               ;
001F24r 2               ; FIRING
001F24r 2               ; Scouts and Carriers can fire any of the 16-directions at anytime
001F24r 2               ; Cruisers can fire only in the facing direction (+/- 1)
001F24r 2               ; Destroyers can fire only in the facing direction (+/- 1)
001F24r 2               ;
001F24r 2               ; CENTER ATTACK
001F24r 2               ; Thargoid ship becomes stationary, facing center objective, firing at a constant rate
001F24r 2               ; and only in N,S,E,W areas:
001F24r 2               ; Scouts: when HP < 16
001F24r 2               ; Cruisers: when HP < 30
001F24r 2               ; Destroyers: all of the time
001F24r 2               ; Carriers: all of the time
001F24r 2               ;
001F24r 2               ; SPREAD ATTACK
001F24r 2               ; Only Destroyers and Carriers can fire up to three consecutive shots
001F24r 2               ;
001F24r 2               ; DEADLY ATTACK
001F24r 2               ; Only Carriers can launch a Neutron Bomb at the center objective, speed = 1,
001F24r 2               ; and only 8% chance in N,S,E,W areas, before warping out
001F24r 2               ;
001F24r 2               PLANNING:
001F24r 2  AD rr rr     		LDA FURYHP
001F27r 2  D0 0C        		BNE @cont
001F29r 2  A9 01        		LDA #$01		; fury's dead
001F2Br 2  AC rr rr     		LDY OMEGAHP
001F2Er 2  D0 02        		BNE @kill
001F30r 2  A9 FF        		LDA #$FF		; objective destroyed
001F32r 2  9D rr rr     @kill:	STA NMEHP,X		; make this ship aggressive
001F35r 2  BD rr rr     @cont:	LDA NMESPEED,X
001F38r 2  D0 0A        		BNE @moving
001F3Ar 2  A9 02        		LDA #$02
001F3Cr 2  9D rr rr     		STA NMESPEED,X
001F3Fr 2  A9 01        		LDA #%00000001	; resume flight
001F41r 2  4C rr rr     		JMP PLANNED
001F44r 2               @moving:
001F44r 2  AD rr rr     		LDA MISSION
001F47r 2  D0 0A        		BNE @real
001F49r 2  A9 03        		LDA #$03
001F4Br 2  9D rr rr     		STA NMESPEED,X
001F4Er 2  A9 01        		LDA #%00000001	; remote-controlled android
001F50r 2  4C rr rr     		JMP PLANNED
001F53r 2  BD rr rr     @real:	LDA NME,X
001F56r 2  C9 01        		CMP #$01		; SCOUT ($5B)
001F58r 2  D0 24        		BNE @s2
001F5Ar 2  A9 04        		LDA #$04
001F5Cr 2  9D rr rr     		STA NMESPEED,X
001F5Fr 2  BD rr rr     		LDA NMEHP,X
001F62r 2  C9 5B        		CMP #$5B
001F64r 2  90 05        		BCC @s1o1
001F66r 2  A9 07        		LDA #%00000111
001F68r 2  4C rr rr     		JMP PLANNED
001F6Br 2  C9 10        @s1o1:	CMP #$10
001F6Dr 2  90 05        		BCC @s1o2
001F6Fr 2  A9 1F        		LDA #%00011111	; you hit me?
001F71r 2  4C rr rr     		JMP PLANNED
001F74r 2  A9 06        @s1o2:	LDA #$06
001F76r 2  9D rr rr     		STA NMESPEED,X
001F79r 2  A9 3F        		LDA #%00111111
001F7Br 2  4C rr rr     		JMP PLANNED
001F7Er 2  C9 02        @s2:	CMP #$02		; CRUISER ($6A)
001F80r 2  D0 24        		BNE @s3
001F82r 2  A9 06        		LDA #$06
001F84r 2  9D rr rr     		STA NMESPEED,X
001F87r 2  BD rr rr     		LDA NMEHP,X
001F8Ar 2  C9 6A        		CMP #$6A
001F8Cr 2  90 05        		BCC @s2o1
001F8Er 2  A9 0F        		LDA #%00001111
001F90r 2  4C rr rr     		JMP PLANNED
001F93r 2  C9 1E        @s2o1:	CMP #$1E
001F95r 2  90 05        		BCC @s2o2
001F97r 2  A9 1F        		LDA #%00011111
001F99r 2  4C rr rr     		JMP PLANNED
001F9Cr 2  A9 08        @s2o2:	LDA #$08
001F9Er 2  9D rr rr     		STA NMESPEED,X
001FA1r 2  A9 3F        		LDA #%00111111
001FA3r 2  4C rr rr     		JMP PLANNED
001FA6r 2  C9 03        @s3:	CMP #$03		; DESTROYER ($79)
001FA8r 2  D0 1B        		BNE @s4
001FAAr 2  A9 08        		LDA #$08
001FACr 2  9D rr rr     		STA NMESPEED,X
001FAFr 2  BD rr rr     		LDA NMEHP,X
001FB2r 2  C9 79        		CMP #$79
001FB4r 2  90 05        		BCC @s3o1
001FB6r 2  A9 3F        		LDA #%00111111
001FB8r 2  4C rr rr     		JMP PLANNED
001FBBr 2  A9 0A        @s3o1:	LDA #$0A
001FBDr 2  9D rr rr     		STA NMESPEED,X
001FC0r 2  A9 7F        		LDA #%01111111
001FC2r 2  4C rr rr     		JMP PLANNED
001FC5r 2               @s4:					; CARRIER ($C8)
001FC5r 2  A9 03        		LDA #$03
001FC7r 2  AC rr rr     		LDY FURYHP
001FCAr 2  D0 01        		BNE @s4o1
001FCCr 2  0A           		ASL				; x2
001FCDr 2  9D rr rr     @s4o1:	STA NMESPEED,X
001FD0r 2  BD rr rr     		LDA NMEHP,X
001FD3r 2  A9 F1        		LDA #%11110001
001FD5r 2               ;
001FD5r 2               PLANNED:
001FD5r 2  9D rr rr     		STA NMEPLAN,X
001FD8r 2  BD rr rr     		LDA NMEHP,X
001FDBr 2  C9 FF        		CMP #$FF
001FDDr 2  90 05        		BCC @game
001FDFr 2               		;ASL NMESPEED,X
001FDFr 2  A9 07        		LDA #%00000111	; attract mode
001FE1r 2  9D rr rr     		STA NMEPLAN,X
001FE4r 2  20 rr rr     @game:	JSR @cruisin	; always determine what's the next move
001FE7r 2  A0 08        		LDY #$08
001FE9r 2  8C 9B 02     		STY R1
001FECr 2               @nextplan:
001FECr 2  CE 9B 02     		DEC R1
001FEFr 2  F0 77        		BEQ @xcruz		; nothing else, just move
001FF1r 2  AE rr rr     		LDX LOOPX
001FF4r 2  BD rr rr     		LDA NMEPLAN,X
001FF7r 2  AC 9B 02     		LDY R1
001FFAr 2  39 70 82     		AND MASK,Y
001FFDr 2  F0 ED        		BEQ @nextplan
001FFFr 2  C0 07        @y7:	CPY #$07
002001r 2  D0 03        		BNE @y6
002003r 2  4C rr rr     		JMP @deadly
002006r 2  C0 06        @y6:	CPY #$06
002008r 2  D0 03        		BNE @y5
00200Ar 2  4C rr rr     		JMP @spread
00200Dr 2  C0 05        @y5:	CPY #$05
00200Fr 2  D0 03        		BNE @y4
002011r 2  4C rr rr     		JMP @center
002014r 2  C0 04        @y4:	CPY #$04
002016r 2  D0 03        		BNE @y3
002018r 2  4C rr rr     		JMP @firing
00201Br 2  C0 03        @y3:	CPY #$03
00201Dr 2  D0 03        		BNE @y2
00201Fr 2  4C rr rr     		JMP @mining
002022r 2  C0 02        @y2:	CPY #$02
002024r 2  D0 03        		BNE @y1
002026r 2  4C rr rr     		JMP @rturn
002029r 2  4C rr rr     @y1:	JMP @lturn
00202Cr 2               		;
00202Cr 2               @cruisin:
00202Cr 2  BD rr rr     		LDA SPRITEY+8,X
00202Fr 2  A8           		TAY
002030r 2  BD rr rr     		LDA SPRITEX+8,X
002033r 2  AA           		TAX
002034r 2  20 rr rr     		JSR @area
002037r 2  AE rr rr     		LDX LOOPX
00203Ar 2  BD rr rr     		LDA NMEDIR,X
00203Dr 2  4A           		LSR
00203Er 2  4A           		LSR
00203Fr 2  18           		CLC
002040r 2  6D 9A 02     		ADC R0
002043r 2  A8           		TAY
002044r 2               		;
002044r 2  B9 rr rr     		LDA AREADIR,Y	; fetch new direction
002047r 2  DD rr rr     		CMP NMEDIR,X	; same direction?
00204Ar 2  D0 1D        		BNE @maketurn
00204Cr 2  20 rr rr     		JSR RNDNEXT
00204Fr 2  AE rr rr     		LDX LOOPX
002052r 2  29 07        		AND #$07
002054r 2  9D rr rr     		STA NMELEN,X
002057r 2  18           		CLC
002058r 2  7D rr rr     		ADC NME,X
00205Br 2  D0 02        		BNE @newlen
00205Dr 2               @tooslow:
00205Dr 2  A9 01        		LDA #$01
00205Fr 2               @newlen:
00205Fr 2  9D rr rr     		STA NMELEN,X
002062r 2  B9 rr rr     		LDA AREADIR,Y	; fetch new direction
002065r 2  9D rr rr     		STA NMEDIR,X
002068r 2  60           @xcruz:	RTS
002069r 2               @maketurn:
002069r 2  BD rr rr     		LDA NMESPEED,X
00206Cr 2  C9 03        		CMP #$03
00206Er 2  90 ED        		BCC @tooslow
002070r 2  BD rr rr     		LDA NMEDIR,X
002073r 2  D0 09        		BNE @noup1		; was old direction UP?
002075r 2  B9 rr rr     		LDA AREADIR,Y
002078r 2  C9 0C        		CMP #$0C		; is new direction LEFT?
00207Ar 2  F0 15        		BEQ @mkleft		; yes, go counter-clockwise
00207Cr 2  D0 2F        		BNE @mkright	; no, go clockwise
00207Er 2  B9 rr rr     @noup1:	LDA AREADIR,Y
002081r 2  D0 09        		BNE @noup2		; is new direction UP?
002083r 2  BD rr rr     		LDA NMEDIR,X
002086r 2  C9 0C        		CMP #$0C		; was old direction LEFT?
002088r 2  F0 23        		BEQ @mkright	; yes, go clockwise
00208Ar 2  D0 05        		BNE @mkleft		; no, go counter-clockwise
00208Cr 2  DD rr rr     @noup2:	CMP NMEDIR,X	; is new direction greater than old?
00208Fr 2  B0 1C        		BCS @mkright	; yes, go clockwise
002091r 2               @mkleft:				; else, go counter-clockwise
002091r 2  AE rr rr     		LDX LOOPX
002094r 2  DE rr rr     		DEC NMEDIR,X
002097r 2  DE rr rr     		DEC NMEDIR,X
00209Ar 2  BD rr rr     		LDA NMEDIR,X
00209Dr 2  29 0F        		AND #$0F
00209Fr 2  9D rr rr     		STA NMEDIR,X
0020A2r 2  A9 01        		LDA #$01		; two moves to make the turn
0020A4r 2  9D rr rr     		STA NMELEN,X
0020A7r 2  A9 FE        		LDA #$FE
0020A9r 2  9D rr rr     		STA NMETURN,X
0020ACr 2  60           		RTS
0020ADr 2               @mkright:
0020ADr 2  AE rr rr     		LDX LOOPX
0020B0r 2  FE rr rr     		INC NMEDIR,X
0020B3r 2  FE rr rr     		INC NMEDIR,X
0020B6r 2  BD rr rr     		LDA NMEDIR,X
0020B9r 2  29 0F        		AND #$0F
0020BBr 2  9D rr rr     		STA NMEDIR,X
0020BEr 2  A9 01        		LDA #$01		; two moves to complete a turn
0020C0r 2  9D rr rr     		STA NMELEN,X
0020C3r 2  A9 02        		LDA #$02
0020C5r 2  9D rr rr     		STA NMETURN,X
0020C8r 2  60           		RTS
0020C9r 2               		;
0020C9r 2               @lturn:
0020C9r 2  AD 9A 02     		LDA R0
0020CCr 2  C9 04        		CMP #$04		; 1
0020CEr 2  F0 0F        		BEQ @ltcont
0020D0r 2  C9 0C        		CMP #$0C		; 3
0020D2r 2  F0 0B        		BEQ @ltcont
0020D4r 2  C9 14        		CMP #$14		; 5
0020D6r 2  F0 07        		BEQ @ltcont
0020D8r 2  C9 1C        		CMP #$1C		; 7
0020DAr 2  F0 03        		BEQ @ltcont
0020DCr 2  4C rr rr     		JMP @nextplan
0020DFr 2               @ltcont:
0020DFr 2  BD rr rr     		LDA NMEDIR,X
0020E2r 2  C9 00        		CMP #$00		; up
0020E4r 2  F0 0F        		BEQ @ltx1
0020E6r 2  C9 08        		CMP #$08		; down
0020E8r 2  F0 1B        		BEQ @ltx2
0020EAr 2  C9 04        		CMP #$04		; right
0020ECr 2  F0 27        		BEQ @lty1
0020EEr 2  C9 0C        		CMP #$0C		; left
0020F0r 2  F0 33        		BEQ @lty2
0020F2r 2  4C rr rr     @nolt:	JMP @nextplan
0020F5r 2  BD rr rr     @ltx1:	LDA SPRITEX+8,X
0020F8r 2  C9 20        		CMP #$20
0020FAr 2  90 F6        		BCC @nolt
0020FCr 2  C9 50        		CMP #$50
0020FEr 2  90 35        		BCC @ltok
002100r 2  C9 90        		CMP #$90
002102r 2  B0 31        		BCS @ltok
002104r 2  60           		RTS
002105r 2  BD rr rr     @ltx2:	LDA SPRITEX+8,X
002108r 2  C9 30        		CMP #$30
00210Ar 2  90 29        		BCC @ltok
00210Cr 2  C9 78        		CMP #$78
00210Er 2  90 E2        		BCC @nolt
002110r 2  C9 A8        		CMP #$A8
002112r 2  90 21        		BCC @ltok
002114r 2  60           		RTS
002115r 2  BD rr rr     @lty1:	LDA SPRITEY+8,X
002118r 2  C9 20        		CMP #$20
00211Ar 2  90 D6        		BCC @nolt
00211Cr 2  C9 50        		CMP #$50
00211Er 2  90 15        		BCC @ltok
002120r 2  C9 98        		CMP #$98
002122r 2  B0 11        		BCS @ltok
002124r 2  60           		RTS
002125r 2  BD rr rr     @lty2:	LDA SPRITEY+8,X
002128r 2  C9 38        		CMP #$38
00212Ar 2  90 09        		BCC @ltok
00212Cr 2  C9 80        		CMP #$80
00212Er 2  90 C2        		BCC @nolt
002130r 2  C9 A8        		CMP #$A8
002132r 2  90 01        		BCC @ltok
002134r 2  60           		RTS
002135r 2  20 rr rr     @ltok:	JSR RNDNEXT
002138r 2  C9 14        		CMP #$14		; 20%
00213Ar 2  90 01        		BCC @lt2
00213Cr 2  60           		RTS
00213Dr 2  AE rr rr     @lt2:	LDX LOOPX
002140r 2  DE rr rr     		DEC NMEDIR,X
002143r 2  DE rr rr     		DEC NMEDIR,X
002146r 2  BD rr rr     		LDA NMEDIR,X
002149r 2  29 0F        		AND #$0F
00214Br 2  9D rr rr     		STA NMEDIR,X
00214Er 2  A9 03        		LDA #$03		; four moves to complete a turn
002150r 2  9D rr rr     		STA NMELEN,X
002153r 2  A9 FE        		LDA #$FE
002155r 2  9D rr rr     		STA NMETURN,X
002158r 2  60           		RTS
002159r 2               		;
002159r 2               @rturn:
002159r 2  AD 9A 02     		LDA R0
00215Cr 2  C9 04        		CMP #$04		; 1
00215Er 2  F0 0F        		BEQ @rtcont
002160r 2  C9 0C        		CMP #$0C		; 3
002162r 2  F0 0B        		BEQ @rtcont
002164r 2  C9 14        		CMP #$14		; 5
002166r 2  F0 07        		BEQ @rtcont
002168r 2  C9 1C        		CMP #$1C		; 7
00216Ar 2  F0 03        		BEQ @rtcont
00216Cr 2  4C rr rr     		JMP @nextplan
00216Fr 2               @rtcont:
00216Fr 2  BD rr rr     		LDA NMEDIR,X
002172r 2  C9 00        		CMP #$00		; up
002174r 2  F0 0F        		BEQ @rtx1
002176r 2  C9 08        		CMP #$08		; down
002178r 2  F0 1D        		BEQ @rtx2
00217Ar 2  C9 04        		CMP #$04		; right
00217Cr 2  F0 2B        		BEQ @rty1
00217Er 2  C9 0C        		CMP #$0C		; left
002180r 2  F0 39        		BEQ @rty2
002182r 2  4C rr rr     @nort:	JMP @nextplan
002185r 2  BD rr rr     @rtx1:	LDA SPRITEX+8,X
002188r 2  C9 30        		CMP #$30
00218Ar 2  90 41        		BCC @rtok
00218Cr 2  C9 78        		CMP #$78
00218Er 2  90 F2        		BCC @nort
002190r 2  C9 A8        		CMP #$A8
002192r 2  90 39        		BCC @rtok
002194r 2  4C rr rr     		JMP @nextplan
002197r 2  BD rr rr     @rtx2:	LDA SPRITEX+8,X
00219Ar 2  C9 20        		CMP #$20
00219Cr 2  90 E4        		BCC @nort
00219Er 2  C9 50        		CMP #$50
0021A0r 2  90 2B        		BCC @rtok
0021A2r 2  C9 90        		CMP #$90
0021A4r 2  B0 27        		BCS @rtok
0021A6r 2  4C rr rr     		JMP @nextplan
0021A9r 2  BD rr rr     @rty1:	LDA SPRITEY+8,X
0021ACr 2  C9 38        		CMP #$38
0021AEr 2  90 1D        		BCC @rtok
0021B0r 2  C9 80        		CMP #$80
0021B2r 2  90 CE        		BCC @nort
0021B4r 2  C9 A8        		CMP #$A8
0021B6r 2  90 15        		BCC @rtok
0021B8r 2  4C rr rr     		JMP @nextplan
0021BBr 2  BD rr rr     @rty2:	LDA SPRITEY+8,X
0021BEr 2  C9 20        		CMP #$20
0021C0r 2  90 C0        		BCC @nort
0021C2r 2  C9 50        		CMP #$50
0021C4r 2  90 07        		BCC @rtok
0021C6r 2  C9 98        		CMP #$98
0021C8r 2  B0 03        		BCS @rtok
0021CAr 2  4C rr rr     		JMP @nextplan
0021CDr 2  20 rr rr     @rtok:	JSR RNDNEXT
0021D0r 2  C9 14        		CMP #$14		; 20%
0021D2r 2  90 03        		BCC @rt2
0021D4r 2  4C rr rr     		JMP @nextplan
0021D7r 2  AE rr rr     @rt2:	LDX LOOPX
0021DAr 2  FE rr rr     		INC NMEDIR,X
0021DDr 2  FE rr rr     		INC NMEDIR,X
0021E0r 2  BD rr rr     		LDA NMEDIR,X
0021E3r 2  29 0F        		AND #$0F
0021E5r 2  9D rr rr     		STA NMEDIR,X
0021E8r 2  A9 03        		LDA #$03		; four moves to complete a turn
0021EAr 2  9D rr rr     		STA NMELEN,X
0021EDr 2  A9 02        		LDA #$02
0021EFr 2  9D rr rr     		STA NMETURN,X
0021F2r 2  60           		RTS
0021F3r 2               		;
0021F3r 2  4C rr rr     @mxx:	JMP @nextplan
0021F6r 2               @mining:
0021F6r 2  AD rr rr     		LDA MINES
0021F9r 2  C9 10        		CMP #$10
0021FBr 2  B0 F6        		BCS @mxx
0021FDr 2  20 rr rr     		JSR RNDNEXT
002200r 2  C9 5B        		CMP #91			; 10% drop a mine
002202r 2  90 EF        		BCC @mxx
002204r 2  AD 0D 03     		LDA XCOPY
002207r 2  C9 10        		CMP #$10
002209r 2  90 E8        		BCC @mxx
00220Br 2  CD 98 02     		CMP SSSCLIPX
00220Er 2  B0 E3        		BCS @mxx
002210r 2  38           		SEC
002211r 2  E9 10        		SBC #$10
002213r 2  4A           		LSR
002214r 2  4A           		LSR
002215r 2  4A           		LSR
002216r 2  8D 0D 03     		STA XCOPY
002219r 2  AD 0E 03     		LDA YCOPY
00221Cr 2  C9 10        		CMP #$10
00221Er 2  90 D3        		BCC @mxx
002220r 2  C9 C8        		CMP #200		; SSSCLIPY - 8
002222r 2  B0 CF        		BCS @mxx
002224r 2  38           		SEC
002225r 2  E9 10        		SBC #$10
002227r 2  4A           		LSR
002228r 2  4A           		LSR
002229r 2  4A           		LSR
00222Ar 2  8D 0E 03     		STA YCOPY
00222Dr 2  20 rr rr     		JSR RNDNEXT
002230r 2  8D 0C 03     		STA ACOPY
002233r 2  AE rr rr     		LDX LOOPX
002236r 2  BD rr rr     		LDA NME,X
002239r 2  A8           		TAY
00223Ar 2  AD 0C 03     		LDA ACOPY
00223Dr 2  C0 03        		CPY #$03
00223Fr 2  90 10        		BCC @mine3
002241r 2  29 0F        		AND #$0F
002243r 2  D0 0C        		BNE @mine3		; 16:1
002245r 2               @mine4:
002245r 2  AE 0D 03     		LDX XCOPY
002248r 2  AC 0E 03     		LDY YCOPY
00224Br 2  20 rr rr     		JSR DROPHEARTSTOPPER
00224Er 2  4C rr rr     		JMP @nextplan
002251r 2               @mine3:
002251r 2  C0 02        		CPY #$02
002253r 2  90 10        		BCC @mine2
002255r 2  29 07        		AND #$07
002257r 2  D0 0C        		BNE @mine2		; 8:1
002259r 2  AE 0D 03     		LDX XCOPY
00225Cr 2  AC 0E 03     		LDY YCOPY
00225Fr 2  20 rr rr     		JSR DROPSONICBOOMER
002262r 2  4C rr rr     		JMP @nextplan
002265r 2               @mine2:
002265r 2  29 03        		AND #$03
002267r 2  D0 0C        		BNE @mine1
002269r 2  AE 0D 03     		LDX XCOPY
00226Cr 2  AC 0E 03     		LDY YCOPY
00226Fr 2  20 rr rr     		JSR DROPHULLBLASTER
002272r 2  4C rr rr     		JMP @nextplan
002275r 2               @mine1:
002275r 2  AE 0D 03     		LDX XCOPY
002278r 2  AC 0E 03     		LDY YCOPY
00227Br 2  20 rr rr     		JSR DROPGRENADE
00227Er 2  4C rr rr     		JMP @nextplan
002281r 2               		;
002281r 2               @firing:
002281r 2  BD rr rr     		LDA SPRITEX+8,X
002284r 2  C9 10        		CMP #$10
002286r 2  B0 03        		BCS @fx1
002288r 2  4C rr rr     		JMP @nextplan
00228Br 2  18           @fx1:	CLC
00228Cr 2  69 07        		ADC #$07
00228Er 2  CD 98 02     		CMP SSSCLIPX
002291r 2  90 03        		BCC @fx2
002293r 2  4C rr rr     		JMP @nextplan
002296r 2  BD rr rr     @fx2:	LDA SPRITEY+8,X
002299r 2  C9 10        		CMP #$10
00229Br 2  B0 03        		BCS @fy1
00229Dr 2  4C rr rr     		JMP @nextplan
0022A0r 2  18           @fy1:	CLC
0022A1r 2  69 0F        		ADC #$0F
0022A3r 2  CD 99 02     		CMP SSSCLIPY
0022A6r 2  90 03        		BCC @fy2
0022A8r 2  4C rr rr     		JMP @nextplan
0022ABr 2  BD rr rr     @fy2:	LDA NME,X
0022AEr 2  0A           		ASL
0022AFr 2  0A           		ASL
0022B0r 2  0A           		ASL
0022B1r 2  0A           		ASL
0022B2r 2  8D 0C 03     		STA ACOPY
0022B5r 2  20 rr rr     		JSR RNDNEXT
0022B8r 2  CD 0C 03     		CMP ACOPY
0022BBr 2  90 03        		BCC @fire
0022BDr 2  4C rr rr     		JMP @nextplan
0022C0r 2  AE rr rr     @fire:	LDX LOOPX
0022C3r 2  BD rr rr     		LDA NME,X
0022C6r 2  C9 01        		CMP #$01		; SCOUT
0022C8r 2  F0 27        		BEQ @fireback
0022CAr 2  C9 04        		CMP #$04		; CARRIER
0022CCr 2  F0 23        		BEQ @fireback
0022CEr 2  BD rr rr     		LDA NMEDIR,X
0022D1r 2  8D 0C 03     		STA ACOPY
0022D4r 2  20 rr rr     		JSR RNDNEXT
0022D7r 2  29 03        		AND #$03
0022D9r 2  D0 10        		BNE @f3
0022DBr 2  AD rr rr     		LDA FRAME
0022DEr 2  29 01        		AND #$01
0022E0r 2  D0 06        		BNE @f2
0022E2r 2  EE 0C 03     @f1:	INC ACOPY
0022E5r 2  4C rr rr     		JMP @f3
0022E8r 2  CE 0C 03     @f2:	DEC ACOPY
0022EBr 2  AD 0C 03     @f3:	LDA ACOPY
0022EEr 2  4C rr rr     		JMP @fired
0022F1r 2               @fireback:				; a 'smarter' firing solution
0022F1r 2  AE rr rr     		LDX LOOPX
0022F4r 2  BD rr rr     		LDA SPRITEX+8,X
0022F7r 2  38           		SEC
0022F8r 2  ED rr rr     		SBC SPRITEX+12
0022FBr 2  B0 02        		BCS @fxcs
0022FDr 2  49 FF        		EOR #$FF		; abs(dX)
0022FFr 2  4A           @fxcs:	LSR
002300r 2  4A           		LSR
002301r 2  4A           		LSR
002302r 2  4A           		LSR				; divide abs delta X by 16
002303r 2  8D 9D 02     		STA R3
002306r 2  BD rr rr     		LDA SPRITEY+8,X
002309r 2  38           		SEC
00230Ar 2  ED rr rr     		SBC SPRITEY+12
00230Dr 2  B0 02        		BCS @fycs
00230Fr 2  49 FF        		EOR #$FF		; abs(dY)
002311r 2  4A           @fycs:	LSR
002312r 2  4A           		LSR
002313r 2  4A           		LSR
002314r 2  4A           		LSR				; divide abs delta Y by 16
002315r 2  8D 9E 02     		STA R4
002318r 2  A2 02        		LDX #$02		; start by aiming diagonal
00231Ar 2  CD 9D 02     		CMP R3
00231Dr 2  F0 1A        		BEQ	@fsckx		; uh-oh
00231Fr 2  B0 0B        		BCS	@fshigher	; Y >= X?
002321r 2  A2 03        		LDX #$03		; aim 3 o'clock
002323r 2  4E 9E 02     		LSR R4			; divide abs delta Y by 32
002326r 2  D0 11        		BNE	@fsckx		; still enough Y to consider?
002328r 2  A2 04        		LDX #$04		; aim horizontal
00232Ar 2  D0 0D        		BNE @fsckx
00232Cr 2               @fshigher:
00232Cr 2  A2 01        		LDX #$01		; aim 1 o'clock
00232Er 2  4E 9D 02     		LSR R3			; divide abs delta X by 32
002331r 2  D0 06        		BNE @fsckx		; still enough X to consider?
002333r 2  CA           		DEX				; aim vertical
002334r 2  8E 9E 02     		STX R4
002337r 2  F0 17        		BEQ @fscky
002339r 2               @fsckx:
002339r 2  8E 9E 02     		STX R4			; aim direction is 1 - 4
00233Cr 2  AE rr rr     		LDX LOOPX
00233Fr 2  AD rr rr     		LDA SPRITEX+12
002342r 2  DD rr rr     		CMP SPRITEX+8,X
002345r 2  B0 09        		BCS @fscky		; fury is to the right of carrier?
002347r 2  A9 10        		LDA #$10
002349r 2  38           		SEC
00234Ar 2  ED 9E 02     		SBC R4
00234Dr 2  8D 9E 02     		STA R4
002350r 2               @fscky:
002350r 2  AD rr rr     		LDA SPRITEY+12
002353r 2  DD rr rr     		CMP SPRITEY+8,X
002356r 2  90 15        		BCC @fsfini		; direction is above
002358r 2  A9 08        		LDA #$08		; direction is below
00235Ar 2  38           		SEC
00235Br 2  ED 9E 02     		SBC R4
00235Er 2  8D 9E 02     		STA R4
002361r 2  C9 08        		CMP #$08
002363r 2  F0 08        		BEQ @fsfini		; direction is straight down
002365r 2  90 06        		BCC @fsfini		; direction is to the right
002367r 2  18           		CLC
002368r 2  69 10        		ADC #$10		; direction is to the left
00236Ar 2  8D 9E 02     		STA R4
00236Dr 2               @fsfini:
00236Dr 2  AD 9E 02     		LDA R4
002370r 2               @fired:
002370r 2  29 0F        		AND #$0F
002372r 2  A8           		TAY
002373r 2  AE rr rr     		LDX LOOPX
002376r 2  BD rr rr     		LDA NME,X		; phasers ready
002379r 2  20 rr rr     		JSR NEWPHASER
00237Cr 2  4C rr rr     		JMP @nextplan
00237Fr 2               		;
00237Fr 2               @center:
00237Fr 2  AD rr rr     		LDA OMEGAHP
002382r 2  F0 11        		BEQ @xcenter
002384r 2  AD rr rr     		LDA NEUTRON
002387r 2  D0 0C        		BNE @xcenter
002389r 2  AD rr rr     		LDA FURYHP
00238Cr 2  F0 0A        		BEQ @ccheck
00238Er 2  20 rr rr     		JSR RNDNEXT
002391r 2  C9 07        		CMP #$07
002393r 2  90 03        		BCC @ccheck
002395r 2               @xcenter:
002395r 2  4C rr rr     		JMP @nextplan
002398r 2               @ccheck:
002398r 2  AD 9A 02     		LDA R0
00239Br 2  C9 04        		CMP #$04		; 1
00239Dr 2  F0 0F        		BEQ @objcont1
00239Fr 2  C9 0C        		CMP #$0C		; 3
0023A1r 2  F0 0F        		BEQ @objcont2
0023A3r 2  C9 14        		CMP #$14		; 5
0023A5r 2  F0 0F        		BEQ @objcont3
0023A7r 2  C9 1C        		CMP #$1C		; 7
0023A9r 2  F0 0F        		BEQ @objcont4
0023ABr 2  4C rr rr     		JMP @nextplan
0023AEr 2               @objcont1:
0023AEr 2  A9 08        		LDA #$08
0023B0r 2  D0 0A        		BNE @objcont
0023B2r 2               @objcont2:
0023B2r 2  A9 04        		LDA #$04
0023B4r 2  D0 06        		BNE @objcont
0023B6r 2               @objcont3:
0023B6r 2  A9 0C        		LDA #$0C
0023B8r 2  D0 02        		BNE @objcont
0023BAr 2               @objcont4:
0023BAr 2  A9 00        		LDA #$00
0023BCr 2               @objcont:
0023BCr 2  AE rr rr     		LDX LOOPX
0023BFr 2  9D rr rr     		STA NMEDIR,X
0023C2r 2  A9 00        		LDA #$00		; keep ship stationary
0023C4r 2  9D rr rr     		STA NMESPEED,X
0023C7r 2  9D rr rr     		STA NMETURN,X
0023CAr 2  AD rr rr     		LDA FRAME
0023CDr 2  29 3F        		AND #$3F
0023CFr 2  18           		CLC
0023D0r 2  69 20        		ADC #$20
0023D2r 2  9D rr rr     		STA NMELEN,X
0023D5r 2  60           		RTS
0023D6r 2               		;
0023D6r 2               @spread:
0023D6r 2  20 rr rr     		JSR RNDNEXT
0023D9r 2  C9 55        		CMP #$55
0023DBr 2  B0 03        		BCS @cspread
0023DDr 2  4C rr rr     		JMP @nextplan
0023E0r 2               @cspread:
0023E0r 2  AE rr rr     		LDX LOOPX
0023E3r 2  BD rr rr     		LDA NMEDIR,X
0023E6r 2  38           		SEC
0023E7r 2  E9 01        		SBC #$01
0023E9r 2  29 0F        		AND #$0F
0023EBr 2  A8           		TAY
0023ECr 2  BD rr rr     		LDA NME,X
0023EFr 2  20 rr rr     		JSR NEWPHASER
0023F2r 2  AE rr rr     		LDX LOOPX
0023F5r 2  BD rr rr     		LDA NMEDIR,X
0023F8r 2  A8           		TAY
0023F9r 2  BD rr rr     		LDA NME,X
0023FCr 2  20 rr rr     		JSR NEWPHASER
0023FFr 2  AE rr rr     		LDX LOOPX
002402r 2  BD rr rr     		LDA NMEDIR,X
002405r 2  18           		CLC
002406r 2  69 01        		ADC #$01
002408r 2  29 0F        		AND #$0F
00240Ar 2  A8           		TAY
00240Br 2  BD rr rr     		LDA NME,X
00240Er 2  20 rr rr     		JSR NEWPHASER
002411r 2  60           		RTS
002412r 2               		;
002412r 2               @deadly:
002412r 2  AD rr rr     		LDA OMEGAHP
002415r 2  F0 0C        		BEQ @xdeadly
002417r 2  AD rr rr     		LDA FURYHP
00241Ar 2  F0 0A        		BEQ @cdeadly
00241Cr 2  20 rr rr     		JSR RNDNEXT
00241Fr 2  C9 5C        		CMP #92			; 8% chance
002421r 2  B0 03        		BCS @cdeadly
002423r 2               @xdeadly:
002423r 2  4C rr rr     		JMP @nextplan
002426r 2               @cdeadly:
002426r 2  AD 9A 02     		LDA R0
002429r 2  C9 04        		CMP #$04		; 1
00242Br 2  F0 0F        		BEQ @nbcont1
00242Dr 2  C9 0C        		CMP #$0C		; 3
00242Fr 2  F0 0F        		BEQ @nbcont2
002431r 2  C9 14        		CMP #$14		; 5
002433r 2  F0 0F        		BEQ @nbcont3
002435r 2  C9 1C        		CMP #$1C		; 7
002437r 2  F0 0F        		BEQ @nbcont4
002439r 2  4C rr rr     		JMP @nextplan
00243Cr 2               @nbcont1:
00243Cr 2  A9 08        		LDA #$08
00243Er 2  D0 0A        		BNE @nbcont
002440r 2               @nbcont2:
002440r 2  A9 04        		LDA #$04
002442r 2  D0 06        		BNE @nbcont
002444r 2               @nbcont3:
002444r 2  A9 0C        		LDA #$0C
002446r 2  D0 02        		BNE @nbcont
002448r 2               @nbcont4:
002448r 2  A9 00        		LDA #$00
00244Ar 2               @nbcont:
00244Ar 2  AE rr rr     		LDX LOOPX
00244Dr 2  9D rr rr     		STA NMEDIR,X
002450r 2  A9 00        		LDA #$00		; sit and spin ...
002452r 2  9D rr rr     		STA NMESPEED,X
002455r 2  9D rr rr     		STA NMEPLAN,X
002458r 2  A9 10        		LDA #$10		; short wait
00245Ar 2  AC rr rr     		LDY FURYHP
00245Dr 2  F0 07        		BEQ @nblen
00245Fr 2  A9 05        		LDA #$05
002461r 2  8D rr rr     		STA ALERTS
002464r 2  A9 FF        		LDA #$FF		; long wait
002466r 2  9D rr rr     @nblen:	STA NMELEN,X
002469r 2  60           		RTS
00246Ar 2               		;
00246Ar 2               		; which area (0-8)
00246Ar 2  8E 0D 03     @area:	STX XCOPY
00246Dr 2  8C 0E 03     		STY YCOPY
002470r 2  A0 00        		LDY #$00
002472r 2  AD 0D 03     @aloop:	LDA XCOPY
002475r 2  D9 rr rr     		CMP AREA,Y
002478r 2  90 15        		BCC @next
00247Ar 2  D9 rr rr     		CMP AREA+2,Y
00247Dr 2  B0 10        		BCS @next
00247Fr 2  AD 0E 03     		LDA YCOPY
002482r 2  D9 rr rr     		CMP AREA+1,Y
002485r 2  90 08        		BCC @next
002487r 2  D9 rr rr     		CMP AREA+3,Y
00248Ar 2  B0 03        		BCS @next
00248Cr 2  4C rr rr     		JMP @afini
00248Fr 2  C8           @next:	INY
002490r 2  C8           		INY
002491r 2  C8           		INY
002492r 2  C8           		INY
002493r 2  C0 40        		CPY #$40
002495r 2  D0 DB        		BNE @aloop
002497r 2  00           		brk				; should not occur
002498r 2  8C 9A 02     @afini:	STY R0
00249Br 2  60           		RTS
00249Cr 2               
00249Cr 2               ;*********************************************************************
00249Cr 2               GAMEOVER:
00249Cr 2  A2 06        		LDX #$06
00249Er 2  A0 05        		LDY #$05
0024A0r 2  20 rr rr     		JSR SSSPLOT
0024A3r 2  20 rr rr     		JSR SSSPRINTS	; GAME OVER
0024A6r 2  F2 87 81 8D  		.byte	$F2,$87,$81,$8D,$85,$A0,$8F,$96,$85,$92,$00
0024AAr 2  85 A0 8F 96  
0024AEr 2  85 92 00     
0024B1r 2  60           		RTS
0024B2r 2               
0024B2r 2               ;*********************************************************************
0024B2r 2               ; Background software interrupt routine
0024B2r 2               ;
0024B2r 2               BACKGROUND:
0024B2r 2  D8           		CLD
0024B3r 2  AD rr rr     		LDA FLASHING
0024B6r 2  D0 0D        		BNE @nofl
0024B8r 2  AD 0E 90     		LDA VIC+$0E
0024BBr 2  49 80        		EOR #$80
0024BDr 2  8D 0E 90     		STA VIC+$0E
0024C0r 2  A9 20        		LDA #$20
0024C2r 2  8D rr rr     		STA FLASHING
0024C5r 2  CE rr rr     @nofl:	DEC FLASHING
0024C8r 2               		;
0024C8r 2  AD rr rr     		LDA PHASER
0024CBr 2  F0 15        		BEQ @n0
0024CDr 2  A2 00        		LDX #$00
0024CFr 2  CE rr rr     		DEC PHASER
0024D2r 2  F0 0B        		BEQ @snd0
0024D4r 2  A2 FB        		LDX #$FB
0024D6r 2  AD rr rr     		LDA PHASER
0024D9r 2  29 01        		AND #$01
0024DBr 2  D0 02        		BNE @snd0
0024DDr 2  A2 FA        		LDX #$FA
0024DFr 2  8E 0B 90     @snd0:	STX VIC+$0B		; voice #2
0024E2r 2               @n0:
0024E2r 2  AD rr rr     		LDA SHOOTING
0024E5r 2  F0 12        		BEQ @n1
0024E7r 2  CE rr rr     		DEC SHOOTING
0024EAr 2  AD rr rr     		LDA SHOOTING
0024EDr 2  C9 F0        		CMP #$F0
0024EFr 2  D0 05        		BNE @snd1
0024F1r 2  A9 00        		LDA #$00
0024F3r 2  8D rr rr     		STA SHOOTING
0024F6r 2  8D 0C 90     @snd1:	STA VIC+$0C		; voice #3
0024F9r 2               @n1:
0024F9r 2  AD rr rr     		LDA EMPTY
0024FCr 2  F0 11        		BEQ @n2
0024FEr 2  A0 FA        		LDY #$FA
002500r 2  CE rr rr     		DEC EMPTY
002503r 2  AD rr rr     		LDA EMPTY
002506r 2  29 01        		AND #$01
002508r 2  D0 02        		BNE @snd2
00250Ar 2  A0 00        		LDY #$00
00250Cr 2  8C 0A 90     @snd2:	STY VIC+$0A		; voice #1
00250Fr 2               @n2:
00250Fr 2  AD rr rr     		LDA DROPPED
002512r 2  F0 11        		BEQ @n3
002514r 2  A0 DC        		LDY #$DC
002516r 2  CE rr rr     		DEC DROPPED
002519r 2  AD rr rr     		LDA DROPPED
00251Cr 2  29 01        		AND #$01
00251Er 2  D0 02        		BNE @snd3
002520r 2  A0 00        		LDY #$00
002522r 2  8C 0B 90     @snd3:	STY VIC+$0B		; voice #2
002525r 2               @n3:
002525r 2  AD rr rr     		LDA HIT
002528r 2  F0 19        		BEQ @n4
00252Ar 2  CE rr rr     		DEC HIT
00252Dr 2  AD 0D 90     		LDA VIC+$0D
002530r 2  C9 FE        		CMP #$FE
002532r 2  F0 0F        		BEQ @n4
002534r 2  AD rr rr     		LDA HIT
002537r 2  C9 B0        		CMP #$B0
002539r 2  D0 05        		BNE @snd4
00253Br 2  A9 00        		LDA #$00
00253Dr 2  8D rr rr     		STA HIT
002540r 2  8D 0D 90     @snd4:	STA VIC+$0D		; noise
002543r 2               @n4:
002543r 2  AD rr rr     		LDA PULSE
002546r 2  F0 3F        		BEQ @n5
002548r 2  AD rr rr     		LDA HEARTBEATS
00254Br 2  F0 32        		BEQ @dead
00254Dr 2  CE rr rr     		DEC PULSE
002550r 2  D0 05        		BNE @beat
002552r 2  CE rr rr     		DEC PULSE
002555r 2  D0 30        		BNE @n5
002557r 2  AC rr rr     @beat:	LDY PULSE
00255Ar 2  98           		TYA
00255Br 2  29 01        		AND #$01
00255Dr 2  F0 07        		BEQ @beat1
00255Fr 2  98           		TYA
002560r 2  29 7F        		AND #$7F
002562r 2  C9 20        		CMP #$20
002564r 2  90 07        		BCC @beat2
002566r 2  A9 00        @beat1:	LDA #$00
002568r 2  8D 0A 90     		STA VIC+$0A		; voice #1
00256Br 2  F0 1A        		BEQ @n5
00256Dr 2  C9 08        @beat2:	CMP #$08
00256Fr 2  90 07        		BCC @beat3
002571r 2  A9 D0        		LDA #$D0
002573r 2  8D 0A 90     		STA VIC+$0A		; voice #1
002576r 2  D0 0F        		BNE @n5
002578r 2  A9 A0        @beat3:	LDA #$A0
00257Ar 2  8D 0A 90     		STA VIC+$0A		; voice #1
00257Dr 2  D0 08        		BNE @n5
00257Fr 2  A9 00        @dead:	LDA #$00
002581r 2  8D rr rr     		STA PULSE
002584r 2  8D 0A 90     		STA VIC+$0A		; voice #1
002587r 2               @n5:
002587r 2  AD rr rr     		LDA BOOMED
00258Ar 2  F0 18        		BEQ @n6
00258Cr 2  AD rr rr     		LDA KLAXON
00258Fr 2  38           		SEC
002590r 2  E9 04        		SBC #$04
002592r 2  C9 80        		CMP #$80
002594r 2  B0 05        		BCS @boomed
002596r 2  A9 00        		LDA #$00
002598r 2  8D rr rr     		STA BOOMED
00259Br 2               @boomed:
00259Br 2  8D rr rr     		STA KLAXON
00259Er 2  8D 0B 90     		STA VIC+$0B
0025A1r 2  4C rr rr     		JMP @n7
0025A4r 2               @n6:
0025A4r 2  AD rr rr     		LDA ALERTS
0025A7r 2  F0 27        		BEQ @n7
0025A9r 2  EE rr rr     		INC KLAXON
0025ACr 2  AD rr rr     		LDA KLAXON
0025AFr 2  C9 28        		CMP #$28
0025B1r 2  90 1D        		BCC @n7			; moment of silence
0025B3r 2  C9 F4        		CMP #$F4
0025B5r 2  B0 0E        		BCS @quiet		; reached top note
0025B7r 2  C9 D0        		CMP #$D0
0025B9r 2  B0 05        		BCS @alert		; continue the alert
0025BBr 2  A9 D0        		LDA #$D0		; sound an alert
0025BDr 2  8D rr rr     		STA KLAXON
0025C0r 2  8D 0B 90     @alert:	STA VIC+$0B		; voice #2
0025C3r 2  D0 0B        		BNE @n7
0025C5r 2  CE rr rr     @quiet:	DEC ALERTS
0025C8r 2  A9 00        		LDA #$00
0025CAr 2  8D rr rr     		STA KLAXON
0025CDr 2  8D 0B 90     		STA VIC+$0B		; voice #2
0025D0r 2               @n7:
0025D0r 2  4C rr rr     		JMP SSSIRQ
0025D3r 2               
0025D3r 2               		.segment "RODATA"
0000C0r 2               
0000C0r 2               ;*********************************************************************
0000C0r 2               ; INTRODUCTION
0000C0r 2               ;
0000C0r 2               		;		PRESS F1 TO CONTINUE!
0000C0r 2  90 92 85 93  CONT:	.byte	$90, $92, $85, $93, $93, $A0, $66,$67, $A0, $94, $8F, $A0, $83, $8F, $8E, $94, $89, $8E, $95, $85
0000C4r 2  93 A0 66 67  
0000C8r 2  A0 94 8F A0  
0000D4r 2               		;
0000D4r 2               CREDITS:
0000D4r 2               		; ++ ACKNOWLEDGEMENTS ++
0000D4r 2               		;
0000D4r 2               		; OMEGA FURY THEME TUNE
0000D4r 2               		;   -=>  CARLSSON  <=-
0000D4r 2               		;
0000D4r 2               		; TECHNICAL ADVICES
0000D4r 2               		;   --=:)  MIKE  (:=--
0000D4r 2               		;
0000D4r 2               		; AND THE MEGA-CART TEAM
0000D4r 2               		;
0000D4r 2               		; WITH SPECIAL THANKS TO
0000D4r 2               		;
0000D4r 2               		;   ^ MY LOVING WIFE ^
0000D4r 2               		;   LOIS MARIE D'AMBRA
0000D4r 2               		;
0000D4r 2               		; COMMODORE =OMEGA RACE=
0000D4r 2               		;  GAME AND INSPIRATION
0000D4r 2               		; ( (  ANDY FINKEL  ) )
0000D4r 2               		;
0000D4r 2  07 AB AB A0  		.byte $07,$AB,$AB,$A0,$01,$81,$83,$8B,$8E,$8F,$97,$8C,$85,$84,$87,$85,$8D,$85,$8E,$94,$93,$A0,$07,$AB,$AB,$0D
0000D8r 2  01 81 83 8B  
0000DCr 2  8E 8F 97 8C  
0000EEr 2  05 8F 8D 85  		.byte $05,$8F,$8D,$85,$87,$81,$A0,$86,$95,$92,$99,$A0,$94,$88,$85,$8D,$85,$A0,$94,$95,$8E,$85,$0D
0000F2r 2  87 81 A0 86  
0000F6r 2  95 92 99 A0  
000105r 2  07 A0 A0 AD  		.byte $07,$A0,$A0,$AD,$BD,$BE,$A0,$A0,$01,$83,$81,$92,$8C,$93,$93,$8F,$8E,$A0,$A0,$07,$BC,$BD,$AD,$0D
000109r 2  BD BE A0 A0  
00010Dr 2  01 83 81 92  
00011Dr 2  0D           		.byte $0D
00011Er 2  05 94 85 83  		.byte $05,$94,$85,$83,$88,$8E,$89,$83,$81,$8C,$A0,$81,$84,$96,$89,$83,$85,$93,$0D
000122r 2  88 8E 89 83  
000126r 2  81 8C A0 81  
000131r 2  07 A0 A0 AD  		.byte $07,$A0,$A0,$AD,$AD,$BD,$BA,$A9,$A0,$A0,$01,$8D,$89,$8B,$85,$A0,$A0,$07,$A8,$BA,$BD,$AD,$AD,$0D
000135r 2  AD BD BA A9  
000139r 2  A0 A0 01 8D  
000149r 2  0D           		.byte $0D
00014Ar 2  03 81 8E 84  		.byte $03,$81,$8E,$84,$A0,$94,$88,$85,$A0,$8D,$85,$87,$81,$AD,$83,$81,$92,$94,$A0,$94,$85,$81,$8D,$0D
00014Er 2  A0 94 88 85  
000152r 2  A0 8D 85 87  
000162r 2  0D           		.byte $0D
000163r 2  04 97 89 94  		.byte $04,$97,$89,$94,$88,$A0,$93,$90,$85,$83,$89,$81,$8C,$A0,$94,$88,$81,$8E,$8B,$93,$A0,$94,$8F,$0D
000167r 2  88 A0 93 90  
00016Br 2  85 83 89 81  
00017Br 2  0D           		.byte $0D
00017Cr 2  02 A0 A0 D3  		.byte $02,$A0,$A0,$D3,$A0,$05,$8D,$99,$A0,$8C,$8F,$96,$89,$8E,$87,$A0,$97,$89,$86,$85,$A0,$02,$D3,$0D
000180r 2  A0 05 8D 99  
000184r 2  A0 8C 8F 96  
000194r 2  01 A0 A0 8C  		.byte $01,$A0,$A0,$8C,$8F,$89,$93,$A0,$8D,$81,$92,$89,$85,$A0,$84,$A7,$81,$8D,$82,$92,$81,$0D
000198r 2  8F 89 93 A0  
00019Cr 2  8D 81 92 89  
0001AAr 2  0D           		.byte $0D
0001ABr 2  05 83 8F 8D  		.byte $05,$83,$8F,$8D,$8D,$8F,$84,$8F,$92,$85,$A0,$02,$BD,$07,$8F,$8D,$85,$87,$81,$A0,$92,$81,$83,$85,$02,$BD
0001AFr 2  8D 8F 84 8F  
0001B3r 2  92 85 A0 02  
0001C5r 2  05 A0 87 81  		.byte $05,$A0,$87,$81,$8D,$85,$A0,$81,$8E,$84,$A0,$89,$8E,$93,$90,$89,$92,$81,$94,$89,$8F,$8E,$0D
0001C9r 2  8D 85 A0 81  
0001CDr 2  8E 84 A0 89  
0001DCr 2  04 12 A0 12  		.byte $04,$12,$A0,$12,$01,$A0,$A0,$81,$8E,$84,$99,$A0,$86,$89,$8E,$8B,$85,$8C,$A0,$A0,$04,$14,$A0,$14
0001E0r 2  01 A0 A0 81  
0001E4r 2  8E 84 99 A0  
0001F4r 2  00           		.byte $00
0001F5r 2               		;
0001F5r 2  rr rr rr rr  INTROS:	.word	@i0,@i1,@i2,@i3,$0000
0001F9r 2  rr rr rr rr  
0001FDr 2  00 00        
0001FFr 2               				; IN THE YEAR 2010, THE
0001FFr 2               				; OMEGAN SYSTEM EXPANDED
0001FFr 2               				; ITS STAR COLONIES TOO
0001FFr 2               				; FAR.  THEY ENCROACHED
0001FFr 2               				; UPON THE BORDERS OF
0001FFr 2               				; THE THARGOID TERRITORY
0001FFr 2               				; -- A CIVILIZATION WITH
0001FFr 2               				; ADVANCED DEFENSIVE
0001FFr 2               				; PROWESS AND RELENTLESS
0001FFr 2               				; FIRE POWER.
0001FFr 2               				;
0001FFr 2               				; AND THE THARGOIDS HAVE
0001FFr 2               				; THEIR OWN EXPANSION
0001FFr 2               				; PLANS, WHICH DOES NOT
0001FFr 2               				; INCLUDE ANY OMEGANS.
0001FFr 2  03 89 8E A0  @i0:	.byte	$03,$89,$8E,$A0,$94,$88,$85,$A0,$99,$85,$81,$92,$A0,$01,$B2,$B0,$B1,$B0,$03,$AC,$A0,$94,$88,$85,$A0
000203r 2  94 88 85 A0  
000207r 2  99 85 81 92  
000218r 2  04 8F 8D 85  		.byte	$04,$8F,$8D,$85,$87,$81,$8E,$A0,$93,$99,$93,$94,$85,$8D,$03,$A0,$85,$98,$90,$81,$8E,$84,$85,$84
00021Cr 2  87 81 8E A0  
000220r 2  93 99 93 94  
000230r 2  89 94 93 A0  		.byte	$89,$94,$93,$A0,$93,$94,$81,$92,$A0,$83,$8F,$8C,$8F,$8E,$89,$85,$93,$A0,$94,$8F,$8F,$A0
000234r 2  93 94 81 92  
000238r 2  A0 83 8F 8C  
000246r 2  86 81 92 AE  		.byte	$86,$81,$92,$AE,$A0,$A0,$94,$88,$85,$99,$A0,$85,$8E,$83,$92,$8F,$81,$83,$88,$85,$84,$A0
00024Ar 2  A0 A0 94 88  
00024Er 2  85 99 A0 85  
00025Cr 2  95 90 8F 8E  		.byte	$95,$90,$8F,$8E,$A0,$94,$88,$85,$A0,$82,$8F,$92,$84,$85,$92,$93,$A0,$8F,$86,$A0,$A0,$A0
000260r 2  A0 94 88 85  
000264r 2  A0 82 8F 92  
000272r 2  94 88 85 A0  		.byte	$94,$88,$85,$A0,$05,$94,$88,$81,$92,$87,$8F,$89,$84,$A0,$94,$85,$92,$92,$89,$94,$8F,$92,$99,$03
000276r 2  05 94 88 81  
00027Ar 2  92 87 8F 89  
00028Ar 2  AD AD A0 81  		.byte	$AD,$AD,$A0,$81,$A0,$83,$89,$96,$89,$8C,$89,$9A,$81,$94,$89,$8F,$8E,$A0,$97,$89,$94,$88
00028Er 2  A0 83 89 96  
000292r 2  89 8C 89 9A  
0002A0r 2  07 81 84 96  		.byte	$07,$81,$84,$96,$81,$8E,$83,$85,$84,$A0,$84,$85,$86,$85,$8E,$93,$89,$96,$85,$A0,$A0,$A0,$A0
0002A4r 2  81 8E 83 85  
0002A8r 2  84 A0 84 85  
0002B7r 2  90 92 8F 97  		.byte	$90,$92,$8F,$97,$85,$93,$93,$03,$A0,$81,$8E,$84,$A0,$07,$92,$85,$8C,$85,$8E,$94,$8C,$85,$93,$93
0002BBr 2  85 93 93 03  
0002BFr 2  A0 81 8E 84  
0002CFr 2  86 89 92 85  		.byte	$86,$89,$92,$85,$A0,$90,$8F,$97,$85,$92,$03,$AE,$0D,$0D
0002D3r 2  A0 90 8F 97  
0002D7r 2  85 92 03 AE  
0002DDr 2  81 8E 84 A0  		.byte	$81,$8E,$84,$A0,$94,$88,$85,$A0,$05,$94,$88,$81,$92,$87,$8F,$89,$84,$93,$03,$A0,$88,$81,$96,$85
0002E1r 2  94 88 85 A0  
0002E5r 2  05 94 88 81  
0002F5r 2  94 88 85 89  		.byte	$94,$88,$85,$89,$92,$A0,$8F,$97,$8E,$A0,$85,$98,$90,$81,$8E,$93,$89,$8F,$8E,$A0,$A0,$A0
0002F9r 2  92 A0 8F 97  
0002FDr 2  8E A0 85 98  
00030Br 2  90 8C 81 8E  		.byte	$90,$8C,$81,$8E,$93,$AC,$A0,$97,$88,$89,$83,$88,$A0,$84,$8F,$85,$93,$A0,$8E,$8F,$94,$A0
00030Fr 2  93 AC A0 97  
000313r 2  88 89 83 88  
000321r 2  89 8E 83 8C  		.byte	$89,$8E,$83,$8C,$95,$84,$85,$A0,$81,$8E,$99,$A0,$04,$8F,$8D,$85,$87,$81,$8E,$93,$03,$AE
000325r 2  95 84 85 A0  
000329r 2  81 8E 99 A0  
000337r 2  00           		.byte	$00
000338r 2               				; THAT CONCLUSION WAS
000338r 2               				; CONFIRMED BY THE LAST
000338r 2               				; SCOUTING REPORTS.  ITS
000338r 2               				; TACTICAL DATA REVEALED
000338r 2               				; THE THARGOID THREAT ON
000338r 2               				; THE OMEGAN OUTREACH IS
000338r 2               				; NOT GOING TO END THERE
000338r 2               				; -- AN INVASION FORCE
000338r 2               				; IS MASSING TO STRIKE
000338r 2               				; AS DEEP AS THEIR HULL
000338r 2               				; PLATING AND MIGHT CAN
000338r 2               				; ENDURE . . . . .
000338r 2  03 94 88 81  @i1:	.byte	$03,$94,$88,$81,$94,$A0,$83,$8F,$8E,$83,$8C,$95,$93,$89,$8F,$8E,$A0,$97,$81,$93,$A0,$A0,$A0
00033Cr 2  94 A0 83 8F  
000340r 2  8E 83 8C 95  
00034Fr 2  83 8F 8E 86  		.byte	$83,$8F,$8E,$86,$89,$92,$8D,$85,$84,$A0,$82,$99,$A0,$94,$88,$85,$A0,$8C,$81,$93,$94,$A0
000353r 2  89 92 8D 85  
000357r 2  84 A0 82 99  
000365r 2  93 83 8F 95  		.byte	$93,$83,$8F,$95,$94,$89,$8E,$87,$A0,$92,$85,$90,$8F,$92,$94,$93,$AE,$A0,$A0,$89,$94,$93
000369r 2  94 89 8E 87  
00036Dr 2  A0 92 85 90  
00037Br 2  07 94 81 83  		.byte	$07,$94,$81,$83,$94,$89,$83,$81,$8C,$A0,$84,$81,$94,$81,$03,$A0,$92,$85,$96,$85,$81,$8C,$85,$84
00037Fr 2  94 89 83 81  
000383r 2  8C A0 84 81  
000393r 2  94 88 85 A0  		.byte	$94,$88,$85,$A0,$05,$94,$88,$81,$92,$87,$8F,$89,$84,$03,$A0,$94,$88,$92,$85,$81,$94,$A0,$8F,$8E
000397r 2  05 94 88 81  
00039Br 2  92 87 8F 89  
0003ABr 2  94 88 85 A0  		.byte	$94,$88,$85,$A0,$04,$8F,$8D,$85,$87,$81,$8E,$03,$A0,$8F,$95,$94,$92,$85,$81,$83,$88,$A0,$89,$93
0003AFr 2  04 8F 8D 85  
0003B3r 2  87 81 8E 03  
0003C3r 2  8E 8F 94 A0  		.byte	$8E,$8F,$94,$A0,$87,$8F,$89,$8E,$87,$A0,$94,$8F,$A0,$85,$8E,$84,$A0,$94,$88,$85,$92,$85
0003C7r 2  87 8F 89 8E  
0003CBr 2  87 A0 94 8F  
0003D9r 2  AD AD A0 81  		.byte	$AD,$AD,$A0,$81,$8E,$A0,$01,$89,$8E,$96,$81,$93,$89,$8F,$8E,$A0,$86,$8F,$92,$83,$85,$03,$A0,$A0
0003DDr 2  8E A0 01 89  
0003E1r 2  8E 96 81 93  
0003F1r 2  89 93 A0 8D  		.byte	$89,$93,$A0,$8D,$81,$93,$93,$89,$8E,$87,$A0,$94,$8F,$A0,$93,$94,$92,$89,$8B,$85,$A0,$A0
0003F5r 2  81 93 93 89  
0003F9r 2  8E 87 A0 94  
000407r 2  81 93 A0 84  		.byte	$81,$93,$A0,$84,$85,$85,$90,$A0,$81,$93,$A0,$94,$88,$85,$89,$92,$A0,$88,$95,$8C,$8C,$A0
00040Br 2  85 85 90 A0  
00040Fr 2  81 93 A0 94  
00041Dr 2  90 8C 81 94  		.byte	$90,$8C,$81,$94,$89,$8E,$87,$A0,$81,$8E,$84,$A0,$8D,$89,$87,$88,$94,$A0,$83,$81,$8E,$A0
000421r 2  89 8E 87 A0  
000425r 2  81 8E 84 A0  
000433r 2  85 8E 84 95  		.byte	$85,$8E,$84,$95,$92,$85,$A0,$AE,$A0,$AE,$A0,$AE,$A0,$AE,$A0,$AE,$A0
000437r 2  92 85 A0 AE  
00043Br 2  A0 AE A0 AE  
000444r 2  00           		.byte	$00
000445r 2               				; THE TWIN CITY RAMOK
000445r 2               				; HAS DEVELOPED A NEW
000445r 2               				; STAR FIGHTER TO COMBAT
000445r 2               				; THE THARGOIDS.  PILOT
000445r 2               				; TRAINING AND MISSIONS
000445r 2               				; HAVE BEEN ORDERED TO
000445r 2               				; PROVE THE LIGHTER SHIP
000445r 2               				; IN BATTLE CONDITIONS.
000445r 2               				;
000445r 2               				; ITS SUPERIOR SPEED &
000445r 2               				; AGILITY COMES AT THE
000445r 2               				; EXPENSE OF A SMALLER
000445r 2               				; WEAPON ENERGIZER --
000445r 2               				; ENERGY BOLTS DISPENSED
000445r 2               				; BEFORE FULLY CHARGED
000445r 2               				; HAVE A LESSER EFFECT,
000445r 2               				; PLACING A PREMIUM ON
000445r 2               				; ACCURATE, FIRST SHOTS.
000445r 2  03 94 88 85  @i2:	.byte	$03,$94,$88,$85,$A0,$94,$97,$89,$8E,$A0,$83,$89,$94,$99,$A0,$04,$92,$81,$8D,$8F,$8B,$03,$A0,$A0,$A0
000449r 2  A0 94 97 89  
00044Dr 2  8E A0 83 89  
00045Er 2  88 81 93 A0  		.byte	$88,$81,$93,$A0,$84,$85,$96,$85,$8C,$8F,$90,$85,$84,$A0,$81,$A0,$8E,$85,$97,$A0,$A0,$A0
000462r 2  84 85 96 85  
000466r 2  8C 8F 90 85  
000474r 2  07 93 94 81  		.byte	$07,$93,$94,$81,$92,$A0,$86,$89,$87,$88,$94,$85,$92,$03,$A0,$94,$8F,$A0,$83,$8F,$8D,$82,$81,$94
000478r 2  92 A0 86 89  
00047Cr 2  87 88 94 85  
00048Cr 2  94 88 85 A0  		.byte	$94,$88,$85,$A0,$05,$94,$88,$81,$92,$87,$8F,$89,$84,$93,$03,$AE,$A0,$A0,$90,$89,$8C,$8F,$94,$A0
000490r 2  05 94 88 81  
000494r 2  92 87 8F 89  
0004A4r 2  01 94 92 81  		.byte	$01,$94,$92,$81,$89,$8E,$89,$8E,$87,$A0,$81,$8E,$84,$A0,$8D,$89,$93,$93,$89,$8F,$8E,$93,$03,$A0
0004A8r 2  89 8E 89 8E  
0004ACr 2  87 A0 81 8E  
0004BCr 2  88 81 96 85  		.byte	$88,$81,$96,$85,$A0,$82,$85,$85,$8E,$A0,$8F,$92,$84,$85,$92,$85,$84,$A0,$94,$8F,$A0,$A0
0004C0r 2  A0 82 85 85  
0004C4r 2  8E A0 8F 92  
0004D2r 2  90 92 8F 96  		.byte	$90,$92,$8F,$96,$85,$A0,$94,$88,$85,$A0,$8C,$89,$87,$88,$94,$85,$92,$A0,$93,$88,$89,$90
0004D6r 2  85 A0 94 88  
0004DAr 2  85 A0 8C 89  
0004E8r 2  89 8E A0 82  		.byte	$89,$8E,$A0,$82,$81,$94,$94,$8C,$85,$A0,$83,$8F,$8E,$84,$89,$94,$89,$8F,$8E,$93,$AE,$A0,$0D
0004ECr 2  81 94 94 8C  
0004F0r 2  85 A0 83 8F  
0004FFr 2  89 94 93 A0  		.byte	$89,$94,$93,$A0,$01,$93,$95,$90,$85,$92,$89,$8F,$92,$A0,$93,$90,$85,$85,$84,$03,$A0,$A6,$A0,$A0
000503r 2  01 93 95 90  
000507r 2  85 92 89 8F  
000517r 2  01 81 87 89  		.byte	$01,$81,$87,$89,$8C,$89,$94,$99,$03,$A0,$83,$8F,$8D,$85,$93,$A0,$81,$94,$A0,$94,$88,$85,$A0,$A0
00051Br 2  8C 89 94 99  
00051Fr 2  03 A0 83 8F  
00052Fr 2  85 98 90 85  		.byte	$85,$98,$90,$85,$8E,$93,$85,$A0,$8F,$86,$A0,$81,$A0,$93,$8D,$81,$8C,$8C,$85,$92,$A0,$A0
000533r 2  8E 93 85 A0  
000537r 2  8F 86 A0 81  
000545r 2  97 85 81 90  		.byte	$97,$85,$81,$90,$8F,$8E,$A0,$85,$8E,$85,$92,$87,$89,$9A,$85,$92,$A0,$AD,$AD,$A0,$A0,$A0
000549r 2  8F 8E A0 85  
00054Dr 2  8E 85 92 87  
00055Br 2  02 85 8E 85  		.byte	$02,$85,$8E,$85,$92,$87,$99,$A0,$82,$8F,$8C,$94,$93,$03,$A0,$84,$89,$93,$90,$85,$8E,$93,$85,$84
00055Fr 2  92 87 99 A0  
000563r 2  82 8F 8C 94  
000573r 2  82 85 86 8F  		.byte	$82,$85,$86,$8F,$92,$85,$A0,$86,$95,$8C,$8C,$99,$A0,$83,$88,$81,$92,$87,$85,$84,$A0,$A0
000577r 2  92 85 A0 86  
00057Br 2  95 8C 8C 99  
000589r 2  88 81 96 85  		.byte	$88,$81,$96,$85,$A0,$81,$A0,$8C,$85,$93,$93,$85,$92,$A0,$85,$86,$86,$85,$83,$94,$AC,$A0
00058Dr 2  A0 81 A0 8C  
000591r 2  85 93 93 85  
00059Fr 2  90 8C 81 83  		.byte	$90,$8C,$81,$83,$89,$8E,$87,$A0,$81,$A0,$90,$92,$85,$8D,$89,$95,$8D,$A0,$8F,$8E,$A0,$A0
0005A3r 2  89 8E 87 A0  
0005A7r 2  81 A0 90 92  
0005B5r 2  01 81 83 83  		.byte	$01,$81,$83,$83,$95,$92,$81,$94,$85,$03,$AC,$A0,$86,$89,$92,$93,$94,$A0,$93,$88,$8F,$94,$93,$AE
0005B9r 2  95 92 81 94  
0005BDr 2  85 03 AC A0  
0005CDr 2  00           		.byte	$00
0005CEr 2               				; SEVEN YEARS OF COMMAND
0005CEr 2               				;  AND RESPECT FROM ALL
0005CEr 2               				;     THROUGHOUT THE
0005CEr 2               				; GALAXIES IS CHALLENGED
0005CEr 2               				;      ONCE AGAIN.
0005CEr 2               				;
0005CEr 2               				; THE WARRIORS TASKED TO
0005CEr 2               				; PROTECT THIS HONOR ARE
0005CEr 2               				; CALLING THEIR NEW STAR
0005CEr 2               				; FIGHTER . . . . .
0005CEr 2  03 93 85 96  @i3:	.byte	$03,$93,$85,$96,$85,$8E,$A0,$99,$85,$81,$92,$93,$A0,$8F,$86,$A0,$07,$83,$8F,$8D,$8D,$81,$8E,$84,$03
0005D2r 2  85 8E A0 99  
0005D6r 2  85 81 92 93  
0005E7r 2  A0 81 8E 84  		.byte	$A0,$81,$8E,$84,$A0,$07,$92,$85,$93,$90,$85,$83,$94,$03,$A0,$86,$92,$8F,$8D,$A0,$81,$8C,$8C,$A0
0005EBr 2  A0 07 92 85  
0005EFr 2  93 90 85 83  
0005FFr 2  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$94,$88,$92,$8F,$95,$87,$88,$8F,$95,$94,$A0,$94,$88,$85,$A0,$A0,$A0,$A0
000603r 2  94 88 92 8F  
000607r 2  95 87 88 8F  
000615r 2  87 81 8C 81  		.byte	$87,$81,$8C,$81,$98,$89,$85,$93,$A0,$89,$93,$A0,$83,$88,$81,$8C,$8C,$85,$8E,$87,$85,$84
000619r 2  98 89 85 93  
00061Dr 2  A0 89 93 A0  
00062Br 2  A0 A0 A0 A0  		.byte	$A0,$A0,$A0,$A0,$A0,$8F,$8E,$83,$85,$A0,$81,$87,$81,$89,$8E,$AE,$A0,$A0,$A0,$A0,$A0,$A0,$0D
00062Fr 2  A0 8F 8E 83  
000633r 2  85 A0 81 87  
000642r 2  94 88 85 A0  		.byte	$94,$88,$85,$A0,$97,$81,$92,$92,$89,$8F,$92,$93,$A0,$94,$81,$93,$8B,$85,$84,$A0,$94,$8F
000646r 2  97 81 92 92  
00064Ar 2  89 8F 92 93  
000658r 2  01 90 92 8F  		.byte	$01,$90,$92,$8F,$94,$85,$83,$94,$A0,$94,$88,$89,$93,$A0,$88,$8F,$8E,$8F,$92,$03,$A0,$81,$92,$85
00065Cr 2  94 85 83 94  
000660r 2  A0 94 88 89  
000670r 2  83 81 8C 8C  		.byte	$83,$81,$8C,$8C,$89,$8E,$87,$A0,$94,$88,$85,$89,$92,$A0,$07,$8E,$85,$97,$A0,$93,$94,$81,$92
000674r 2  89 8E 87 A0  
000678r 2  94 88 85 89  
000687r 2  86 89 87 88  		.byte	$86,$89,$87,$88,$94,$85,$92,$03,$A0,$AE,$A0,$AE,$A0,$AE,$A0,$AE,$A0,$AE,$A0
00068Br 2  94 85 92 03  
00068Fr 2  A0 AE A0 AE  
00069Ar 2  00           		.byte	$00
00069Br 2               ;
00069Br 2               WALKERS:
00069Br 2  rr rr rr rr  		.word	SCOUT0,CRUISER0,DESTROYER0,CARRIER0,$0000
00069Fr 2  rr rr rr rr  
0006A3r 2  00 00        
0006A5r 2               ;
0006A5r 2               ; spaceship fly-by
0006A5r 2               OMEGABIG:
0006A5r 2  00           		.byte	%00000000
0006A6r 2  00           		.byte	%00000000
0006A7r 2  00           		.byte	%00000000
0006A8r 2  00           		.byte	%00000000
0006A9r 2  00           		.byte	%00000000
0006AAr 2  00           		.byte	%00000000
0006ABr 2  0A           		.byte	%00001010
0006ACr 2  AA           		.byte	%10101010
0006ADr 2               
0006ADr 2  2A           		.byte	%00101010
0006AEr 2  0A           		.byte	%00001010
0006AFr 2  00           		.byte	%00000000
0006B0r 2  00           		.byte	%00000000
0006B1r 2  00           		.byte	%00000000
0006B2r 2  00           		.byte	%00000000
0006B3r 2  00           		.byte	%00000000
0006B4r 2  03           		.byte	%00000011
0006B5r 2               
0006B5r 2  02           		.byte	%00000010
0006B6r 2  02           		.byte	%00000010
0006B7r 2  0A           		.byte	%00001010
0006B8r 2  0A           		.byte	%00001010
0006B9r 2  16           		.byte	%00010110
0006BAr 2  56           		.byte	%01010110
0006BBr 2  AA           		.byte	%10101010
0006BCr 2  A8           		.byte	%10101000
0006BDr 2               
0006BDr 2  AB           		.byte	%10101011
0006BEr 2  AB           		.byte	%10101011
0006BFr 2  AB           		.byte	%10101011
0006C0r 2  A8           		.byte	%10101000
0006C1r 2  A0           		.byte	%10100000
0006C2r 2  A0           		.byte	%10100000
0006C3r 2  80           		.byte	%10000000
0006C4r 2  A8           		.byte	%10101000
0006C5r 2               ;
0006C5r 2               HBOUNCE:
0006C5r 2  08 07 06 05  		.byte	$08,$07,$06,$05,$04,$03,$02,$01,$00,$0F,$0E,$0D,$0C,$0B,$0A,$09
0006C9r 2  04 03 02 01  
0006CDr 2  00 0F 0E 0D  
0006D5r 2               VBOUNCE:
0006D5r 2  00 0F 0E 0D  		.byte	$00,$0F,$0E,$0D,$0C,$0B,$0A,$09,$08,$07,$06,$05,$04,$03,$02,$01
0006D9r 2  0C 0B 0A 09  
0006DDr 2  08 07 06 05  
0006E5r 2               ;
0006E5r 2  05 07 02 02  HULLC:	.byte	$05,$07,$02,$02
0006E9r 2  2D 1E 0F     HULLV:	.byte	$2D,$1E,$0F	; 45-30-15 damage points
0006ECr 2  02 03 07 01  BOLTC:	.byte	$02,$03,$07,$01
0006F0r 2  90 48 20     BOLTE:	.byte	$90,$48,$20
0006F3r 2  02 04 06 06  BOLTX:	.byte	$02,$04,$06,$06,$06,$06,$06,$04,$02,$00,$FE,$FE,$FE,$FE,$FE,$00
0006F7r 2  06 06 06 04  
0006FBr 2  02 00 FE FE  
000703r 2  FD FD FE 00  BOLTY:	.byte	$FD,$FD,$FE,$00,$02,$04,$06,$07,$07,$07,$06,$04,$02,$00,$FE,$FD
000707r 2  02 04 06 07  
00070Br 2  07 07 06 04  
000713r 2  00 01 01 01  DDX:	.byte	$00,$01,$01,$01,$01,$01,$01,$01,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF
000717r 2  01 01 01 01  
00071Br 2  00 FF FF FF  
000723r 2  00 02 01 01  DDX2:	.byte	$00,$02,$01,$01,$01,$01,$01,$02,$00,$02,$01,$01,$01,$01,$01,$02
000727r 2  01 01 01 02  
00072Br 2  00 02 01 01  
000733r 2  FF FF FF FF  DDY:	.byte	$FF,$FF,$FF,$FF,$00,$01,$01,$01,$01,$01,$01,$01,$00,$FF,$FF,$FF
000737r 2  00 01 01 01  
00073Br 2  01 01 01 01  
000743r 2  01 01 01 02  DDY2:	.byte	$01,$01,$01,$02,$00,$02,$01,$01,$01,$01,$01,$02,$00,$02,$01,$01
000747r 2  00 02 01 01  
00074Br 2  01 01 01 02  
000753r 2  00 02 02 02  NDDX:	.byte	$00,$02,$02,$02,$02,$02,$02,$02,$00,$FE,$FE,$FE,$FE,$FE,$FE,$FE
000757r 2  02 02 02 02  
00075Br 2  00 FE FE FE  
000763r 2  FE FE FE FE  NDDY:	.byte	$FE,$FE,$FE,$FE,$00,$02,$02,$02,$02,$02,$02,$02,$00,$FE,$FE,$FE
000767r 2  00 02 02 02  
00076Br 2  02 02 02 02  
000773r 2               		; travel lane data
000773r 2               		; X outer left - right
000773r 2               		; X inner left - right
000773r 2               		; Y outer top - bottom
000773r 2               		; Y inner top - bottom
000773r 2  00 02 01 00  OUTER:	.byte	0,2,1,0,0	; Omega Fury and Thargoid destroyer travel between
000777r 2  00           
000778r 2  02 02 01 02  INNER:	.byte	2,2,1,2,0	; all lanes: OUTER=0 thru INNER=2
00077Cr 2  00           
00077Dr 2  10 20 38     OLX:	.byte	$10,$20,$38	; 0,2,5
000780r 2  A8 98 88     ORX:	.byte	$A8,$98,$88	; 19,17,15
000783r 2  10 20 40     OTY:	.byte	$10,$20,$40	; 0,2,6
000786r 2               		; top-left, bottom-right
000786r 2  00 00 57 5F  AREA:	.byte	 0*8,  0*8, 11*8-1, 12*8-1
00078Ar 2  58 00 6F 5F  		.byte	11*8,  0*8, 14*8-1, 12*8-1
00078Er 2  70 00 C7 5F  		.byte	14*8,  0*8, 25*8-1, 12*8-1
000792r 2  00 60 57 77  		.byte	 0*8, 12*8, 11*8-1, 15*8-1
000796r 2  58 60 6F 77  		.byte	11*8, 12*8, 14*8-1, 15*8-1
00079Ar 2  70 60 C7 77  		.byte	14*8, 12*8, 25*8-1, 15*8-1
00079Er 2  00 78 57 D7  		.byte	 0*8, 15*8, 11*8-1, 27*8-1
0007A2r 2  58 78 6F D7  		.byte	11*8, 15*8, 14*8-1, 27*8-1
0007A6r 2  70 78 C7 D7  		.byte	14*8, 15*8, 25*8-1, 27*8-1
0007AAr 2               		; up, right, down, left
0007AAr 2               AREADIR:
0007AAr 2  04 04 08 08  		.byte	 4, 4, 8, 8		; TL: R,R,D,D
0007AEr 2  0C 04 04 0C  		.byte	12, 4, 4,12		; TM: L,R,R,L
0007B2r 2  0C 08 08 0C  		.byte	12, 8, 8,12		; TR: L,D,D,L
0007B6r 2  00 08 08 00  		.byte	 0, 8, 8, 0		; ML: U,D,D,U
0007BAr 2  00 04 08 0C  		.byte	 0, 4, 8,12		; MM: U,R,D,L
0007BEr 2  00 00 08 08  		.byte	 0, 0, 8, 8		; MR: U,U,D,D
0007C2r 2  00 04 04 00  		.byte	 0, 4, 4, 0		; BL: U,R,R,U
0007C6r 2  0C 04 04 0C  		.byte	12, 4, 4,12		; BM: L,U,U,L
0007CAr 2  00 00 0C 0C  		.byte	 0, 0,12,12		; BR: U,U,L,L
0007CEr 2               		;
0007CEr 2               BOOMITC:
0007CEr 2  11 12 13 14  		.byte	$11, $12, $13, $14	; Q R S T
0007D2r 2               BOOMITX:
0007D2r 2  00 08 00 F8  		.byte	$00, $08, $00, $F8
0007D6r 2               BOOMITY:
0007D6r 2  F8 00 08 00  		.byte	$F8, $00, $08, $00
0007DAr 2               		;
0007DAr 2  03 10 25 50  VALUE:	.byte	$03, $10, $25, $50	; pts awarded per ship type destroyed
0007DEr 2               		;
0007DEr 2               VELOCITY:
0007DEr 2  80           		.byte	%10000000
0007DFr 2  88           		.byte	%10001000
0007E0r 2  92           		.byte	%10010010
0007E1r 2  55           		.byte	%01010101
0007E2r 2  6D           		.byte	%01101101
0007E3r 2  77           		.byte	%01110111
0007E4r 2  7F           		.byte	%01111111
0007E5r 2  FF           		.byte	%11111111
0007E6r 2               ;
0007E6r 2               MISSIONS:		; TRAINEE LEVEL
0007E6r 2  01 00 00 00  		.byte	$01,$00,$00,$00	; 00:	1 Scout (half-speed drone)
0007EAr 2  00 00 00 00  		.byte	$00,$00,$00,$00	;
0007EEr 2               				; SCOUT LEVEL
0007EEr 2  01 00 00 00  		.byte	$01,$00,$00,$00	; 01:	1 Scout
0007F2r 2  01 01 00 00  		.byte	$01,$01,$00,$00	;		1 grenade, 1 hull blaster
0007F6r 2  01 01 00 00  		.byte	$01,$01,$00,$00	; 02:	2 Scouts
0007FAr 2  02 01 00 00  		.byte	$02,$01,$00,$00	;		2 grenades, 1 hull blaster
0007FEr 2               				; DEFENDER LEVEL
0007FEr 2  01 01 01 00  		.byte	$01,$01,$01,$00	; 03:	3 Scouts
000802r 2  02 02 00 00  		.byte	$02,$02,$00,$00	;		2 grenades, 2 hull blasters
000806r 2  01 01 01 01  		.byte	$01,$01,$01,$01	; 04:	4 Scouts
00080Ar 2  04 02 00 00  		.byte	$04,$02,$00,$00	;		4 grenades, 2 hull blasters
00080Er 2  02 01 01 00  		.byte	$02,$01,$01,$00	; 05:	1 Cruiser, 2 Scouts
000812r 2  02 04 00 00  		.byte	$02,$04,$00,$00	;		2 grenades, 4 hull blasters
000816r 2               				; WARRIOR LEVEL
000816r 2  02 01 01 01  		.byte	$02,$01,$01,$01	; 06:	1 Cruiser, 3 Scouts
00081Ar 2  06 02 00 00  		.byte	$06,$02,$00,$00	;		6 grenades, 2 hull blasters
00081Er 2  02 02 01 00  		.byte	$02,$02,$01,$00	; 07:	2 Cruisers, 1 Scout
000822r 2  04 02 01 00  		.byte	$04,$02,$01,$00	;		4 grenades, 2 hull blasters, 1 sonic boomer
000826r 2  02 02 01 01  		.byte	$02,$02,$01,$01	; 08:	2 Cruisers, 2 Scouts
00082Ar 2  04 01 03 00  		.byte	$04,$01,$03,$00	;		4 grenades, 1 hull blaster, 3 sonic boomers
00082Er 2  03 02 01 00  		.byte	$03,$02,$01,$00	; 09:	1 Destroyer, 1 Cruiser, 1 Scout
000832r 2  04 01 01 00  		.byte	$04,$01,$01,$00	;		4 grenades, 1 hull blaster, 1 sonic boomer
000836r 2               				; CENTURION LEVEL
000836r 2  03 02 01 01  		.byte	$03,$02,$01,$01	; 10:	1 Destroyer, 1 Cruiser, 2 Scouts
00083Ar 2  04 02 01 00  		.byte	$04,$02,$01,$00	;		4 grenades, 2 hull blasters, 1 sonic boomer
00083Er 2  03 02 02 01  		.byte	$03,$02,$02,$01	; 11:	1 Destroyer, 2 Cruisers, 1 Scout
000842r 2  04 02 01 00  		.byte	$04,$02,$01,$00	;		4 grenades, 2 hull blasters, 1 sonic boomer
000846r 2  03 02 02 02  		.byte	$03,$02,$02,$02	; 12:	1 Destroyer, 3 Cruisers
00084Ar 2  04 02 02 00  		.byte	$04,$02,$02,$00	;		4 grenades, 2 hull blasters, 2 sonic boomers
00084Er 2  03 03 02 02  		.byte	$03,$03,$02,$02	; 13:	2 Destroyers, 2 Cruisers
000852r 2  03 01 01 01  		.byte	$03,$01,$01,$01	;		3 grenades, 1 each of all others
000856r 2  04 02 02 01  		.byte	$04,$02,$02,$01	; 14:	1 Carrier, 2 Cruisers, 1 Scout
00085Ar 2  05 01 01 01  		.byte	$05,$01,$01,$01	;		5 grenades, 1 each of all others
00085Er 2               				; PROTECTOR LEVEL
00085Er 2  04 03 02 01  		.byte	$04,$03,$02,$01	; 15:	1 Carrier, 1 Destroyer, 1 Cruiser, 1 Scout
000862r 2  04 02 02 02  		.byte	$04,$02,$02,$02	;		4 grenades, 2 each of all others
000866r 2               ;
000866r 2  rr rr rr rr  TITLES:	.word	@t0,@t1,@t2,@t3,@t4,@t5
00086Ar 2  rr rr rr rr  
00086Er 2  rr rr rr rr  
000872r 2  07 94 92 81  @t0:	.byte	$07,$94,$92,$81,$89,$8E,$85,$85,$00			; TRAINEE
000876r 2  89 8E 85 85  
00087Ar 2  00           
00087Br 2  08 93 83 8F  @t1:	.byte	$08,$93,$83,$8F,$95,$94,$00					; SCOUT
00087Fr 2  95 94 00     
000882r 2  06 84 85 86  @t2:	.byte	$06,$84,$85,$86,$85,$8E,$84,$85,$92,$00		; DEFENDER
000886r 2  85 8E 84 85  
00088Ar 2  92 00        
00088Cr 2  07 97 81 92  @t3:	.byte	$07,$97,$81,$92,$92,$89,$8F,$92,$00			; WARRIOR
000890r 2  92 89 8F 92  
000894r 2  00           
000895r 2  06 83 85 8E  @t4:	.byte	$06,$83,$85,$8E,$94,$95,$92,$89,$8F,$8E,$00	; CENTURION
000899r 2  94 95 92 89  
00089Dr 2  8F 8E 00     
0008A0r 2  06 90 92 8F  @t5:	.byte	$06,$90,$92,$8F,$94,$85,$83,$94,$8F,$92,$00	; PROTECTOR
0008A4r 2  94 85 83 94  
0008A8r 2  8F 92 00     
0008ABr 2               
0008ABr 2               ;*********************************************************************
0008ABr 2               ; CUSTOM CHARACTER DATA
0008ABr 2               ;
0008ABr 2               ; center Omegan objectives (3x3 character matrix)
0008ABr 2               ; @AB
0008ABr 2               ; CDE
0008ABr 2               ; FGH
0008ABr 2               ;
0008ABr 2               ACADEMY:
0008ABr 2  FF           		.byte	%11111111
0008ACr 2  00           		.byte	%00000000
0008ADr 2  3F           		.byte	%00111111
0008AEr 2  00           		.byte	%00000000
0008AFr 2  0F           		.byte	%00001111
0008B0r 2  00           		.byte	%00000000
0008B1r 2  03           		.byte	%00000011
0008B2r 2  00           		.byte	%00000000
0008B3r 2               ;
0008B3r 2  00           		.byte	%00000000
0008B4r 2  02           		.byte	%00000010
0008B5r 2  08           		.byte	%00001000
0008B6r 2  20           		.byte	%00100000
0008B7r 2  80           		.byte	%10000000
0008B8r 2  80           		.byte	%10000000
0008B9r 2  AA           		.byte	%10101010
0008BAr 2  2A           		.byte	%00101010
0008BBr 2               ;
0008BBr 2  0A           		.byte	%00001010
0008BCr 2  0A           		.byte	%00001010
0008BDr 2  02           		.byte	%00000010
0008BEr 2  00           		.byte	%00000000
0008BFr 2  00           		.byte	%00000000
0008C0r 2  00           		.byte	%00000000
0008C1r 2  00           		.byte	%00000000
0008C2r 2  01           		.byte	%00000001
0008C3r 2               ;mid
0008C3r 2  FC           		.byte	%11111100
0008C4r 2  00           		.byte	%00000000
0008C5r 2  FC           		.byte	%11111100
0008C6r 2  00           		.byte	%00000000
0008C7r 2  FC           		.byte	%11111100
0008C8r 2  00           		.byte	%00000000
0008C9r 2  FE           		.byte	%11111110
0008CAr 2  28           		.byte	%00101000
0008CBr 2               ;
0008CBr 2  FC           		.byte	%11111100
0008CCr 2  00           		.byte	%00000000
0008CDr 2  3C           		.byte	%00111100
0008CEr 2  00           		.byte	%00000000
0008CFr 2  00           		.byte	%00000000
0008D0r 2  2A           		.byte	%00101010
0008D1r 2  AA           		.byte	%10101010
0008D2r 2  AA           		.byte	%10101010
0008D3r 2               ;
0008D3r 2  AA           		.byte	%10101010
0008D4r 2  AA           		.byte	%10101010
0008D5r 2  AA           		.byte	%10101010
0008D6r 2  0A           		.byte	%00001010
0008D7r 2  0A           		.byte	%00001010
0008D8r 2  0A           		.byte	%00001010
0008D9r 2  15           		.byte	%00010101
0008DAr 2  55           		.byte	%01010101
0008DBr 2               ;right
0008DBr 2  00           		.byte	%00000000
0008DCr 2  00           		.byte	%00000000
0008DDr 2  00           		.byte	%00000000
0008DEr 2  00           		.byte	%00000000
0008DFr 2  00           		.byte	%00000000
0008E0r 2  28           		.byte	%00101000
0008E1r 2  82           		.byte	%10000010
0008E2r 2  02           		.byte	%00000010
0008E3r 2               ;
0008E3r 2  02           		.byte	%00000010
0008E4r 2  0A           		.byte	%00001010
0008E5r 2  0A           		.byte	%00001010
0008E6r 2  2A           		.byte	%00101010
0008E7r 2  AA           		.byte	%10101010
0008E8r 2  A8           		.byte	%10101000
0008E9r 2  A8           		.byte	%10101000
0008EAr 2  A8           		.byte	%10101000
0008EBr 2               ;
0008EBr 2  A0           		.byte	%10100000
0008ECr 2  A0           		.byte	%10100000
0008EDr 2  00           		.byte	%00000000
0008EEr 2  00           		.byte	%00000000
0008EFr 2  00           		.byte	%00000000
0008F0r 2  00           		.byte	%00000000
0008F1r 2  40           		.byte	%01000000
0008F2r 2  54           		.byte	%01010100
0008F3r 2               ;
0008F3r 2               STARGATE:
0008F3r 2  2A           		.byte	%00101010
0008F4r 2  21           		.byte	%00100001
0008F5r 2  21           		.byte	%00100001
0008F6r 2  21           		.byte	%00100001
0008F7r 2  83           		.byte	%10000011
0008F8r 2  8C           		.byte	%10001100
0008F9r 2  8C           		.byte	%10001100
0008FAr 2  8C           		.byte	%10001100
0008FBr 2               ;
0008FBr 2  8C           		.byte	%10001100
0008FCr 2  AC           		.byte	%10101100
0008FDr 2  AC           		.byte	%10101100
0008FEr 2  1C           		.byte	%00011100
0008FFr 2  1C           		.byte	%00011100
000900r 2  AC           		.byte	%10101100
000901r 2  AC           		.byte	%10101100
000902r 2  8C           		.byte	%10001100
000903r 2               ;
000903r 2  8C           		.byte	%10001100
000904r 2  8C           		.byte	%10001100
000905r 2  8C           		.byte	%10001100
000906r 2  83           		.byte	%10000011
000907r 2  21           		.byte	%00100001
000908r 2  21           		.byte	%00100001
000909r 2  21           		.byte	%00100001
00090Ar 2  2A           		.byte	%00101010
00090Br 2               ;mid
00090Br 2  55           		.byte	%01010101
00090Cr 2  55           		.byte	%01010101
00090Dr 2  00           		.byte	%00000000
00090Er 2  14           		.byte	%00010100
00090Fr 2  00           		.byte	%00000000
000910r 2  3C           		.byte	%00111100
000911r 2  00           		.byte	%00000000
000912r 2  00           		.byte	%00000000
000913r 2               ;
000913r 2  00           		.byte	%00000000
000914r 2  00           		.byte	%00000000
000915r 2  00           		.byte	%00000000
000916r 2  00           		.byte	%00000000
000917r 2  00           		.byte	%00000000
000918r 2  00           		.byte	%00000000
000919r 2  00           		.byte	%00000000
00091Ar 2  00           		.byte	%00000000
00091Br 2               ;
00091Br 2  00           		.byte	%00000000
00091Cr 2  00           		.byte	%00000000
00091Dr 2  3C           		.byte	%00111100
00091Er 2  00           		.byte	%00000000
00091Fr 2  14           		.byte	%00010100
000920r 2  00           		.byte	%00000000
000921r 2  55           		.byte	%01010101
000922r 2  55           		.byte	%01010101
000923r 2               ;right
000923r 2  A8           		.byte	%10101000
000924r 2  48           		.byte	%01001000
000925r 2  48           		.byte	%01001000
000926r 2  48           		.byte	%01001000
000927r 2  C2           		.byte	%11000010
000928r 2  32           		.byte	%00110010
000929r 2  32           		.byte	%00110010
00092Ar 2  32           		.byte	%00110010
00092Br 2               
00092Br 2               ;
00092Br 2  32           		.byte	%00110010
00092Cr 2  3A           		.byte	%00111010
00092Dr 2  3A           		.byte	%00111010
00092Er 2  34           		.byte	%00110100
00092Fr 2  34           		.byte	%00110100
000930r 2  3A           		.byte	%00111010
000931r 2  3A           		.byte	%00111010
000932r 2  32           		.byte	%00110010
000933r 2               ;
000933r 2  32           		.byte	%00110010
000934r 2  32           		.byte	%00110010
000935r 2  32           		.byte	%00110010
000936r 2  C2           		.byte	%11000010
000937r 2  48           		.byte	%01001000
000938r 2  48           		.byte	%01001000
000939r 2  48           		.byte	%01001000
00093Ar 2  A8           		.byte	%10101000
00093Br 2               ;
00093Br 2               CARGOSHIP:
00093Br 2  00           		.byte	%00000000
00093Cr 2  00           		.byte	%00000000
00093Dr 2  00           		.byte	%00000000
00093Er 2  00           		.byte	%00000000
00093Fr 2  50           		.byte	%01010000
000940r 2  A1           		.byte	%10100001
000941r 2  AA           		.byte	%10101010
000942r 2  AA           		.byte	%10101010
000943r 2               ;
000943r 2  AA           		.byte	%10101010
000944r 2  AA           		.byte	%10101010
000945r 2  8A           		.byte	%10001010
000946r 2  88           		.byte	%10001000
000947r 2  A8           		.byte	%10101000
000948r 2  AA           		.byte	%10101010
000949r 2  AA           		.byte	%10101010
00094Ar 2  AA           		.byte	%10101010
00094Br 2               ;
00094Br 2  AA           		.byte	%10101010
00094Cr 2  AA           		.byte	%10101010
00094Dr 2  AA           		.byte	%10101010
00094Er 2  20           		.byte	%00100000
00094Fr 2  2A           		.byte	%00101010
000950r 2  08           		.byte	%00001000
000951r 2  02           		.byte	%00000010
000952r 2  00           		.byte	%00000000
000953r 2               ;mid
000953r 2  3C           		.byte	%00111100
000954r 2  55           		.byte	%01010101
000955r 2  28           		.byte	%00101000
000956r 2  28           		.byte	%00101000
000957r 2  28           		.byte	%00101000
000958r 2  28           		.byte	%00101000
000959r 2  55           		.byte	%01010101
00095Ar 2  AA           		.byte	%10101010
00095Br 2               ;
00095Br 2  AA           		.byte	%10101010
00095Cr 2  AA           		.byte	%10101010
00095Dr 2  AA           		.byte	%10101010
00095Er 2  AA           		.byte	%10101010
00095Fr 2  82           		.byte	%10000010
000960r 2  82           		.byte	%10000010
000961r 2  AA           		.byte	%10101010
000962r 2  AA           		.byte	%10101010
000963r 2               ;
000963r 2  AA           		.byte	%10101010
000964r 2  AA           		.byte	%10101010
000965r 2  00           		.byte	%00000000
000966r 2  AA           		.byte	%10101010
000967r 2  00           		.byte	%00000000
000968r 2  AA           		.byte	%10101010
000969r 2  00           		.byte	%00000000
00096Ar 2  AA           		.byte	%10101010
00096Br 2               ;right
00096Br 2  00           		.byte	%00000000
00096Cr 2  00           		.byte	%00000000
00096Dr 2  00           		.byte	%00000000
00096Er 2  00           		.byte	%00000000
00096Fr 2  05           		.byte	%00000101
000970r 2  4A           		.byte	%01001010
000971r 2  AA           		.byte	%10101010
000972r 2  AA           		.byte	%10101010
000973r 2               ;
000973r 2  AA           		.byte	%10101010
000974r 2  AA           		.byte	%10101010
000975r 2  A2           		.byte	%10100010
000976r 2  22           		.byte	%00100010
000977r 2  2A           		.byte	%00101010
000978r 2  AA           		.byte	%10101010
000979r 2  AA           		.byte	%10101010
00097Ar 2  AA           		.byte	%10101010
00097Br 2               ;
00097Br 2  AA           		.byte	%10101010
00097Cr 2  AA           		.byte	%10101010
00097Dr 2  AA           		.byte	%10101010
00097Er 2  08           		.byte	%00001000
00097Fr 2  A8           		.byte	%10101000
000980r 2  20           		.byte	%00100000
000981r 2  80           		.byte	%10000000
000982r 2  00           		.byte	%00000000
000983r 2               ;
000983r 2               MEDICALSHIP:
000983r 2  00           		.byte	%00000000
000984r 2  03           		.byte	%00000011
000985r 2  0E           		.byte	%00001110
000986r 2  0E           		.byte	%00001110
000987r 2  3A           		.byte	%00111010
000988r 2  3A           		.byte	%00111010
000989r 2  3A           		.byte	%00111010
00098Ar 2  EA           		.byte	%11101010
00098Br 2               ;
00098Br 2  EA           		.byte	%11101010
00098Cr 2  EA           		.byte	%11101010
00098Dr 2  E9           		.byte	%11101001
00098Er 2  E9           		.byte	%11101001
00098Fr 2  E9           		.byte	%11101001
000990r 2  E9           		.byte	%11101001
000991r 2  EA           		.byte	%11101010
000992r 2  EA           		.byte	%11101010
000993r 2               ;
000993r 2  EA           		.byte	%11101010
000994r 2  3A           		.byte	%00111010
000995r 2  3A           		.byte	%00111010
000996r 2  3A           		.byte	%00111010
000997r 2  0E           		.byte	%00001110
000998r 2  0E           		.byte	%00001110
000999r 2  03           		.byte	%00000011
00099Ar 2  00           		.byte	%00000000
00099Br 2               ;mid
00099Br 2  FF           		.byte	%11111111
00099Cr 2  FF           		.byte	%11111111
00099Dr 2  AA           		.byte	%10101010
00099Er 2  AA           		.byte	%10101010
00099Fr 2  AA           		.byte	%10101010
0009A0r 2  96           		.byte	%10010110
0009A1r 2  96           		.byte	%10010110
0009A2r 2  96           		.byte	%10010110
0009A3r 2               ;
0009A3r 2  96           		.byte	%10010110
0009A4r 2  96           		.byte	%10010110
0009A5r 2  55           		.byte	%01010101
0009A6r 2  55           		.byte	%01010101
0009A7r 2  55           		.byte	%01010101
0009A8r 2  55           		.byte	%01010101
0009A9r 2  96           		.byte	%10010110
0009AAr 2  96           		.byte	%10010110
0009ABr 2               ;
0009ABr 2  96           		.byte	%10010110
0009ACr 2  96           		.byte	%10010110
0009ADr 2  96           		.byte	%10010110
0009AEr 2  AA           		.byte	%10101010
0009AFr 2  AA           		.byte	%10101010
0009B0r 2  AA           		.byte	%10101010
0009B1r 2  FF           		.byte	%11111111
0009B2r 2  FF           		.byte	%11111111
0009B3r 2               ;right
0009B3r 2  00           		.byte	%00000000
0009B4r 2  C0           		.byte	%11000000
0009B5r 2  B0           		.byte	%10110000
0009B6r 2  B0           		.byte	%10110000
0009B7r 2  AC           		.byte	%10101100
0009B8r 2  AC           		.byte	%10101100
0009B9r 2  AC           		.byte	%10101100
0009BAr 2  AB           		.byte	%10101011
0009BBr 2               ;
0009BBr 2  AB           		.byte	%10101011
0009BCr 2  AB           		.byte	%10101011
0009BDr 2  6B           		.byte	%01101011
0009BEr 2  6B           		.byte	%01101011
0009BFr 2  6B           		.byte	%01101011
0009C0r 2  6B           		.byte	%01101011
0009C1r 2  AB           		.byte	%10101011
0009C2r 2  AB           		.byte	%10101011
0009C3r 2               ;
0009C3r 2  AB           		.byte	%10101011
0009C4r 2  AC           		.byte	%10101100
0009C5r 2  AC           		.byte	%10101100
0009C6r 2  AC           		.byte	%10101100
0009C7r 2  B0           		.byte	%10110000
0009C8r 2  B0           		.byte	%10110000
0009C9r 2  C0           		.byte	%11000000
0009CAr 2  00           		.byte	%00000000
0009CBr 2               ;
0009CBr 2               WEAPONSHIP:
0009CBr 2  3F           		.byte	%00111111
0009CCr 2  3F           		.byte	%00111111
0009CDr 2  0A           		.byte	%00001010
0009CEr 2  0A           		.byte	%00001010
0009CFr 2  0A           		.byte	%00001010
0009D0r 2  0A           		.byte	%00001010
0009D1r 2  0A           		.byte	%00001010
0009D2r 2  05           		.byte	%00000101
0009D3r 2               ;
0009D3r 2  05           		.byte	%00000101
0009D4r 2  16           		.byte	%00010110
0009D5r 2  16           		.byte	%00010110
0009D6r 2  55           		.byte	%01010101
0009D7r 2  55           		.byte	%01010101
0009D8r 2  16           		.byte	%00010110
0009D9r 2  16           		.byte	%00010110
0009DAr 2  05           		.byte	%00000101
0009DBr 2               ;
0009DBr 2  05           		.byte	%00000101
0009DCr 2  0A           		.byte	%00001010
0009DDr 2  0A           		.byte	%00001010
0009DEr 2  0A           		.byte	%00001010
0009DFr 2  0A           		.byte	%00001010
0009E0r 2  0A           		.byte	%00001010
0009E1r 2  3F           		.byte	%00111111
0009E2r 2  3F           		.byte	%00111111
0009E3r 2               ;mid
0009E3r 2  F0           		.byte	%11110000
0009E4r 2  FC           		.byte	%11111100
0009E5r 2  AC           		.byte	%10101100
0009E6r 2  AB           		.byte	%10101011
0009E7r 2  AB           		.byte	%10101011
0009E8r 2  AA           		.byte	%10101010
0009E9r 2  AA           		.byte	%10101010
0009EAr 2  AA           		.byte	%10101010
0009EBr 2               ;
0009EBr 2  AA           		.byte	%10101010
0009ECr 2  AB           		.byte	%10101011
0009EDr 2  AB           		.byte	%10101011
0009EEr 2  5F           		.byte	%01011111
0009EFr 2  5F           		.byte	%01011111
0009F0r 2  AB           		.byte	%10101011
0009F1r 2  AB           		.byte	%10101011
0009F2r 2  AA           		.byte	%10101010
0009F3r 2               ;
0009F3r 2  AA           		.byte	%10101010
0009F4r 2  AA           		.byte	%10101010
0009F5r 2  AA           		.byte	%10101010
0009F6r 2  AB           		.byte	%10101011
0009F7r 2  AB           		.byte	%10101011
0009F8r 2  AC           		.byte	%10101100
0009F9r 2  FC           		.byte	%11111100
0009FAr 2  F0           		.byte	%11110000
0009FBr 2               ;right
0009FBr 2  00           		.byte	%00000000
0009FCr 2  00           		.byte	%00000000
0009FDr 2  00           		.byte	%00000000
0009FEr 2  00           		.byte	%00000000
0009FFr 2  00           		.byte	%00000000
000A00r 2  C0           		.byte	%11000000
000A01r 2  C0           		.byte	%11000000
000A02r 2  B0           		.byte	%10110000
000A03r 2               ;
000A03r 2  B0           		.byte	%10110000
000A04r 2  C0           		.byte	%11000000
000A05r 2  C0           		.byte	%11000000
000A06r 2  AA           		.byte	%10101010
000A07r 2  AA           		.byte	%10101010
000A08r 2  C0           		.byte	%11000000
000A09r 2  C0           		.byte	%11000000
000A0Ar 2  B0           		.byte	%10110000
000A0Br 2               ;
000A0Br 2  B0           		.byte	%10110000
000A0Cr 2  C0           		.byte	%11000000
000A0Dr 2  C0           		.byte	%11000000
000A0Er 2  00           		.byte	%00000000
000A0Fr 2  00           		.byte	%00000000
000A10r 2  00           		.byte	%00000000
000A11r 2  00           		.byte	%00000000
000A12r 2  00           		.byte	%00000000
000A13r 2               ;
000A13r 2               COLONISTS:
000A13r 2  00           		.byte	%00000000
000A14r 2  00           		.byte	%00000000
000A15r 2  03           		.byte	%00000011
000A16r 2  03           		.byte	%00000011
000A17r 2  0E           		.byte	%00001110
000A18r 2  0E           		.byte	%00001110
000A19r 2  3A           		.byte	%00111010
000A1Ar 2  39           		.byte	%00111001
000A1Br 2               ;
000A1Br 2  E9           		.byte	%11101001
000A1Cr 2  E6           		.byte	%11100110
000A1Dr 2  E6           		.byte	%11100110
000A1Er 2  E6           		.byte	%11100110
000A1Fr 2  E6           		.byte	%11100110
000A20r 2  E6           		.byte	%11100110
000A21r 2  E6           		.byte	%11100110
000A22r 2  E9           		.byte	%11101001
000A23r 2               ;
000A23r 2  E9           		.byte	%11101001
000A24r 2  EA           		.byte	%11101010
000A25r 2  E9           		.byte	%11101001
000A26r 2  E9           		.byte	%11101001
000A27r 2  3A           		.byte	%00111010
000A28r 2  3A           		.byte	%00111010
000A29r 2  0F           		.byte	%00001111
000A2Ar 2  0F           		.byte	%00001111
000A2Br 2               ;mid
000A2Br 2  FF           		.byte	%11111111
000A2Cr 2  FF           		.byte	%11111111
000A2Dr 2  AA           		.byte	%10101010
000A2Er 2  AA           		.byte	%10101010
000A2Fr 2  96           		.byte	%10010110
000A30r 2  55           		.byte	%01010101
000A31r 2  69           		.byte	%01101001
000A32r 2  AA           		.byte	%10101010
000A33r 2               ;
000A33r 2  AA           		.byte	%10101010
000A34r 2  AA           		.byte	%10101010
000A35r 2  AA           		.byte	%10101010
000A36r 2  AA           		.byte	%10101010
000A37r 2  AA           		.byte	%10101010
000A38r 2  AA           		.byte	%10101010
000A39r 2  AA           		.byte	%10101010
000A3Ar 2  69           		.byte	%01101001
000A3Br 2               ;
000A3Br 2  69           		.byte	%01101001
000A3Cr 2  69           		.byte	%01101001
000A3Dr 2  69           		.byte	%01101001
000A3Er 2  69           		.byte	%01101001
000A3Fr 2  AA           		.byte	%10101010
000A40r 2  AA           		.byte	%10101010
000A41r 2  FF           		.byte	%11111111
000A42r 2  FF           		.byte	%11111111
000A43r 2               ;right
000A43r 2  00           		.byte	%00000000
000A44r 2  00           		.byte	%00000000
000A45r 2  C0           		.byte	%11000000
000A46r 2  C0           		.byte	%11000000
000A47r 2  B0           		.byte	%10110000
000A48r 2  B0           		.byte	%10110000
000A49r 2  AC           		.byte	%10101100
000A4Ar 2  6C           		.byte	%01101100
000A4Br 2               ;
000A4Br 2  6B           		.byte	%01101011
000A4Cr 2  9B           		.byte	%10011011
000A4Dr 2  9B           		.byte	%10011011
000A4Er 2  9B           		.byte	%10011011
000A4Fr 2  9B           		.byte	%10011011
000A50r 2  9B           		.byte	%10011011
000A51r 2  9B           		.byte	%10011011
000A52r 2  6B           		.byte	%01101011
000A53r 2               ;
000A53r 2  6B           		.byte	%01101011
000A54r 2  AB           		.byte	%10101011
000A55r 2  6B           		.byte	%01101011
000A56r 2  6B           		.byte	%01101011
000A57r 2  AC           		.byte	%10101100
000A58r 2  AC           		.byte	%10101100
000A59r 2  F0           		.byte	%11110000
000A5Ar 2  F0           		.byte	%11110000
000A5Br 2               ;
000A5Br 2               ; Thargoid mines $1C48-$1C87 (I-P)
000A5Br 2               GRENADE1:
000A5Br 2  18           		.byte	%00011000
000A5Cr 2  24           		.byte	%00100100
000A5Dr 2  5A           		.byte	%01011010
000A5Er 2  A5           		.byte	%10100101
000A5Fr 2  A5           		.byte	%10100101
000A60r 2  5A           		.byte	%01011010
000A61r 2  24           		.byte	%00100100
000A62r 2  18           		.byte	%00011000
000A63r 2               GRENADE2:
000A63r 2  00           		.byte	%00000000
000A64r 2  18           		.byte	%00011000
000A65r 2  24           		.byte	%00100100
000A66r 2  5A           		.byte	%01011010
000A67r 2  5A           		.byte	%01011010
000A68r 2  24           		.byte	%00100100
000A69r 2  18           		.byte	%00011000
000A6Ar 2  00           		.byte	%00000000
000A6Br 2               HULLBLASTER1:
000A6Br 2  00           		.byte	%00000000
000A6Cr 2  18           		.byte	%00011000
000A6Dr 2  3C           		.byte	%00111100
000A6Er 2  3C           		.byte	%00111100
000A6Fr 2  18           		.byte	%00011000
000A70r 2  3C           		.byte	%00111100
000A71r 2  18           		.byte	%00011000
000A72r 2  00           		.byte	%00000000
000A73r 2               HULLBLASTER2:
000A73r 2  81           		.byte	%10000001
000A74r 2  5A           		.byte	%01011010
000A75r 2  3C           		.byte	%00111100
000A76r 2  3C           		.byte	%00111100
000A77r 2  18           		.byte	%00011000
000A78r 2  3C           		.byte	%00111100
000A79r 2  5A           		.byte	%01011010
000A7Ar 2  81           		.byte	%10000001
000A7Br 2               SONICBOOMER1:
000A7Br 2  42           		.byte	%01000010
000A7Cr 2  81           		.byte	%10000001
000A7Dr 2  99           		.byte	%10011001
000A7Er 2  BD           		.byte	%10111101
000A7Fr 2  BD           		.byte	%10111101
000A80r 2  99           		.byte	%10011001
000A81r 2  81           		.byte	%10000001
000A82r 2  42           		.byte	%01000010
000A83r 2               SONICBOOMER2:
000A83r 2  00           		.byte	%00000000
000A84r 2  24           		.byte	%00100100
000A85r 2  42           		.byte	%01000010
000A86r 2  5A           		.byte	%01011010
000A87r 2  5A           		.byte	%01011010
000A88r 2  42           		.byte	%01000010
000A89r 2  24           		.byte	%00100100
000A8Ar 2  00           		.byte	%00000000
000A8Br 2               HEARTSTOPPER1:
000A8Br 2  24           		.byte	%00100100
000A8Cr 2  7E           		.byte	%01111110
000A8Dr 2  7E           		.byte	%01111110
000A8Er 2  7E           		.byte	%01111110
000A8Fr 2  7E           		.byte	%01111110
000A90r 2  3C           		.byte	%00111100
000A91r 2  18           		.byte	%00011000
000A92r 2  00           		.byte	%00000000
000A93r 2               HEARTSTOPPER2:
000A93r 2  66           		.byte	%01100110
000A94r 2  FF           		.byte	%11111111
000A95r 2  FF           		.byte	%11111111
000A96r 2  FF           		.byte	%11111111
000A97r 2  FF           		.byte	%11111111
000A98r 2  7E           		.byte	%01111110
000A99r 2  3C           		.byte	%00111100
000A9Ar 2  18           		.byte	%00011000
000A9Br 2               ;
000A9Br 2               ; Sonic boomer waves $1C88-$1CA7 (Q-T)
000A9Br 2               SONICWAVE0:
000A9Br 2  3C           		.byte	%00111100
000A9Cr 2  C3           		.byte	%11000011
000A9Dr 2  00           		.byte	%00000000
000A9Er 2  3C           		.byte	%00111100
000A9Fr 2  42           		.byte	%01000010
000AA0r 2  00           		.byte	%00000000
000AA1r 2  18           		.byte	%00011000
000AA2r 2  24           		.byte	%00100100
000AA3r 2               SONICWAVE1:
000AA3r 2  02           		.byte	%00000010
000AA4r 2  12           		.byte	%00010010
000AA5r 2  89           		.byte	%10001001
000AA6r 2  49           		.byte	%01001001
000AA7r 2  49           		.byte	%01001001
000AA8r 2  89           		.byte	%10001001
000AA9r 2  12           		.byte	%00010010
000AAAr 2  02           		.byte	%00000010
000AABr 2               SONICWAVE2:
000AABr 2  24           		.byte	%00100100
000AACr 2  18           		.byte	%00011000
000AADr 2  00           		.byte	%00000000
000AAEr 2  42           		.byte	%01000010
000AAFr 2  3C           		.byte	%00111100
000AB0r 2  00           		.byte	%00000000
000AB1r 2  C3           		.byte	%11000011
000AB2r 2  3C           		.byte	%00111100
000AB3r 2               SONICWAVE3:
000AB3r 2  40           		.byte	%01000000
000AB4r 2  48           		.byte	%01001000
000AB5r 2  91           		.byte	%10010001
000AB6r 2  92           		.byte	%10010010
000AB7r 2  92           		.byte	%10010010
000AB8r 2  91           		.byte	%10010001
000AB9r 2  48           		.byte	%01001000
000ABAr 2  40           		.byte	%01000000
000ABBr 2               ;
000ABBr 2               ; Function key: $1F30-$1F3F
000ABBr 2  FF EA EF EF  F1:		.byte	$FF, $EA, $EF, $EF, $EB, $EF, $EF, $FF	; [F
000ABFr 2  EB EF EF FF  
000AC3r 2  FC EC EC EC  		.byte	$FC, $EC, $EC, $EC, $EC, $EC, $EC, $FC	;  1]
000AC7r 2  EC EC EC FC  
000ACBr 2               
000ACBr 2               ;*********************************************************************
000ACBr 2               ; SPRITE IMAGE DATA
000ACBr 2               ;
000ACBr 2               ; SPRITE #0-1-2:
000ACBr 2               ; Omega Fury energy bolts
000ACBr 2               ;
000ACBr 2               BOLTIMG0:
000ACBr 2  40           		.byte	%01000000
000ACCr 2  A0           		.byte	%10100000
000ACDr 2  40           		.byte	%01000000
000ACEr 2               BOLTIMG1:
000ACEr 2  A0           		.byte	%10100000
000ACFr 2  40           		.byte	%01000000
000AD0r 2  A0           		.byte	%10100000
000AD1r 2               BOLTIMG2:
000AD1r 2  40           		.byte	%01000000
000AD2r 2  E0           		.byte	%11100000
000AD3r 2  40           		.byte	%01000000
000AD4r 2               BOLTIMG3:
000AD4r 2  00           		.byte	%00000000
000AD5r 2  E0           		.byte	%11100000
000AD6r 2  00           		.byte	%00000000
000AD7r 2               ;
000AD7r 2               ; SPRITE #3-4-5-6:
000AD7r 2               ; phaser shot type for scout-cruiser-destroyer-carrier
000AD7r 2               ;
000AD7r 2               PHASER0:
000AD7r 2  90           		.byte	%10010000
000AD8r 2  00           		.byte	%00000000
000AD9r 2  90           		.byte	%10010000
000ADAr 2               PHASER1:
000ADAr 2  60           		.byte	%01100000
000ADBr 2  90           		.byte	%10010000
000ADCr 2  60           		.byte	%01100000
000ADDr 2               PHASER2:
000ADDr 2  60           		.byte	%01100000
000ADEr 2  F0           		.byte	%11110000
000ADFr 2  60           		.byte	%01100000
000AE0r 2               PHASER3:
000AE0r 2  F0           		.byte	%11110000
000AE1r 2  F0           		.byte	%11110000
000AE2r 2  F0           		.byte	%11110000
000AE3r 2               ;
000AE3r 2               ; SPRITE #7:
000AE3r 2               ; neutron bomb
000AE3r 2               ;
000AE3r 2               NEUTRONBOMB:
000AE3r 2  FF           		.byte	%11111111
000AE4r 2  3C           		.byte	%00111100
000AE5r 2  FF           		.byte	%11111111
000AE6r 2  FF           		.byte	%11111111
000AE7r 2  FF           		.byte	%11111111
000AE8r 2  FF           		.byte	%11111111
000AE9r 2  7E           		.byte	%01111110
000AEAr 2  3C           		.byte	%00111100
000AEBr 2               ;
000AEBr 2               ; SPRITES #8-9-10-11:
000AEBr 2               ; a mix of Thargoid scout, cruiser, destroyer, carrier
000AEBr 2               ;
000AEBr 2               SCOUT0:	;
000AEBr 2  81           		.byte	%10000001
000AECr 2  3C           		.byte	%00111100
000AEDr 2  7E           		.byte	%01111110
000AEEr 2  7E           		.byte	%01111110
000AEFr 2  7E           		.byte	%01111110
000AF0r 2  7E           		.byte	%01111110
000AF1r 2  3C           		.byte	%00111100
000AF2r 2  81           		.byte	%10000001
000AF3r 2               SCOUT1:	;
000AF3r 2  20           		.byte	%00100000
000AF4r 2  1C           		.byte	%00011100
000AF5r 2  7D           		.byte	%01111101
000AF6r 2  7E           		.byte	%01111110
000AF7r 2  7E           		.byte	%01111110
000AF8r 2  BE           		.byte	%10111110
000AF9r 2  38           		.byte	%00111000
000AFAr 2  04           		.byte	%00000100
000AFBr 2               SCOUT2:	;
000AFBr 2  10           		.byte	%00010000
000AFCr 2  2C           		.byte	%00101100
000AFDr 2  7E           		.byte	%01111110
000AFEr 2  7D           		.byte	%01111101
000AFFr 2  BE           		.byte	%10111110
000B00r 2  7E           		.byte	%01111110
000B01r 2  34           		.byte	%00110100
000B02r 2  08           		.byte	%00001000
000B03r 2               SCOUT3:	;
000B03r 2  08           		.byte	%00001000
000B04r 2  34           		.byte	%00110100
000B05r 2  7E           		.byte	%01111110
000B06r 2  BE           		.byte	%10111110
000B07r 2  7D           		.byte	%01111101
000B08r 2  7E           		.byte	%01111110
000B09r 2  2C           		.byte	%00101100
000B0Ar 2  10           		.byte	%00010000
000B0Br 2               SCOUT4:	;
000B0Br 2  04           		.byte	%00000100
000B0Cr 2  38           		.byte	%00111000
000B0Dr 2  BE           		.byte	%10111110
000B0Er 2  7E           		.byte	%01111110
000B0Fr 2  7E           		.byte	%01111110
000B10r 2  7D           		.byte	%01111101
000B11r 2  1C           		.byte	%00011100
000B12r 2  20           		.byte	%00100000
000B13r 2               		;
000B13r 2               CRUISER0:
000B13r 2  81           		.byte	%10000001
000B14r 2  81           		.byte	%10000001
000B15r 2  81           		.byte	%10000001
000B16r 2  99           		.byte	%10011001
000B17r 2  99           		.byte	%10011001
000B18r 2  BD           		.byte	%10111101
000B19r 2  DB           		.byte	%11011011
000B1Ar 2  81           		.byte	%10000001
000B1Br 2               CRUISER1:
000B1Br 2  10           		.byte	%00010000
000B1Cr 2  20           		.byte	%00100000
000B1Dr 2  40           		.byte	%01000000
000B1Er 2  D8           		.byte	%11011000
000B1Fr 2  39           		.byte	%00111001
000B20r 2  32           		.byte	%00110010
000B21r 2  0C           		.byte	%00001100
000B22r 2  08           		.byte	%00001000
000B23r 2               CRUISER2:
000B23r 2  FF           		.byte	%11111111
000B24r 2  40           		.byte	%01000000
000B25r 2  20           		.byte	%00100000
000B26r 2  78           		.byte	%01111000
000B27r 2  78           		.byte	%01111000
000B28r 2  20           		.byte	%00100000
000B29r 2  40           		.byte	%01000000
000B2Ar 2  FF           		.byte	%11111111
000B2Br 2               CRUISER3:
000B2Br 2  08           		.byte	%00001000
000B2Cr 2  0C           		.byte	%00001100
000B2Dr 2  32           		.byte	%00110010
000B2Er 2  39           		.byte	%00111001
000B2Fr 2  D8           		.byte	%11011000
000B30r 2  40           		.byte	%01000000
000B31r 2  20           		.byte	%00100000
000B32r 2  10           		.byte	%00010000
000B33r 2               CRUISER4:
000B33r 2  81           		.byte	%10000001
000B34r 2  DB           		.byte	%11011011
000B35r 2  BD           		.byte	%10111101
000B36r 2  99           		.byte	%10011001
000B37r 2  99           		.byte	%10011001
000B38r 2  81           		.byte	%10000001
000B39r 2  81           		.byte	%10000001
000B3Ar 2  81           		.byte	%10000001
000B3Br 2               CRUISER5:
000B3Br 2  10           		.byte	%00010000
000B3Cr 2  30           		.byte	%00110000
000B3Dr 2  4C           		.byte	%01001100
000B3Er 2  9C           		.byte	%10011100
000B3Fr 2  1B           		.byte	%00011011
000B40r 2  02           		.byte	%00000010
000B41r 2  04           		.byte	%00000100
000B42r 2  08           		.byte	%00001000
000B43r 2               CRUISER6:
000B43r 2  FF           		.byte	%11111111
000B44r 2  02           		.byte	%00000010
000B45r 2  04           		.byte	%00000100
000B46r 2  1E           		.byte	%00011110
000B47r 2  1E           		.byte	%00011110
000B48r 2  04           		.byte	%00000100
000B49r 2  02           		.byte	%00000010
000B4Ar 2  FF           		.byte	%11111111
000B4Br 2               CRUISER7:
000B4Br 2  08           		.byte	%00001000
000B4Cr 2  04           		.byte	%00000100
000B4Dr 2  02           		.byte	%00000010
000B4Er 2  1B           		.byte	%00011011
000B4Fr 2  9C           		.byte	%10011100
000B50r 2  4C           		.byte	%01001100
000B51r 2  30           		.byte	%00110000
000B52r 2  10           		.byte	%00010000
000B53r 2               DESTROYER0:
000B53r 2  18           		.byte	%00011000
000B54r 2  18           		.byte	%00011000
000B55r 2  3C           		.byte	%00111100
000B56r 2  3C           		.byte	%00111100
000B57r 2  5A           		.byte	%01011010
000B58r 2  81           		.byte	%10000001
000B59r 2  81           		.byte	%10000001
000B5Ar 2  81           		.byte	%10000001
000B5Br 2               DESTROYER1:
000B5Br 2  03           		.byte	%00000011
000B5Cr 2  7F           		.byte	%01111111
000B5Dr 2  8E           		.byte	%10001110
000B5Er 2  1E           		.byte	%00011110
000B5Fr 2  1A           		.byte	%00011010
000B60r 2  02           		.byte	%00000010
000B61r 2  02           		.byte	%00000010
000B62r 2  04           		.byte	%00000100
000B63r 2               DESTROYER2:
000B63r 2  E0           		.byte	%11100000
000B64r 2  10           		.byte	%00010000
000B65r 2  0C           		.byte	%00001100
000B66r 2  1F           		.byte	%00011111
000B67r 2  1F           		.byte	%00011111
000B68r 2  0C           		.byte	%00001100
000B69r 2  10           		.byte	%00010000
000B6Ar 2  E0           		.byte	%11100000
000B6Br 2               DESTROYER3:
000B6Br 2  04           		.byte	%00000100
000B6Cr 2  02           		.byte	%00000010
000B6Dr 2  02           		.byte	%00000010
000B6Er 2  1A           		.byte	%00011010
000B6Fr 2  1E           		.byte	%00011110
000B70r 2  8E           		.byte	%10001110
000B71r 2  7F           		.byte	%01111111
000B72r 2  03           		.byte	%00000011
000B73r 2               DESTROYER4:
000B73r 2  81           		.byte	%10000001
000B74r 2  81           		.byte	%10000001
000B75r 2  81           		.byte	%10000001
000B76r 2  5A           		.byte	%01011010
000B77r 2  3C           		.byte	%00111100
000B78r 2  3C           		.byte	%00111100
000B79r 2  18           		.byte	%00011000
000B7Ar 2  18           		.byte	%00011000
000B7Br 2               DESTROYER5:
000B7Br 2  20           		.byte	%00100000
000B7Cr 2  40           		.byte	%01000000
000B7Dr 2  40           		.byte	%01000000
000B7Er 2  58           		.byte	%01011000
000B7Fr 2  78           		.byte	%01111000
000B80r 2  71           		.byte	%01110001
000B81r 2  FE           		.byte	%11111110
000B82r 2  C0           		.byte	%11000000
000B83r 2               DESTROYER6:
000B83r 2  07           		.byte	%00000111
000B84r 2  08           		.byte	%00001000
000B85r 2  30           		.byte	%00110000
000B86r 2  F8           		.byte	%11111000
000B87r 2  F8           		.byte	%11111000
000B88r 2  30           		.byte	%00110000
000B89r 2  08           		.byte	%00001000
000B8Ar 2  07           		.byte	%00000111
000B8Br 2               DESTROYER7:
000B8Br 2  C0           		.byte	%11000000
000B8Cr 2  FE           		.byte	%11111110
000B8Dr 2  71           		.byte	%01110001
000B8Er 2  78           		.byte	%01111000
000B8Fr 2  58           		.byte	%01011000
000B90r 2  40           		.byte	%01000000
000B91r 2  40           		.byte	%01000000
000B92r 2  20           		.byte	%00100000
000B93r 2               		;
000B93r 2               CARRIER0:
000B93r 2  01           		.byte	%00000001
000B94r 2  07           		.byte	%00000111
000B95r 2  1F           		.byte	%00011111
000B96r 2  7F           		.byte	%01111111
000B97r 2  9F           		.byte	%10011111
000B98r 2  9F           		.byte	%10011111
000B99r 2  FF           		.byte	%11111111
000B9Ar 2  FE           		.byte	%11111110
000B9Br 2               
000B9Br 2  FE           		.byte	%11111110
000B9Cr 2  F9           		.byte	%11111001
000B9Dr 2  E6           		.byte	%11100110
000B9Er 2  99           		.byte	%10011001
000B9Fr 2  66           		.byte	%01100110
000BA0r 2  19           		.byte	%00011001
000BA1r 2  06           		.byte	%00000110
000BA2r 2  01           		.byte	%00000001
000BA3r 2               
000BA3r 2  80           		.byte	%10000000
000BA4r 2  60           		.byte	%01100000
000BA5r 2  98           		.byte	%10011000
000BA6r 2  66           		.byte	%01100110
000BA7r 2  99           		.byte	%10011001
000BA8r 2  67           		.byte	%01100111
000BA9r 2  9F           		.byte	%10011111
000BAAr 2  7F           		.byte	%01111111
000BABr 2               
000BABr 2  7F           		.byte	%01111111
000BACr 2  FF           		.byte	%11111111
000BADr 2  F9           		.byte	%11111001
000BAEr 2  F9           		.byte	%11111001
000BAFr 2  FE           		.byte	%11111110
000BB0r 2  F8           		.byte	%11111000
000BB1r 2  E0           		.byte	%11100000
000BB2r 2  80           		.byte	%10000000
000BB3r 2               
000BB3r 2               CARRIER1:
000BB3r 2  01           		.byte	%00000001
000BB4r 2  06           		.byte	%00000110
000BB5r 2  1E           		.byte	%00011110
000BB6r 2  7F           		.byte	%01111111
000BB7r 2  BF           		.byte	%10111111
000BB8r 2  AF           		.byte	%10101111
000BB9r 2  AB           		.byte	%10101011
000BBAr 2  AA           		.byte	%10101010
000BBBr 2               
000BBBr 2  AA           		.byte	%10101010
000BBCr 2  AB           		.byte	%10101011
000BBDr 2  AF           		.byte	%10101111
000BBEr 2  BF           		.byte	%10111111
000BBFr 2  7F           		.byte	%01111111
000BC0r 2  1E           		.byte	%00011110
000BC1r 2  06           		.byte	%00000110
000BC2r 2  01           		.byte	%00000001
000BC3r 2               
000BC3r 2  80           		.byte	%10000000
000BC4r 2  60           		.byte	%01100000
000BC5r 2  78           		.byte	%01111000
000BC6r 2  FE           		.byte	%11111110
000BC7r 2  FD           		.byte	%11111101
000BC8r 2  F5           		.byte	%11110101
000BC9r 2  D5           		.byte	%11010101
000BCAr 2  55           		.byte	%01010101
000BCBr 2               
000BCBr 2  55           		.byte	%01010101
000BCCr 2  D5           		.byte	%11010101
000BCDr 2  F5           		.byte	%11110101
000BCEr 2  FD           		.byte	%11111101
000BCFr 2  FE           		.byte	%11111110
000BD0r 2  78           		.byte	%01111000
000BD1r 2  60           		.byte	%01100000
000BD2r 2  80           		.byte	%10000000
000BD3r 2               
000BD3r 2               CARRIER2:
000BD3r 2  01           		.byte	%00000001
000BD4r 2  06           		.byte	%00000110
000BD5r 2  19           		.byte	%00011001
000BD6r 2  66           		.byte	%01100110
000BD7r 2  99           		.byte	%10011001
000BD8r 2  E6           		.byte	%11100110
000BD9r 2  F9           		.byte	%11111001
000BDAr 2  FE           		.byte	%11111110
000BDBr 2               
000BDBr 2  FE           		.byte	%11111110
000BDCr 2  FF           		.byte	%11111111
000BDDr 2  9F           		.byte	%10011111
000BDEr 2  9F           		.byte	%10011111
000BDFr 2  7F           		.byte	%01111111
000BE0r 2  1F           		.byte	%00011111
000BE1r 2  07           		.byte	%00000111
000BE2r 2  01           		.byte	%00000001
000BE3r 2               
000BE3r 2  80           		.byte	%10000000
000BE4r 2  E0           		.byte	%11100000
000BE5r 2  F8           		.byte	%11111000
000BE6r 2  FE           		.byte	%11111110
000BE7r 2  F9           		.byte	%11111001
000BE8r 2  F9           		.byte	%11111001
000BE9r 2  FF           		.byte	%11111111
000BEAr 2  7F           		.byte	%01111111
000BEBr 2               
000BEBr 2  7F           		.byte	%01111111
000BECr 2  9F           		.byte	%10011111
000BEDr 2  67           		.byte	%01100111
000BEEr 2  99           		.byte	%10011001
000BEFr 2  66           		.byte	%01100110
000BF0r 2  98           		.byte	%10011000
000BF1r 2  60           		.byte	%01100000
000BF2r 2  80           		.byte	%10000000
000BF3r 2               ;
000BF3r 2               ; SPRITE #12:
000BF3r 2               ; Omega Fury fighter craft
000BF3r 2               ;
000BF3r 2               FURY0:	;
000BF3r 2  10           		.byte	%00010000
000BF4r 2  10           		.byte	%00010000
000BF5r 2  38           		.byte	%00111000
000BF6r 2  7C           		.byte	%01111100
000BF7r 2  EE           		.byte	%11101110
000BF8r 2  FE           		.byte	%11111110
000BF9r 2  92           		.byte	%10010010
000BFAr 2  00           		.byte	%00000000
000BFBr 2               FURY1:	;
000BFBr 2  04           		.byte	%00000100
000BFCr 2  0C           		.byte	%00001100
000BFDr 2  1C           		.byte	%00011100
000BFEr 2  7C           		.byte	%01111100
000BFFr 2  EC           		.byte	%11101100
000C00r 2  3E           		.byte	%00111110
000C01r 2  3E           		.byte	%00111110
000C02r 2  02           		.byte	%00000010
000C03r 2               FURY2:	;
000C03r 2  02           		.byte	%00000010
000C04r 2  7E           		.byte	%01111110
000C05r 2  FC           		.byte	%11111100
000C06r 2  6C           		.byte	%01101100
000C07r 2  3C           		.byte	%00111100
000C08r 2  3C           		.byte	%00111100
000C09r 2  0C           		.byte	%00001100
000C0Ar 2  04           		.byte	%00000100
000C0Br 2               FURY3:	;
000C0Br 2  C0           		.byte	%11000000
000C0Cr 2  F0           		.byte	%11110000
000C0Dr 2  7E           		.byte	%01111110
000C0Er 2  6C           		.byte	%01101100
000C0Fr 2  78           		.byte	%01111000
000C10r 2  30           		.byte	%00110000
000C11r 2  30           		.byte	%00110000
000C12r 2  20           		.byte	%00100000
000C13r 2               FURY4:	;
000C13r 2  E0           		.byte	%11100000
000C14r 2  70           		.byte	%01110000
000C15r 2  78           		.byte	%01111000
000C16r 2  EE           		.byte	%11101110
000C17r 2  78           		.byte	%01111000
000C18r 2  70           		.byte	%01110000
000C19r 2  E0           		.byte	%11100000
000C1Ar 2  00           		.byte	%00000000
000C1Br 2               FURY5:	;
000C1Br 2  20           		.byte	%00100000
000C1Cr 2  30           		.byte	%00110000
000C1Dr 2  30           		.byte	%00110000
000C1Er 2  78           		.byte	%01111000
000C1Fr 2  6C           		.byte	%01101100
000C20r 2  7E           		.byte	%01111110
000C21r 2  F0           		.byte	%11110000
000C22r 2  C0           		.byte	%11000000
000C23r 2               FURY6:	;
000C23r 2  04           		.byte	%00000100
000C24r 2  0C           		.byte	%00001100
000C25r 2  3C           		.byte	%00111100
000C26r 2  3C           		.byte	%00111100
000C27r 2  6C           		.byte	%01101100
000C28r 2  FC           		.byte	%11111100
000C29r 2  7E           		.byte	%01111110
000C2Ar 2  02           		.byte	%00000010
000C2Br 2               FURY7:	;
000C2Br 2  02           		.byte	%00000010
000C2Cr 2  3E           		.byte	%00111110
000C2Dr 2  3E           		.byte	%00111110
000C2Er 2  EC           		.byte	%11101100
000C2Fr 2  7C           		.byte	%01111100
000C30r 2  1C           		.byte	%00011100
000C31r 2  0C           		.byte	%00001100
000C32r 2  04           		.byte	%00000100
000C33r 2               FURY8:	;
000C33r 2  00           		.byte	%00000000
000C34r 2  92           		.byte	%10010010
000C35r 2  FE           		.byte	%11111110
000C36r 2  EE           		.byte	%11101110
000C37r 2  7C           		.byte	%01111100
000C38r 2  38           		.byte	%00111000
000C39r 2  10           		.byte	%00010000
000C3Ar 2  10           		.byte	%00010000
000C3Br 2               FURY9:	;
000C3Br 2  80           		.byte	%10000000
000C3Cr 2  F8           		.byte	%11111000
000C3Dr 2  F8           		.byte	%11111000
000C3Er 2  6E           		.byte	%01101110
000C3Fr 2  7C           		.byte	%01111100
000C40r 2  70           		.byte	%01110000
000C41r 2  60           		.byte	%01100000
000C42r 2  40           		.byte	%01000000
000C43r 2               FURYA:	;
000C43r 2  40           		.byte	%01000000
000C44r 2  60           		.byte	%01100000
000C45r 2  78           		.byte	%01111000
000C46r 2  78           		.byte	%01111000
000C47r 2  6C           		.byte	%01101100
000C48r 2  7E           		.byte	%01111110
000C49r 2  FC           		.byte	%11111100
000C4Ar 2  80           		.byte	%10000000
000C4Br 2               FURYB:	;
000C4Br 2  08           		.byte	%00001000
000C4Cr 2  18           		.byte	%00011000
000C4Dr 2  18           		.byte	%00011000
000C4Er 2  3C           		.byte	%00111100
000C4Fr 2  6C           		.byte	%01101100
000C50r 2  FC           		.byte	%11111100
000C51r 2  0E           		.byte	%00001110
000C52r 2  06           		.byte	%00000110
000C53r 2               FURYC:	;
000C53r 2  0E           		.byte	%00001110
000C54r 2  1C           		.byte	%00011100
000C55r 2  3C           		.byte	%00111100
000C56r 2  EE           		.byte	%11101110
000C57r 2  3C           		.byte	%00111100
000C58r 2  1C           		.byte	%00011100
000C59r 2  0E           		.byte	%00001110
000C5Ar 2  00           		.byte	%00000000
000C5Br 2               FURYD:	;
000C5Br 2  06           		.byte	%00000110
000C5Cr 2  1E           		.byte	%00011110
000C5Dr 2  FC           		.byte	%11111100
000C5Er 2  6C           		.byte	%01101100
000C5Fr 2  3C           		.byte	%00111100
000C60r 2  18           		.byte	%00011000
000C61r 2  18           		.byte	%00011000
000C62r 2  08           		.byte	%00001000
000C63r 2               FURYE:	;
000C63r 2  80           		.byte	%10000000
000C64r 2  FC           		.byte	%11111100
000C65r 2  7E           		.byte	%01111110
000C66r 2  6C           		.byte	%01101100
000C67r 2  78           		.byte	%01111000
000C68r 2  78           		.byte	%01111000
000C69r 2  60           		.byte	%01100000
000C6Ar 2  40           		.byte	%01000000
000C6Br 2               FURYF:	;
000C6Br 2  40           		.byte	%01000000
000C6Cr 2  60           		.byte	%01100000
000C6Dr 2  70           		.byte	%01110000
000C6Er 2  7C           		.byte	%01111100
000C6Fr 2  6E           		.byte	%01101110
000C70r 2  F8           		.byte	%11111000
000C71r 2  F8           		.byte	%11111000
000C72r 2  80           		.byte	%10000000
000C73r 2               ;
000C73r 2               ; SPRITE #13:
000C73r 2               ; hit mark
000C73r 2               ;
000C73r 2               HITMARK0:
000C73r 2  00           		.byte	%00000000
000C74r 2  10           		.byte	%00010000
000C75r 2  38           		.byte	%00111000
000C76r 2  6C           		.byte	%01101100
000C77r 2  38           		.byte	%00111000
000C78r 2  10           		.byte	%00010000
000C79r 2  00           		.byte	%00000000
000C7Ar 2               HITMARK1:
000C7Ar 2  10           		.byte	%00010000
000C7Br 2  54           		.byte	%01010100
000C7Cr 2  28           		.byte	%00101000
000C7Dr 2  EE           		.byte	%11101110
000C7Er 2  28           		.byte	%00101000
000C7Fr 2  54           		.byte	%01010100
000C80r 2  10           		.byte	%00010000
000C81r 2               ;
000C81r 2               ; SPRITE #14:
000C81r 2               ; big hit mark
000C81r 2               ;
000C81r 2               BIGHITMARK0:
000C81r 2  00           		.byte	%00000000
000C82r 2  00           		.byte	%00000000
000C83r 2  01           		.byte	%00000001
000C84r 2  01           		.byte	%00000001
000C85r 2  01           		.byte	%00000001
000C86r 2  01           		.byte	%00000001
000C87r 2  03           		.byte	%00000011
000C88r 2  1E           		.byte	%00011110
000C89r 2               		;
000C89r 2  03           		.byte	%00000011
000C8Ar 2  01           		.byte	%00000001
000C8Br 2  01           		.byte	%00000001
000C8Cr 2  01           		.byte	%00000001
000C8Dr 2  01           		.byte	%00000001
000C8Er 2  00           		.byte	%00000000
000C8Fr 2  00           		.byte	%00000000
000C90r 2  00           		.byte	%00000000
000C91r 2               		;
000C91r 2  00           		.byte	%00000000
000C92r 2  00           		.byte	%00000000
000C93r 2  00           		.byte	%00000000
000C94r 2  00           		.byte	%00000000
000C95r 2  00           		.byte	%00000000
000C96r 2  00           		.byte	%00000000
000C97r 2  80           		.byte	%10000000
000C98r 2  F0           		.byte	%11110000
000C99r 2               		;
000C99r 2  80           		.byte	%10000000
000C9Ar 2  00           		.byte	%00000000
000C9Br 2  00           		.byte	%00000000
000C9Cr 2  00           		.byte	%00000000
000C9Dr 2  00           		.byte	%00000000
000C9Er 2  00           		.byte	%00000000
000C9Fr 2  00           		.byte	%00000000
000CA0r 2  00           		.byte	%00000000
000CA1r 2               BIGHITMARK1:
000CA1r 2  01           		.byte	%00000001
000CA2r 2  01           		.byte	%00000001
000CA3r 2  03           		.byte	%00000011
000CA4r 2  03           		.byte	%00000011
000CA5r 2  C3           		.byte	%11000011
000CA6r 2  33           		.byte	%00110011
000CA7r 2  0E           		.byte	%00001110
000CA8r 2  7A           		.byte	%01111010
000CA9r 2               		;
000CA9r 2  0E           		.byte	%00001110
000CAAr 2  33           		.byte	%00110011
000CABr 2  C3           		.byte	%11000011
000CACr 2  03           		.byte	%00000011
000CADr 2  03           		.byte	%00000011
000CAEr 2  01           		.byte	%00000001
000CAFr 2  01           		.byte	%00000001
000CB0r 2  00           		.byte	%00000000
000CB1r 2               		;
000CB1r 2  00           		.byte	%00000000
000CB2r 2  00           		.byte	%00000000
000CB3r 2  80           		.byte	%10000000
000CB4r 2  80           		.byte	%10000000
000CB5r 2  86           		.byte	%10000110
000CB6r 2  98           		.byte	%10011000
000CB7r 2  E0           		.byte	%11100000
000CB8r 2  BC           		.byte	%10111100
000CB9r 2               		;
000CB9r 2  E0           		.byte	%11100000
000CBAr 2  98           		.byte	%10011000
000CBBr 2  86           		.byte	%10000110
000CBCr 2  80           		.byte	%10000000
000CBDr 2  80           		.byte	%10000000
000CBEr 2  00           		.byte	%00000000
000CBFr 2  00           		.byte	%00000000
000CC0r 2  00           		.byte	%00000000
000CC1r 2               		;
000CC1r 2               LOGO:
000CC1r 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000CC5r 2  00 00 00 00  
000CC9r 2  00 00 00 00  
000CD2r 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000CD6r 2  00 00 00 00  
000CDAr 2  00 00 00 00  
000CE3r 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000CE7r 2  00 00 00 00  
000CEBr 2  00 00 00 00  
000CF4r 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000CF8r 2  00 00 00 00  
000CFCr 2  00 00 00 00  
000D05r 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000D09r 2  00 00 00 00  
000D0Dr 2  00 00 00 00  
000D16r 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000D1Ar 2  00 00 00 00  
000D1Er 2  00 00 00 00  
000D27r 2  00 07 FF 00  		.byte	%00000000,%00000111,%11111111,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000D2Br 2  00 00 00 00  
000D2Fr 2  00 00 00 00  
000D38r 2  00 1F FF C0  		.byte	%00000000,%00011111,%11111111,%11000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000D3Cr 2  00 00 00 00  
000D40r 2  00 00 00 00  
000D49r 2               		;
000D49r 2  00 7F FF F0  		.byte	%00000000,%01111111,%11111111,%11110000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000D4Dr 2  00 00 00 00  
000D51r 2  00 00 00 00  
000D5Ar 2  01 F8 00 FC  		.byte	%00000001,%11111000,%00000000,%11111100,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000D5Er 2  00 00 00 00  
000D62r 2  00 00 00 00  
000D6Br 2  03 E0 00 3E  		.byte	%00000011,%11100000,%00000000,%00111110,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000D6Fr 2  00 00 00 00  
000D73r 2  00 00 00 00  
000D7Cr 2  07 C1 FC 1F  		.byte	%00000111,%11000001,%11111100,%00011111,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000D80r 2  00 00 00 00  
000D84r 2  00 00 00 00  
000D8Dr 2  0F 07 FF 07  		.byte	%00001111,%00000111,%11111111,%00000111,%10000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000D91r 2  80 00 00 00  
000D95r 2  00 00 00 00  
000D9Er 2  1E 1F FF C3  		.byte	%00011110,%00011111,%11111111,%11000011,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11110000
000DA2r 2  FF FF FF FF  
000DA6r 2  FF FF FF FF  
000DAFr 2  1C 3E 03 E1  		.byte	%00011100,%00111110,%00000011,%11100001,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11100000
000DB3r 2  FF FF FF FF  
000DB7r 2  FF FF FF FF  
000DC0r 2  3C 78 00 F1  		.byte	%00111100,%01111000,%00000000,%11110001,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11100000
000DC4r 2  FF FF FF FF  
000DC8r 2  FF FF FF FF  
000DD1r 2               		;
000DD1r 2  38 F1 FC 78  		.byte	%00111000,%11110001,%11111100,%01111000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000DD5r 2  00 00 00 00  
000DD9r 2  00 00 00 00  
000DE2r 2  71 E7 FF 3C  		.byte	%01110001,%11100111,%11111111,%00111100,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000DE6r 2  00 00 00 00  
000DEAr 2  00 00 00 00  
000DF3r 2  71 CF FF 9C  		.byte	%01110001,%11001111,%11111111,%10011100,%01111111,%11100001,%11111111,%00000011,%11100000,%11100000,%00011111,%11111011,%10000011,%10111111,%11100011,%10000011,%10000000
000DF7r 2  7F E1 FF 03  
000DFBr 2  E0 E0 1F FB  
000E04r 2  E3 9E 03 CE  		.byte	%11100011,%10011110,%00000011,%11001110,%01111111,%11110001,%11111111,%00001111,%11100000,%11100000,%00011111,%11111011,%10000011,%10111111,%11110011,%10000011,%10000000
000E08r 2  7F F1 FF 0F  
000E0Cr 2  E0 E0 1F FB  
000E15r 2  E3 9C 01 CE  		.byte	%11100011,%10011100,%00000001,%11001110,%01111111,%11111001,%11111111,%00011111,%11100000,%11100000,%00011111,%11111011,%10000011,%10111111,%11111001,%11000111,%00000000
000E19r 2  7F F9 FF 1F  
000E1Dr 2  E0 E0 1F FB  
000E26r 2  E7 38 00 E7  		.byte	%11100111,%00111000,%00000000,%11100111,%01110000,%00111100,%00000000,%00111110,%00000000,%01110000,%00000000,%00000011,%10000011,%10000000,%00011001,%11000111,%00000000
000E2Ar 2  70 3C 00 3E  
000E2Er 2  00 70 00 03  
000E37r 2  E7 38 00 E7  		.byte	%11100111,%00111000,%00000000,%11100111,%01110000,%00011100,%00000000,%00111000,%00000000,%01110000,%00000000,%00000011,%10000011,%10000000,%00011000,%11101110,%00000000
000E3Br 2  70 1C 00 38  
000E3Fr 2  00 70 00 03  
000E48r 2  E7 38 00 E7  		.byte	%11100111,%00111000,%00000000,%11100111,%01110011,%10011101,%11111111,%01111001,%11100001,%11110000,%00011111,%11111011,%10000011,%10111111,%11110000,%01111100,%00000000
000E4Cr 2  73 9D FF 79  
000E50r 2  E1 F0 1F FB  
000E59r 2               		;
000E59r 2  E7 38 00 E7  		.byte	%11100111,%00111000,%00000000,%11100111,%01110011,%10011101,%11111111,%01110001,%11100011,%10111000,%00011111,%11111011,%10000011,%10111111,%11100000,%01111100,%00000000
000E5Dr 2  73 9D FF 71  
000E61r 2  E3 B8 1F FB  
000E6Ar 2  E7 38 00 E7  		.byte	%11100111,%00111000,%00000000,%11100111,%01110011,%10011101,%11111111,%01111001,%11100011,%10111000,%00011111,%11111011,%10000011,%10111111,%11110000,%00111000,%00000000
000E6Er 2  73 9D FF 79  
000E72r 2  E3 B8 1F FB  
000E7Br 2  E7 38 00 E7  		.byte	%11100111,%00111000,%00000000,%11100111,%01110011,%10011101,%11000000,%00111000,%01100011,%10111000,%00011100,%00000011,%10000011,%10111000,%01110000,%01110000,%00000000
000E7Fr 2  73 9D C0 38  
000E83r 2  63 B8 1C 03  
000E8Cr 2  E7 38 00 E7  		.byte	%11100111,%00111000,%00000000,%11100111,%01110011,%10011101,%11000000,%00111110,%01100111,%00011100,%00011100,%00000011,%11000111,%10111000,%00111000,%01110000,%00000000
000E90r 2  73 9D C0 3E  
000E94r 2  67 1C 1C 03  
000E9Dr 2  E3 9C 01 CE  		.byte	%11100011,%10011100,%00000001,%11001110,%01110011,%10011101,%11111111,%00011111,%11100111,%11111100,%00011100,%00000011,%11111111,%10111000,%00111000,%11100000,%00000000
000EA1r 2  73 9D FF 1F  
000EA5r 2  E7 FC 1C 03  
000EAEr 2  E3 9E 03 CE  		.byte	%11100011,%10011110,%00000011,%11001110,%01110011,%10011101,%11111111,%00001111,%11100111,%11111100,%00011100,%00000001,%11111111,%00111000,%00111001,%11000000,%00000000
000EB2r 2  73 9D FF 0F  
000EB6r 2  E7 FC 1C 01  
000EBFr 2  71 CF FF 9C  		.byte	%01110001,%11001111,%11111111,%10011100,%01110011,%10011101,%11111111,%00000011,%11001111,%11111110,%00011100,%00000000,%01111100,%00111000,%00111001,%11000000,%00000000
000EC3r 2  73 9D FF 03  
000EC7r 2  CF FE 1C 00  
000ED0r 2  71 E7 FF 3C  		.byte	%01110001,%11100111,%11111111,%00111100,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000ED4r 2  00 00 00 00  
000ED8r 2  00 00 00 00  
000EE1r 2               		;
000EE1r 2  38 F1 FC 78  		.byte	%00111000,%11110001,%11111100,%01111000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000EE5r 2  00 00 00 00  
000EE9r 2  00 00 00 00  
000EF2r 2  3C 78 00 F1  		.byte	%00111100,%01111000,%00000000,%11110001,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%00000000,%00000000
000EF6r 2  FF FF FF FF  
000EFAr 2  FF FF FF FF  
000F03r 2  1C 3E 03 E1  		.byte	%00011100,%00111110,%00000011,%11100001,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111110,%00000000,%00000000
000F07r 2  FF FF FF FF  
000F0Br 2  FF FF FF FF  
000F14r 2  1E 1F FF C3  		.byte	%00011110,%00011111,%11111111,%11000011,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111111,%11111110,%00000000,%00000000
000F18r 2  FF FF FF FF  
000F1Cr 2  FF FF FF FF  
000F25r 2  0F 07 FF 07  		.byte	%00001111,%00000111,%11111111,%00000111,%10000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000F29r 2  80 00 00 00  
000F2Dr 2  00 00 00 00  
000F36r 2  07 C1 FC 1F  		.byte	%00000111,%11000001,%11111100,%00011111,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000F3Ar 2  00 00 00 00  
000F3Er 2  00 00 00 00  
000F47r 2  03 E0 00 3E  		.byte	%00000011,%11100000,%00000000,%00111110,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000F4Br 2  00 00 00 00  
000F4Fr 2  00 00 00 00  
000F58r 2  01 F8 00 FC  		.byte	%00000001,%11111000,%00000000,%11111100,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000F5Cr 2  00 00 00 00  
000F60r 2  00 00 00 00  
000F69r 2               		;
000F69r 2  00 7F FF F0  		.byte	%00000000,%01111111,%11111111,%11110000,%00000011,%11100000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000F6Dr 2  03 E0 00 00  
000F71r 2  00 00 00 00  
000F7Ar 2  00 1F FF C0  		.byte	%00000000,%00011111,%11111111,%11000000,%00000100,%00010011,%10111001,%00010000,%00110001,%00110011,%10110011,%10000010,%10101011,%00011011,%10000000,%00000000,%00000000
000F7Er 2  04 13 B9 10  
000F82r 2  31 33 B3 82  
000F8Br 2  00 07 FF 00  		.byte	%00000000,%00000111,%11111111,%00000000,%00000101,%11010000,%10101011,%00110000,%00101010,%10101010,%00101001,%00000010,%10101010,%10100001,%00000000,%00000000,%00000000
000F8Fr 2  05 D0 AB 30  
000F93r 2  2A AA 29 02  
000F9Cr 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000101,%00010001,%10101001,%00010000,%00110010,%10110011,%00110001,%00000011,%10101011,%00010001,%00000000,%00000000,%00000000
000FA0r 2  05 11 A9 10  
000FA4r 2  32 B3 31 03  
000FADr 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000101,%00010010,%00101001,%00010000,%00101010,%10101010,%00101001,%00000010,%10101010,%10001001,%00000000,%00000000,%00000000
000FB1r 2  05 12 29 10  
000FB5r 2  2A AA 29 02  
000FBEr 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000101,%11010011,%10111011,%10111000,%00101001,%00110011,%10101001,%00000010,%10111010,%10110001,%00000000,%00000000,%00000000
000FC2r 2  05 D3 BB B8  
000FC6r 2  29 33 A9 02  
000FCFr 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000100,%00010000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000FD3r 2  04 10 00 00  
000FD7r 2  00 00 00 00  
000FE0r 2  00 00 00 00  		.byte	%00000000,%00000000,%00000000,%00000000,%00000011,%11100000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000,%00000000
000FE4r 2  03 E0 00 00  
000FE8r 2  00 00 00 00  
000FF1r 2               		;
000FF1r 2               		; a simple bit-mask for register loops
000FF1r 2               ;MASK:	.byte	$01, $02, $04, $08, $10, $20, $40, $80
000FF1r 2               
000FF1r 2               
000FF1r 1               
000FF1r 1               
